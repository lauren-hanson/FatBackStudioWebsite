[{"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/index.js":"1","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/FatBackStudio.js":"2","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/NavBar.js":"3","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/ClientNavBar.js":"4","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/StaffNavBar.js":"5","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/BookingForm.js":"6","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/Requests.js":"7","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/auth/Register.js":"8","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/auth/Login.js":"9","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/MyRequest.js":"10","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/RequestEdit.js":"11","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistList.js":"12","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistContainer.js":"13","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistSearch.js":"14","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffContainer.js":"15","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffSearch.js":"16","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffList.js":"17","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/gallery/GalleryView.js":"18","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/PublicNavBar.js":"19","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/About.js":"20","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/Home.js":"21","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/AddArtist.js":"22","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistEdit.js":"23","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/gallery/AddGalleryImage.js":"24","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/gallery/PublicGalleryView.js":"25","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/calendar/Calendar.js":"26","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistListPublic.js":"27","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/ReserveButton.js":"28","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/BookingStatus.js":"29","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AcceptDenyContainer.js":"30","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/DenyBooking.js":"31","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AcceptBooking.js":"32","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/PendingBooking.js":"33","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/PendingButtons.js":"34","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AcceptButton.js":"35","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/DenyButton.js":"36","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/Authorized.js":"37","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/ApplicationViews.js":"38","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/ClientViews.js":"39","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/PublicViews.js":"40","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/StaffViews.js":"41","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/footer/Footer.js":"42","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/AddStaff.js":"43","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/Greeting.js":"44","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffEdit.js":"45","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/PublicAbout.js":"46","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/PublicHome.js":"47","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/PublicStaffList.js":"48","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/AdminGreeting.js":"49","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/StaffGreeting.js":"50","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/ClientGreeting.js":"51","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/Title.js":"52","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/Schedule.js":"53","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/AdminModal.js":"54","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/StaffModal.js":"55","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/ClientModal.js":"56","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AddNotesDeny.js":"57","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AddNotesAccept.js":"58"},{"size":427,"mtime":1672267035000,"results":"59","hashOfConfig":"60"},{"size":779,"mtime":1672687397084,"results":"61","hashOfConfig":"60"},{"size":561,"mtime":1672775902546,"results":"62","hashOfConfig":"60"},{"size":1490,"mtime":1672776805696,"results":"63","hashOfConfig":"60"},{"size":1761,"mtime":1672777135567,"results":"64","hashOfConfig":"60"},{"size":19218,"mtime":1672689202056,"results":"65","hashOfConfig":"60"},{"size":4682,"mtime":1672762786042,"results":"66","hashOfConfig":"60"},{"size":3407,"mtime":1672419819000,"results":"67","hashOfConfig":"60"},{"size":2570,"mtime":1672689233128,"results":"68","hashOfConfig":"60"},{"size":4845,"mtime":1672757515042,"results":"69","hashOfConfig":"60"},{"size":15060,"mtime":1672695355589,"results":"70","hashOfConfig":"60"},{"size":4082,"mtime":1672689151436,"results":"71","hashOfConfig":"60"},{"size":402,"mtime":1672689184872,"results":"72","hashOfConfig":"60"},{"size":765,"mtime":1672267035000,"results":"73","hashOfConfig":"60"},{"size":392,"mtime":1672267035000,"results":"74","hashOfConfig":"60"},{"size":522,"mtime":1671572328156,"results":"75","hashOfConfig":"76"},{"size":4464,"mtime":1672791050759,"results":"77","hashOfConfig":"60"},{"size":2654,"mtime":1672688992181,"results":"78","hashOfConfig":"60"},{"size":935,"mtime":1672691120005,"results":"79","hashOfConfig":"60"},{"size":554,"mtime":1672688797561,"results":"80","hashOfConfig":"60"},{"size":364,"mtime":1672779188048,"results":"81","hashOfConfig":"60"},{"size":6826,"mtime":1672338833000,"results":"82","hashOfConfig":"60"},{"size":5514,"mtime":1672343308000,"results":"83","hashOfConfig":"60"},{"size":2221,"mtime":1672343644000,"results":"84","hashOfConfig":"60"},{"size":1008,"mtime":1672689015463,"results":"85","hashOfConfig":"60"},{"size":3437,"mtime":1672067807367,"results":"86","hashOfConfig":"76"},{"size":1308,"mtime":1672689061214,"results":"87","hashOfConfig":"60"},{"size":605,"mtime":1672267035000,"results":"88","hashOfConfig":"60"},{"size":451,"mtime":1672780534798,"results":"89","hashOfConfig":"60"},{"size":652,"mtime":1672779965154,"results":"90","hashOfConfig":"60"},{"size":367,"mtime":1672780898387,"results":"91","hashOfConfig":"60"},{"size":595,"mtime":1672267035000,"results":"92","hashOfConfig":"60"},{"size":525,"mtime":1672267035000,"results":"93","hashOfConfig":"60"},{"size":517,"mtime":1672763073066,"results":"94","hashOfConfig":"60"},{"size":1511,"mtime":1672771870077,"results":"95","hashOfConfig":"60"},{"size":1347,"mtime":1672763132268,"results":"96","hashOfConfig":"60"},{"size":271,"mtime":1672777392870,"results":"97","hashOfConfig":"60"},{"size":984,"mtime":1672777462019,"results":"98","hashOfConfig":"60"},{"size":1469,"mtime":1672779129204,"results":"99","hashOfConfig":"60"},{"size":1121,"mtime":1672779105414,"results":"100","hashOfConfig":"60"},{"size":1977,"mtime":1672790303657,"results":"101","hashOfConfig":"60"},{"size":839,"mtime":1672267035000,"results":"102","hashOfConfig":"60"},{"size":7109,"mtime":1672268969000,"results":"103","hashOfConfig":"60"},{"size":2165,"mtime":1672790757410,"results":"104","hashOfConfig":"60"},{"size":7505,"mtime":1672336993000,"results":"105","hashOfConfig":"60"},{"size":613,"mtime":1672688871506,"results":"106","hashOfConfig":"60"},{"size":399,"mtime":1672779152362,"results":"107","hashOfConfig":"60"},{"size":2509,"mtime":1672277029460,"results":"108","hashOfConfig":"60"},{"size":1857,"mtime":1672696056537,"results":"109","hashOfConfig":"60"},{"size":711,"mtime":1672679039343,"results":"110","hashOfConfig":"60"},{"size":709,"mtime":1672693971230,"results":"111","hashOfConfig":"60"},{"size":366,"mtime":1672688892783,"results":"112","hashOfConfig":"60"},{"size":2604,"mtime":1672791517793,"results":"113","hashOfConfig":"60"},{"size":2744,"mtime":1672790637048,"results":"114","hashOfConfig":"60"},{"size":1484,"mtime":1672791843323,"results":"115","hashOfConfig":"60"},{"size":877,"mtime":1672790818283,"results":"116","hashOfConfig":"60"},{"size":3771,"mtime":1672791932190,"results":"117","hashOfConfig":"60"},{"size":3612,"mtime":1672791401174,"results":"118","hashOfConfig":"60"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"bcu0zf",{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lmfn5r",{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"250","usedDeprecatedRules":"122"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"122"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"122"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"122"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/index.js",[],[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/FatBackStudio.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/NavBar.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/ClientNavBar.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/StaffNavBar.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/BookingForm.js",["302","303"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/Requests.js",["304"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/auth/Register.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/auth/Login.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/MyRequest.js",["305"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/RequestEdit.js",["306"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistList.js",["307"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistContainer.js",["308"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistSearch.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffContainer.js",["309"],[],"import { useState } from \"react\"\n//import { StaffSearch } from \"../staff/StaffSearch\"\nimport { StaffList } from \"../staff/StaffList\"\n\nexport const StaffContainer = () => { \n\n    const [searchTerms, setSearchTerms] = useState(\"\")\n\n    return (\n        <>\n        {/* < StaffSearch setterFunction={setSearchTerms}/>  */}\n\n        < StaffList searchTermState={searchTerms}/> \n        </>\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffSearch.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffList.js",["310","311"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/gallery/GalleryView.js",["312"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate, } from \"react-router-dom\"\nimport { Title } from '../home/Title'\nimport \"./Gallery.css\"\n\nexport const GalleryView = () => {\n\n    const [photos, setPhotos] = useState([])\n\n    const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    const navigate = useNavigate()\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/gallery`)\n                .then(response => response.json())\n                .then((photoGallery) =>\n                    setPhotos(photoGallery))\n        },\n        []\n    )\n\n    const getAllImages = () => {\n\n        fetch(`http://localhost:8088/gallery`)\n            .then(response => response.json())\n            .then((photoGallery) => {\n                setPhotos(photoGallery)\n            })\n    }\n\n    const handleDeleteImageButton = (id) => {\n\n        if (fatbackUserObject.admin) {\n            return <button className=\"deleteImageButton\"\n                onClick={() => {\n                    fetch(`http://localhost:8088/gallery/${id}`, {\n                        method: \"DELETE\"\n                    })\n                        .then(() => {\n                            getAllImages()\n                        })\n                }}>Delete</button>\n        }\n        else {\n            return \"\"\n\n        }\n\n    }\n\n    const addPhoto = (event) => {\n        event.preventDefault()\n\n        navigate(`/gallery/addgalleryimage`)\n\n    }\n\n    return (\n        <>\n            <Title />\n            <div className=\"galleryPage\">\n                <h3 className=\"galleryHeader\">Gallery</h3>\n\n                {\n                    fatbackUserObject.admin\n                        ?\n                        <div className=\"button\">\n                            <button\n                                onClick={(clickEvent) => { addPhoto(clickEvent, photos.id) }}\n                                className=\"addNewPhotoButton\">\n                                Add New Photo\n                            </button>\n\n\n                        </div> :\n                        <></>\n                }\n\n                <div className=\"gallery\">\n                    {\n                        photos.map(photo => {\n                            return <div><img className=\"galleryImg\" key={`photo--${photo.id}`}\n                                src={photo.imageURL} />\n                                {handleDeleteImageButton(photo.id)}\n                            </div>\n\n                        }\n                        )\n                    }\n                </div>\n            </div>\n        </>\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/PublicNavBar.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/About.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/Home.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/AddArtist.js",["313"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\n\nimport \"./Artist.css\"\n\nexport const AddArtist = () => {\n\n    const [artists, setArtists] = useState([])\n    const [newArtists, setNewArtist] = useState({\n        artistName: \"\",\n        imageURL: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        notes: \"\"\n    })\n\n\n    // const uploadImage = (files) => { \n    //     console.log(files[0])\n\n    //     const formData = new FormData()\n    //     formData.append(\"file\", files[0])\n    //     formData.append(\"upload_preset\", \"eyzo3sit\")\n\n    //     Axios.post(\"https://api.cloudinary.com/v1_1/dgwi6xvfl/image/upload\", formData).then(response => console.log(response))\n    // }\n\n\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n\n        fetch(`http://localhost:8088/artists`)\n            .then(response => response.json())\n            .then(newArtistInfo => {\n                setArtists(newArtistInfo)\n            })\n\n    }, []\n    )\n\n    const handleSaveNewArtistButton = (event) => {\n        event.preventDefault()\n\n        const newArtistToSendToAPI = {\n            artistName: newArtists.artistName,\n            imageURL: newArtists.imageURL,\n            startDate: newArtists.startDate,\n            endDate: newArtists.endDate,\n            notes: newArtists.notes\n        }\n\n        return fetch(`http://localhost:8088/artists`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newArtistToSendToAPI)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n                navigate(\"/artists\")\n            })\n\n    }\n\n    return (\n\n        <div className=\"addArtistForm\">\n            <form>\n                <h2 className=\"addArtistFormHeader\">Add New Artist</h2>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"name\">Band Name: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={newArtists.artistName}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.artistName = event.target.value\n                                setNewArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"name\">Recording Start Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={newArtists.startDate}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.startDate = event.target.value\n                                setNewArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n                            \n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"name\">Recording End Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={newArtists.endDate}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.endDate = event.target.value\n                                setNewArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                {/* <div className=\"form-group\">\n                        <h3>Image : </h3>\n                        <input\n                            required\n                            id=\"imgURL\"\n                            type=\"file\"\n                            className=\"file-control\"\n                            //placeholder=\"example.com\"\n                            value={newArtists.imageURL}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.imageURL = event.target.files\n                                setNewArtist(copy)\n                            }}\n                        />\n                    </div> */}\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"imgURL\">Image URL: </h3>\n                        <input\n                            required\n                            id=\"imgURL\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"example.com\"\n                            value={newArtists.imageURL}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.imageURL = event.target.value\n                                setNewArtist(copy)\n                            }}\n                        />\n                    </div> \n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"notes\">Notes: </h3>\n                        <textarea\n                            required\n                            id=\"notes\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"\"\n                            value={newArtists.notes}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.notes = event.target.value\n                                setNewArtist(copy)\n                            }}\n                        ></textarea>\n                    </div>\n                </fieldset>\n\n                <button\n                    className=\"saveButton\"\n                    onClick={(event) => {\n                        handleSaveNewArtistButton(event)\n                    }}\n                >\n                    Add New Artist\n                </button>\n            </form>\n        </div>\n\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistEdit.js",["314"],[],"import { useState, useEffect } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport \"./Artist.css\"\n\nexport const ArtistEdit = () => { \n\n    const [editArtist, setEditArtist] = useState({ \n        artistName: \"\", \n        imageURL: \"\", \n        startDate: \"\", \n        endDate: \"\", \n        notes: \"\"\n    })\n\n    const { artistId } = useParams()\n    const navigate = useNavigate()\n\n    useEffect( \n        () => { \n            fetch(`http://localhost:8088/artists/${artistId}`)\n                .then(response => response.json())\n                .then((artistObject) => { \n                    setEditArtist(artistObject)\n                })\n        }, \n        []\n    )\n\n\n    const handleEditButtonClick = (event) => {\n        event.preventDefault()\n\n\n        return fetch(`http://localhost:8088/artists/${artistId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(editArtist)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n                navigate(\"/artists\")\n            })\n    }\n\n    return(\n        <>\n         <div className=\"addArtistForm\">\n            <form>\n                <h2 className=\"addArtistFormHeader\">Add New Artist</h2>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 className=\"label\" htmlFor=\"name\">Band Name: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={editArtist.artistName}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.artistName = event.target.value\n                                setEditArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 className=\"label\" htmlFor=\"name\">Recording Start Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            defaultValue={editArtist.startDate}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.startDate = event.target.value\n                                setEditArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n                            \n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 className=\"label\" htmlFor=\"name\">Recording End Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            defaultValue={editArtist.endDate}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.endDate = event.target.value\n                                setEditArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                <div className=\"form-group\">\n                        <h3 className=\"label\" >Image : </h3>\n                        <input\n                            required\n                            id=\"imgURL\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            //placeholder=\"example.com\"\n                            value={editArtist.imageURL}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.imageURL = event.target.value\n                                setEditArtist(copy)\n                            }}\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 className=\"label\" htmlFor=\"notes\">Notes: </h3>\n                        <textarea\n                            required\n                            id=\"notes\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            defaultValue={editArtist.notes}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.notes = event.target.value\n                                setEditArtist(copy)\n                            }}\n                        ></textarea>\n                    </div>\n                </fieldset>\n\n                <button\n                    className=\"editArtistButton\"\n                    onClick={(clickEvent) => {\n                        handleEditButtonClick(clickEvent)\n                    }}\n                >\n                   Save Changes\n                </button>\n            </form>\n        </div>\n        </>\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/gallery/AddGalleryImage.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/gallery/PublicGalleryView.js",["315"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/calendar/Calendar.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistListPublic.js",["316"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/ReserveButton.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/BookingStatus.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AcceptDenyContainer.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/DenyBooking.js",["317"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AcceptBooking.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/PendingBooking.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/PendingButtons.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AcceptButton.js",["318","319"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/DenyButton.js",["320","321"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/Authorized.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/ApplicationViews.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/ClientViews.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/PublicViews.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/StaffViews.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/footer/Footer.js",["322","323","324"],[],"import \"./Footer.css\"\n\nexport const Footer = () => {\n\n    return (\n            <div className=\"socials\">\n                <a href=\"https://www.instagram.com/fatbacksound/\" target=\"_blank\"><img src=\"https://res.cloudinary.com/dgwi6xvfl/image/upload/v1671822675/FatBack/instagram_logo_ec0ghm.png\" alt=\"instagram logo\" className=\"logo\"/></a>\n                <a href=\"https://www.facebook.com/FatbackSound\" target=\"_blank\"><img src=\"https://res.cloudinary.com/dgwi6xvfl/image/upload/v1671822675/FatBack/facebook_logo_xwzqpd.png\" alt=\"facebook logo\" className=\"logo\"/></a>\n                <a href=\"https://open.spotify.com/playlist/7qi70oRnHLGZINS5cq3sEZ\" target=\"_blank\"><img src=\"https://res.cloudinary.com/dgwi6xvfl/image/upload/v1671826183/FatBack/spotify_xios71.png\" alt=\"spotify logo\" className=\"logo\"/></a>\n            </div>\n    \n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/AddStaff.js",["325","326"],[],"import { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Staff.css\"\n\nexport const AddStaff = () => {\n\n    const [newStaff, setNewStaff] = useState({})\n    //const [newStaffTitle, setNewStaffTitle] = useState({})\n    const [titles, setTitles] = useState([])\n    const [newUser, setNewUser] = useState({\n        isStaff: true,\n        isAdmin: false\n    })\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/titles`)\n            .then(response => response.json())\n            .then((titleArray) => {\n                setTitles(titleArray)\n            })\n    }, [])\n\n    const handleSaveNewStaffButton = (event) => {\n        event.preventDefault()\n\n        const newUserToSendToAPI = {\n            fullName: \"\",\n            email: \"\",\n            isStaff: true,\n            isAdmin: false\n\n        }\n\n        const newStaffToSendToAPI = {\n            startDate: \"\",\n            imageURL: \"\",\n            titleId: 0\n        }\n\n\n        return fetch(`http://localhost:8088/users`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newUser)\n        })\n            .then((response) => response.json())\n\n            .then(newUser => {\n                newStaff.userId = newUser.id\n\n                return fetch(`http://localhost:8088/staff`, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(newStaff)\n                })\n            })\n\n            .then(() => {\n                navigate(\"/aboutFatBack\")\n            })\n\n    }\n\n    return (\n        <div>\n            <h2 className=\"addStaffHeader\">Add New Staff Member</h2>\n            <form className=\"newStaffForm\">\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"name\">Name: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={newUser.fullName}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newUser }\n                                    copy.fullName = event.target.value\n                                    setNewUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"email\">Email: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={newUser.email}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newUser }\n                                    copy.email = event.target.value\n                                    setNewUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\" >Title:</label>\n                        <select id=\"title\" required\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newStaff }\n                                    copy.titleId = parseInt(event.target.value)\n                                    setNewStaff(copy)\n                                }}>\n                            <option value=\"0\"></option>\n\n                            {\n                                titles.map(\n                                    (title) => {\n                                        return <option\n                                            key={`title--${title.id}`}\n                                            value={title.id}\n                                        >{title.type}\n                                        </option>\n                                    }\n                                )\n                            }\n                        </select>\n\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group dateContainer\">\n                        <label className=\"label\" htmlFor=\"startDate\">Start Date: </label>\n                        <input\n                            required autoFocus\n                            type=\"date\"\n                            className=\"form-control\"\n                            value={newStaff.startDate}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newStaff }\n                                    copy.startDate = event.target.value\n                                    setNewStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group imageContainer\">\n                        <label className=\"label\" htmlFor=\"image\">Image: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"example.com\"\n                            value={newStaff.imageURL}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newStaff }\n                                    copy.imageURL = event.target.value\n                                    setNewStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <input onChange={(evt) => {\n                        const copy = { ...newUser }\n                        copy.isAdmin = evt.target.checked\n                        setNewUser(copy)\n                    }}\n                        type=\"checkbox\" id=\"isAdmin\" />\n                    <label htmlFor=\"email\" id=\"isAdmin\"> New Admin? </label>\n                </fieldset>\n\n                <button\n                    className=\"saveNewStaffButton\"\n                    onClick={(event) => {\n                        handleSaveNewStaffButton(event)\n                    }}\n                >\n                    Add New Staff\n                </button>\n            </form>\n        </div>\n    )\n}\n\n","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/Greeting.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffEdit.js",["327","328"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport \"./Staff.css\"\n\nexport const StaffEdit = () => {\n\n    const { staffId } = useParams()\n    const [titles, setTitles] = useState([])\n    const [updateUser, setUpdateUser] = useState({\n        fullName: \"\",\n        email: \"\"\n    })\n    const [updateStaff, setUpdateStaff] = useState({\n        startDate: \"\",\n        imageURL: \"\",\n        titleId: 0\n    })\n\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/users/${staffId}`)\n            .then(response => response.json())\n            .then((staffInfo) => {\n                setUpdateUser(staffInfo)\n            })\n    }, [])\n\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/staff/${staffId}`)\n            .then(response => response.json())\n            .then((staffInfo) => {\n                setUpdateStaff(staffInfo)\n            })\n    }, [])\n\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/titles`)\n            .then(response => response.json())\n            .then((titleArray) => {\n                setTitles(titleArray)\n            })\n    }, [])\n\n\n\n    const handleUpdateStaffButton = (event) => {\n        event.preventDefault()\n\n        return fetch(`http://localhost:8088/users/${staffId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(updateUser)\n        })\n\n            .then((response) => response.json())\n\n            .then(() => {\n                return fetch(`http://localhost:8088/staff/${staffId}`, {\n                    method: \"PUT\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(updateStaff)\n                })\n            })\n\n\n            .then(() => {\n                navigate(\"/aboutFatBack\")\n            })\n\n    }\n\n\n    return (\n\n        <div>\n            <h2 className=\"addStaffHeader\">Edit Staff</h2>\n            <form className=\"newStaffForm\">\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"name\">Name: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={updateUser.fullName}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateUser }\n                                    copy.fullName = event.target.value\n                                    setUpdateUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"email\">Email: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={updateUser.email}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateUser }\n                                    copy.email = event.target.value\n                                    setUpdateUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\" >Title:</label>\n\n                        <option value=\"{updateStaff.titleId}\"></option>\n\n                        <select id=\"title\"\n                            required\n                            value={updateStaff.titleId}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateStaff }\n                                    copy.titleId = parseInt(event.target.value)\n                                    setUpdateStaff(copy)\n                                }}>\n                          \n\n                            {\n                                titles.map(\n                                    (title) => {\n                                        return <option\n                                            key={`title--${title.id}`}\n                                            value={title.id}\n                                        >{title.type}\n                                        </option>\n                                    }\n                                )\n                            }\n                        </select>\n\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group dateContainer\">\n                        <label className=\"label\" htmlFor=\"startDate\">Start Date: </label>\n                        <input\n                            required autoFocus\n                            type=\"date\"\n                            className=\"form-control\"\n                            defaultValue={updateStaff.startDate}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateStaff }\n                                    copy.startDate = event.target.value\n                                    setUpdateStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group imageContainer\">\n                        <label className=\"label\" htmlFor=\"image\">Image: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"example.com\"\n                            value={updateStaff.imageURL}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateStaff }\n                                    copy.imageURL = event.target.value\n                                    setUpdateStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <input onChange={(evt) => {\n                        const copy = { ...updateStaff }\n                        copy.isAdmin = evt.target.checked\n                        setUpdateStaff(copy)\n                    }}\n                        type=\"checkbox\" id=\"isAdmin\" />\n                    <label htmlFor=\"email\" id=\"isAdmin\"> New Admin? </label>\n                </fieldset>\n\n                <button\n                    className=\"saveNewStaffButton\"\n                    onClick={(event) => {\n                        handleUpdateStaffButton(event)\n                    }}\n                >\n                    Save Info\n                </button>\n            </form>\n        </div>\n\n\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/PublicAbout.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/PublicHome.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/PublicStaffList.js",["329","330"],[],"import { useEffect, useState } from 'react'\nimport \"./Staff.css\"\n\nexport const PublicStaffList = () => {\n\n\n    const [staffMembers, setStaff] = useState([])\n    const [filteredStaff, setFilteredStaff] = useState([])\n    const [staffTitles, setTitle] = useState([])\n\n\n    // const sortFilteredStaff = [...filteredStaff].sort((a, b) => a.fullName > b.fullName ? 1 : -1)\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/staff?&_expand=user&_expand=title&_sort=fullName`)\n                .then(response => response.json())\n                .then((staffArray) => {\n                    setStaff(staffArray)\n                })\n        },\n        []\n    )\n\n    useEffect(\n        () => {\n            setFilteredStaff(staffMembers)\n        },\n        [staffMembers]\n    )\n\n\n    // useEffect(\n    //     () => {\n    //         const searchedStaffMembers = staffMembers.filter(staffMember => {\n    //             return staffMember.user.fullName.toLowerCase().startsWith(searchTermState.toLowerCase())\n    //         }\n    //         )\n    //         setFilteredStaff(searchedStaffMembers)\n    //     },\n    //     [searchTermState]\n    // )\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/staff?_expand=title`)\n                .then(response => response.json())\n                .then((titleArray) => {\n                    setTitle(titleArray)\n                })\n\n        },\n        []\n    )\n\n\n    return (\n\n        <div className=\"staffPage\">\n            <h2 className=\"staffHeader\">Our Staff</h2>\n\n            <div className=\"staffMembers\">\n                {\n                    filteredStaff.map((staff) => {\n                        return <div className=\"staff\" key={`staff--${staff.id}`}>\n\n                            <img className=\"staffImg\" src={staff.imageURL} />\n                            <div className=\"staffInfo\">\n                                <div className=\"fullName\">\n                                    {staff?.user?.fullName}</div>\n                                <div className=\"title\">\n                                    {staff?.title?.type}\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                    })\n\n                }\n                {staffTitles.map(title => {\n                    if (title.id === title.titleId) {\n                        return <div className=\"title\">{title.type}</div>\n                    }\n                })}\n\n            </div>\n        </div>\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/AdminGreeting.js",["331","332","333"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/StaffGreeting.js",["334","335"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/ClientGreeting.js",["336","337"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/Title.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/Schedule.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/AdminModal.js",["338"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/StaffModal.js",["339"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/ClientModal.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AddNotesDeny.js",["340"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AddNotesAccept.js",["341"],[],{"ruleId":"342","severity":1,"message":"343","line":35,"column":12,"nodeType":"344","messageId":"345","endLine":35,"endColumn":22},{"ruleId":"346","severity":1,"message":"347","line":61,"column":12,"nodeType":"348","endLine":61,"endColumn":14,"suggestions":"349"},{"ruleId":"350","severity":1,"message":"351","line":24,"column":13,"nodeType":"348","messageId":"352","endLine":24,"endColumn":24},{"ruleId":"346","severity":1,"message":"347","line":25,"column":12,"nodeType":"348","endLine":25,"endColumn":14,"suggestions":"353"},{"ruleId":"346","severity":1,"message":"354","line":38,"column":9,"nodeType":"348","endLine":38,"endColumn":11,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":107,"column":33,"nodeType":"358","endLine":107,"endColumn":84},{"ruleId":"342","severity":1,"message":"359","line":7,"column":25,"nodeType":"344","messageId":"345","endLine":7,"endColumn":39},{"ruleId":"342","severity":1,"message":"359","line":7,"column":25,"nodeType":"344","messageId":"345","endLine":7,"endColumn":39},{"ruleId":"356","severity":1,"message":"357","line":100,"column":29,"nodeType":"358","endLine":100,"endColumn":78},{"ruleId":"360","severity":1,"message":"361","line":129,"column":40,"nodeType":"362","messageId":"363","endLine":129,"endColumn":42},{"ruleId":"356","severity":1,"message":"357","line":85,"column":41,"nodeType":"358","endLine":86,"endColumn":56},{"ruleId":"342","severity":1,"message":"364","line":8,"column":12,"nodeType":"344","messageId":"345","endLine":8,"endColumn":19},{"ruleId":"346","severity":1,"message":"365","line":26,"column":9,"nodeType":"348","endLine":26,"endColumn":11,"suggestions":"366"},{"ruleId":"356","severity":1,"message":"357","line":28,"column":37,"nodeType":"358","endLine":29,"endColumn":58},{"ruleId":"356","severity":1,"message":"357","line":40,"column":33,"nodeType":"358","endLine":40,"endColumn":84},{"ruleId":"342","severity":1,"message":"367","line":1,"column":10,"nodeType":"344","messageId":"345","endLine":1,"endColumn":21},{"ruleId":"342","severity":1,"message":"368","line":7,"column":12,"nodeType":"344","messageId":"345","endLine":7,"endColumn":20},{"ruleId":"350","severity":1,"message":"351","line":20,"column":12,"nodeType":"348","messageId":"352","endLine":20,"endColumn":23},{"ruleId":"342","severity":1,"message":"368","line":6,"column":12,"nodeType":"344","messageId":"345","endLine":6,"endColumn":20},{"ruleId":"350","severity":1,"message":"351","line":16,"column":12,"nodeType":"348","messageId":"352","endLine":16,"endColumn":23},{"ruleId":"369","severity":1,"message":"370","line":7,"column":17,"nodeType":"358","messageId":"371","endLine":7,"endColumn":83,"fix":"372"},{"ruleId":"369","severity":1,"message":"370","line":8,"column":17,"nodeType":"358","messageId":"371","endLine":8,"endColumn":81,"fix":"373"},{"ruleId":"369","severity":1,"message":"370","line":9,"column":17,"nodeType":"358","messageId":"371","endLine":9,"endColumn":100,"fix":"374"},{"ruleId":"342","severity":1,"message":"375","line":28,"column":15,"nodeType":"344","messageId":"345","endLine":28,"endColumn":33},{"ruleId":"342","severity":1,"message":"376","line":36,"column":15,"nodeType":"344","messageId":"345","endLine":36,"endColumn":34},{"ruleId":"346","severity":1,"message":"377","line":28,"column":8,"nodeType":"348","endLine":28,"endColumn":10,"suggestions":"378"},{"ruleId":"346","severity":1,"message":"377","line":37,"column":8,"nodeType":"348","endLine":37,"endColumn":10,"suggestions":"379"},{"ruleId":"356","severity":1,"message":"357","line":67,"column":29,"nodeType":"358","endLine":67,"endColumn":78},{"ruleId":"360","severity":1,"message":"361","line":82,"column":40,"nodeType":"362","messageId":"363","endLine":82,"endColumn":42},{"ruleId":"342","severity":1,"message":"380","line":8,"column":12,"nodeType":"344","messageId":"345","endLine":8,"endColumn":27},{"ruleId":"381","severity":1,"message":"382","line":16,"column":13,"nodeType":"383","messageId":"384","endLine":16,"endColumn":36},{"ruleId":"346","severity":1,"message":"385","line":71,"column":9,"nodeType":"348","endLine":71,"endColumn":11,"suggestions":"386"},{"ruleId":"342","severity":1,"message":"387","line":9,"column":11,"nodeType":"344","messageId":"345","endLine":9,"endColumn":28},{"ruleId":"346","severity":1,"message":"388","line":33,"column":9,"nodeType":"348","endLine":33,"endColumn":11,"suggestions":"389"},{"ruleId":"342","severity":1,"message":"387","line":9,"column":11,"nodeType":"344","messageId":"345","endLine":9,"endColumn":28},{"ruleId":"346","severity":1,"message":"388","line":33,"column":9,"nodeType":"348","endLine":33,"endColumn":11,"suggestions":"390"},{"ruleId":"391","severity":1,"message":"392","line":41,"column":6,"nodeType":"393","messageId":"394","endLine":44,"endColumn":20},{"ruleId":"391","severity":1,"message":"392","line":50,"column":1,"nodeType":"393","messageId":"394","endLine":53,"endColumn":14},{"ruleId":"346","severity":1,"message":"395","line":26,"column":12,"nodeType":"348","endLine":26,"endColumn":14,"suggestions":"396"},{"ruleId":"346","severity":1,"message":"395","line":18,"column":12,"nodeType":"348","endLine":18,"endColumn":14,"suggestions":"397"},"no-unused-vars","'newClients' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fatbackUserObject.id'. Either include it or remove the dependency array.","ArrayExpression",["398"],"no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray",["399"],"React Hook useEffect has a missing dependency: 'requestId'. Either include it or remove the dependency array.",["400"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setSearchTerms' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'artists' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'artistId'. Either include it or remove the dependency array.",["401"],"'useNavigate' is defined but never used.","'requests' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"402","text":"403"},{"range":"404","text":"403"},{"range":"405","text":"403"},"'newUserToSendToAPI' is assigned a value but never used.","'newStaffToSendToAPI' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'staffId'. Either include it or remove the dependency array.",["406"],["407"],"'pendingRequests' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook useEffect has missing dependencies: 'refresh' and 'windowAlert'. Either include them or remove the dependency array. You can also do a functional update 'setRefresh(r => ...)' if you only need 'refresh' in the 'setRefresh' call.",["408"],"'fatbackUserObject' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array. You can also do a functional update 'setRefresh(r => ...)' if you only need 'refresh' in the 'setRefresh' call.",["409"],["410"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["411"],["412"],{"desc":"413","fix":"414"},{"desc":"413","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},[186,186]," rel=\"noreferrer\"",[417,417],[665,665],{"desc":"420","fix":"421"},{"desc":"420","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"425","fix":"427"},{"desc":"428","fix":"429"},{"desc":"428","fix":"430"},"Update the dependencies array to be: [fatbackUserObject.id]",{"range":"431","text":"432"},{"range":"433","text":"432"},"Update the dependencies array to be: [requestId]",{"range":"434","text":"435"},"Update the dependencies array to be: [artistId]",{"range":"436","text":"437"},"Update the dependencies array to be: [staffId]",{"range":"438","text":"439"},{"range":"440","text":"439"},"Update the dependencies array to be: [refresh, windowAlert]",{"range":"441","text":"442"},"Update the dependencies array to be: [refresh]",{"range":"443","text":"444"},{"range":"445","text":"444"},"Update the dependencies array to be: [id]",{"range":"446","text":"447"},{"range":"448","text":"447"},[1596,1598],"[fatbackUserObject.id]",[791,793],[1017,1019],"[requestId]",[683,685],"[artistId]",[722,724],"[staffId]",[952,954],[1848,1850],"[refresh, windowAlert]",[701,703],"[refresh]",[702,704],[664,666],"[id]",[499,501]]