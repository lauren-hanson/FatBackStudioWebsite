[{"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/index.js":"1","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/FatBackStudio.js":"2","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/footer/Footer.js":"3","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/nav/NavBar.js":"4","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/auth/Login.js":"5","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/views/ApplicationViews.js":"6","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/views/Authorized.js":"7","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/auth/Register.js":"8","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/nav/StaffNavBar.js":"9","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/views/StaffViews.js":"10","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/views/ClientViews.js":"11","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/nav/PublicNavBar.js":"12","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/nav/ClientNavBar.js":"13","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/views/PublicViews.js":"14","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/Home.js":"15","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/artists/AddArtist.js":"16","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/artists/ArtistEdit.js":"17","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/About.js":"18","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/artists/ArtistContainer.js":"19","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/PublicHome.js":"20","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/PublicAbout.js":"21","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/staff/AddStaff.js":"22","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/Schedule.js":"23","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/Requests.js":"24","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/BookingForm.js":"25","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/MyRequest.js":"26","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/RequestEdit.js":"27","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/staff/StaffEdit.js":"28","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/artists/ArtistListPublic.js":"29","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/ReserveButton.js":"30","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/gallery/GalleryView.js":"31","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/gallery/PublicGalleryView.js":"32","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/gallery/AddGalleryImage.js":"33","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/Greeting.js":"34","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/AcceptDenyContainer.js":"35","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/BookingStatus.js":"36","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/staff/StaffContainer.js":"37","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/artists/ArtistList.js":"38","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/Title.js":"39","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/staff/PublicStaffList.js":"40","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/AddNotesAccept.js":"41","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/AcceptBooking.js":"42","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/PendingBooking.js":"43","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/DenyBooking.js":"44","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/ClientModal.js":"45","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/StaffModal.js":"46","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/AdminModal.js":"47","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/PendingButtons.js":"48","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/AddNotesDeny.js":"49","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/staff/StaffList.js":"50","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/AcceptButton.js":"51","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/DenyButton.js":"52"},{"size":427,"mtime":1679674101884,"results":"53","hashOfConfig":"54"},{"size":779,"mtime":1679674101846,"results":"55","hashOfConfig":"54"},{"size":839,"mtime":1679674101862,"results":"56","hashOfConfig":"54"},{"size":596,"mtime":1679674101873,"results":"57","hashOfConfig":"54"},{"size":2570,"mtime":1679674101853,"results":"58","hashOfConfig":"54"},{"size":984,"mtime":1679674101881,"results":"59","hashOfConfig":"54"},{"size":271,"mtime":1679674101882,"results":"60","hashOfConfig":"54"},{"size":3407,"mtime":1679674101853,"results":"61","hashOfConfig":"54"},{"size":1957,"mtime":1679674101874,"results":"62","hashOfConfig":"54"},{"size":1977,"mtime":1679674101883,"results":"63","hashOfConfig":"54"},{"size":1469,"mtime":1679674101882,"results":"64","hashOfConfig":"54"},{"size":935,"mtime":1679674101874,"results":"65","hashOfConfig":"54"},{"size":1490,"mtime":1679674101872,"results":"66","hashOfConfig":"54"},{"size":1121,"mtime":1679674101883,"results":"67","hashOfConfig":"54"},{"size":364,"mtime":1679674101868,"results":"68","hashOfConfig":"54"},{"size":6826,"mtime":1679674101847,"results":"69","hashOfConfig":"54"},{"size":5514,"mtime":1679674101848,"results":"70","hashOfConfig":"54"},{"size":554,"mtime":1679674101865,"results":"71","hashOfConfig":"54"},{"size":402,"mtime":1679674101848,"results":"72","hashOfConfig":"54"},{"size":399,"mtime":1679674101869,"results":"73","hashOfConfig":"54"},{"size":613,"mtime":1679674101868,"results":"74","hashOfConfig":"54"},{"size":7109,"mtime":1679674101874,"results":"75","hashOfConfig":"54"},{"size":2832,"mtime":1679674101860,"results":"76","hashOfConfig":"54"},{"size":4682,"mtime":1679674101860,"results":"77","hashOfConfig":"54"},{"size":19317,"mtime":1679674101856,"results":"78","hashOfConfig":"54"},{"size":5063,"mtime":1679674101858,"results":"79","hashOfConfig":"54"},{"size":15060,"mtime":1679674101859,"results":"80","hashOfConfig":"54"},{"size":7505,"mtime":1679674101875,"results":"81","hashOfConfig":"54"},{"size":1308,"mtime":1679674101849,"results":"82","hashOfConfig":"54"},{"size":605,"mtime":1679674101869,"results":"83","hashOfConfig":"54"},{"size":2654,"mtime":1679674101864,"results":"84","hashOfConfig":"54"},{"size":1008,"mtime":1679674101864,"results":"85","hashOfConfig":"54"},{"size":2221,"mtime":1679674101863,"results":"86","hashOfConfig":"54"},{"size":2160,"mtime":1679674101867,"results":"87","hashOfConfig":"54"},{"size":652,"mtime":1679674101854,"results":"88","hashOfConfig":"54"},{"size":514,"mtime":1679674101857,"results":"89","hashOfConfig":"54"},{"size":392,"mtime":1679674101875,"results":"90","hashOfConfig":"54"},{"size":4082,"mtime":1679674101848,"results":"91","hashOfConfig":"54"},{"size":366,"mtime":1679674101872,"results":"92","hashOfConfig":"54"},{"size":2509,"mtime":1679674101875,"results":"93","hashOfConfig":"54"},{"size":3612,"mtime":1679674101855,"results":"94","hashOfConfig":"54"},{"size":595,"mtime":1679674101853,"results":"95","hashOfConfig":"54"},{"size":525,"mtime":1679674101858,"results":"96","hashOfConfig":"54"},{"size":1087,"mtime":1679674101857,"results":"97","hashOfConfig":"54"},{"size":877,"mtime":1679674101867,"results":"98","hashOfConfig":"54"},{"size":1484,"mtime":1679674101870,"results":"99","hashOfConfig":"54"},{"size":2744,"mtime":1679674101866,"results":"100","hashOfConfig":"54"},{"size":517,"mtime":1679674101859,"results":"101","hashOfConfig":"54"},{"size":3755,"mtime":1679674101855,"results":"102","hashOfConfig":"54"},{"size":4464,"mtime":1679674101876,"results":"103","hashOfConfig":"54"},{"size":1511,"mtime":1679674101854,"results":"104","hashOfConfig":"54"},{"size":1347,"mtime":1679674101858,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"leeg4t",{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/index.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/FatBackStudio.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/footer/Footer.js",["286","287","288"],[],"import \"./Footer.css\"\n\nexport const Footer = () => {\n\n    return (\n            <div className=\"socials\">\n                <a href=\"https://www.instagram.com/fatbacksound/\" target=\"_blank\"><img src=\"https://res.cloudinary.com/dgwi6xvfl/image/upload/v1671822675/FatBack/instagram_logo_ec0ghm.png\" alt=\"instagram logo\" className=\"logo\"/></a>\n                <a href=\"https://www.facebook.com/FatbackSound\" target=\"_blank\"><img src=\"https://res.cloudinary.com/dgwi6xvfl/image/upload/v1671822675/FatBack/facebook_logo_xwzqpd.png\" alt=\"facebook logo\" className=\"logo\"/></a>\n                <a href=\"https://open.spotify.com/playlist/7qi70oRnHLGZINS5cq3sEZ\" target=\"_blank\"><img src=\"https://res.cloudinary.com/dgwi6xvfl/image/upload/v1671826183/FatBack/spotify_xios71.png\" alt=\"spotify logo\" className=\"logo\"/></a>\n            </div>\n    \n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/nav/NavBar.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/auth/Login.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/views/ApplicationViews.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/views/Authorized.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/auth/Register.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/nav/StaffNavBar.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/views/StaffViews.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/views/ClientViews.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/nav/PublicNavBar.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/nav/ClientNavBar.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/views/PublicViews.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/Home.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/artists/AddArtist.js",["289"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\n\nimport \"./Artist.css\"\n\nexport const AddArtist = () => {\n\n    const [artists, setArtists] = useState([])\n    const [newArtists, setNewArtist] = useState({\n        artistName: \"\",\n        imageURL: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        notes: \"\"\n    })\n\n\n    // const uploadImage = (files) => { \n    //     console.log(files[0])\n\n    //     const formData = new FormData()\n    //     formData.append(\"file\", files[0])\n    //     formData.append(\"upload_preset\", \"eyzo3sit\")\n\n    //     Axios.post(\"https://api.cloudinary.com/v1_1/dgwi6xvfl/image/upload\", formData).then(response => console.log(response))\n    // }\n\n\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n\n        fetch(`http://localhost:8088/artists`)\n            .then(response => response.json())\n            .then(newArtistInfo => {\n                setArtists(newArtistInfo)\n            })\n\n    }, []\n    )\n\n    const handleSaveNewArtistButton = (event) => {\n        event.preventDefault()\n\n        const newArtistToSendToAPI = {\n            artistName: newArtists.artistName,\n            imageURL: newArtists.imageURL,\n            startDate: newArtists.startDate,\n            endDate: newArtists.endDate,\n            notes: newArtists.notes\n        }\n\n        return fetch(`http://localhost:8088/artists`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newArtistToSendToAPI)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n                navigate(\"/artists\")\n            })\n\n    }\n\n    return (\n\n        <div className=\"addArtistForm\">\n            <form>\n                <h2 className=\"addArtistFormHeader\">Add New Artist</h2>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"name\">Band Name: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={newArtists.artistName}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.artistName = event.target.value\n                                setNewArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"name\">Recording Start Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={newArtists.startDate}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.startDate = event.target.value\n                                setNewArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n                            \n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"name\">Recording End Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={newArtists.endDate}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.endDate = event.target.value\n                                setNewArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                {/* <div className=\"form-group\">\n                        <h3>Image : </h3>\n                        <input\n                            required\n                            id=\"imgURL\"\n                            type=\"file\"\n                            className=\"file-control\"\n                            //placeholder=\"example.com\"\n                            value={newArtists.imageURL}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.imageURL = event.target.files\n                                setNewArtist(copy)\n                            }}\n                        />\n                    </div> */}\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"imgURL\">Image URL: </h3>\n                        <input\n                            required\n                            id=\"imgURL\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"example.com\"\n                            value={newArtists.imageURL}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.imageURL = event.target.value\n                                setNewArtist(copy)\n                            }}\n                        />\n                    </div> \n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"notes\">Notes: </h3>\n                        <textarea\n                            required\n                            id=\"notes\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"\"\n                            value={newArtists.notes}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.notes = event.target.value\n                                setNewArtist(copy)\n                            }}\n                        ></textarea>\n                    </div>\n                </fieldset>\n\n                <button\n                    className=\"saveButton\"\n                    onClick={(event) => {\n                        handleSaveNewArtistButton(event)\n                    }}\n                >\n                    Add New Artist\n                </button>\n            </form>\n        </div>\n\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/artists/ArtistEdit.js",["290"],[],"import { useState, useEffect } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport \"./Artist.css\"\n\nexport const ArtistEdit = () => { \n\n    const [editArtist, setEditArtist] = useState({ \n        artistName: \"\", \n        imageURL: \"\", \n        startDate: \"\", \n        endDate: \"\", \n        notes: \"\"\n    })\n\n    const { artistId } = useParams()\n    const navigate = useNavigate()\n\n    useEffect( \n        () => { \n            fetch(`http://localhost:8088/artists/${artistId}`)\n                .then(response => response.json())\n                .then((artistObject) => { \n                    setEditArtist(artistObject)\n                })\n        }, \n        []\n    )\n\n\n    const handleEditButtonClick = (event) => {\n        event.preventDefault()\n\n\n        return fetch(`http://localhost:8088/artists/${artistId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(editArtist)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n                navigate(\"/artists\")\n            })\n    }\n\n    return(\n        <>\n         <div className=\"addArtistForm\">\n            <form>\n                <h2 className=\"addArtistFormHeader\">Add New Artist</h2>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 className=\"label\" htmlFor=\"name\">Band Name: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={editArtist.artistName}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.artistName = event.target.value\n                                setEditArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 className=\"label\" htmlFor=\"name\">Recording Start Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            defaultValue={editArtist.startDate}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.startDate = event.target.value\n                                setEditArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n                            \n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 className=\"label\" htmlFor=\"name\">Recording End Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            defaultValue={editArtist.endDate}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.endDate = event.target.value\n                                setEditArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                <div className=\"form-group\">\n                        <h3 className=\"label\" >Image : </h3>\n                        <input\n                            required\n                            id=\"imgURL\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            //placeholder=\"example.com\"\n                            value={editArtist.imageURL}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.imageURL = event.target.value\n                                setEditArtist(copy)\n                            }}\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 className=\"label\" htmlFor=\"notes\">Notes: </h3>\n                        <textarea\n                            required\n                            id=\"notes\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            defaultValue={editArtist.notes}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.notes = event.target.value\n                                setEditArtist(copy)\n                            }}\n                        ></textarea>\n                    </div>\n                </fieldset>\n\n                <button\n                    className=\"editArtistButton\"\n                    onClick={(clickEvent) => {\n                        handleEditButtonClick(clickEvent)\n                    }}\n                >\n                   Save Changes\n                </button>\n            </form>\n        </div>\n        </>\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/About.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/artists/ArtistContainer.js",["291"],[],"import { useState } from \"react\"\n//import { ArtistSearch } from \"../artists/ArtistSearch\"\nimport { ArtistList } from \"../artists/ArtistList\"\n\nexport const ArtistContainer = () => { \n\n    const [searchTerms, setSearchTerms] = useState(\"\")\n\n    return (\n        <>\n        {/* < ArtistSearch setterFunction={setSearchTerms}/>  */}\n        < ArtistList searchTermState={searchTerms}/> \n        </>\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/PublicHome.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/PublicAbout.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/staff/AddStaff.js",["292","293"],[],"import { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Staff.css\"\n\nexport const AddStaff = () => {\n\n    const [newStaff, setNewStaff] = useState({})\n    //const [newStaffTitle, setNewStaffTitle] = useState({})\n    const [titles, setTitles] = useState([])\n    const [newUser, setNewUser] = useState({\n        isStaff: true,\n        isAdmin: false\n    })\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/titles`)\n            .then(response => response.json())\n            .then((titleArray) => {\n                setTitles(titleArray)\n            })\n    }, [])\n\n    const handleSaveNewStaffButton = (event) => {\n        event.preventDefault()\n\n        const newUserToSendToAPI = {\n            fullName: \"\",\n            email: \"\",\n            isStaff: true,\n            isAdmin: false\n\n        }\n\n        const newStaffToSendToAPI = {\n            startDate: \"\",\n            imageURL: \"\",\n            titleId: 0\n        }\n\n\n        return fetch(`http://localhost:8088/users`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newUser)\n        })\n            .then((response) => response.json())\n\n            .then(newUser => {\n                newStaff.userId = newUser.id\n\n                return fetch(`http://localhost:8088/staff`, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(newStaff)\n                })\n            })\n\n            .then(() => {\n                navigate(\"/aboutFatBack\")\n            })\n\n    }\n\n    return (\n        <div>\n            <h2 className=\"addStaffHeader\">Add New Staff Member</h2>\n            <form className=\"newStaffForm\">\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"name\">Name: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={newUser.fullName}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newUser }\n                                    copy.fullName = event.target.value\n                                    setNewUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"email\">Email: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={newUser.email}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newUser }\n                                    copy.email = event.target.value\n                                    setNewUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\" >Title:</label>\n                        <select id=\"title\" required\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newStaff }\n                                    copy.titleId = parseInt(event.target.value)\n                                    setNewStaff(copy)\n                                }}>\n                            <option value=\"0\"></option>\n\n                            {\n                                titles.map(\n                                    (title) => {\n                                        return <option\n                                            key={`title--${title.id}`}\n                                            value={title.id}\n                                        >{title.type}\n                                        </option>\n                                    }\n                                )\n                            }\n                        </select>\n\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group dateContainer\">\n                        <label className=\"label\" htmlFor=\"startDate\">Start Date: </label>\n                        <input\n                            required autoFocus\n                            type=\"date\"\n                            className=\"form-control\"\n                            value={newStaff.startDate}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newStaff }\n                                    copy.startDate = event.target.value\n                                    setNewStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group imageContainer\">\n                        <label className=\"label\" htmlFor=\"image\">Image: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"example.com\"\n                            value={newStaff.imageURL}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newStaff }\n                                    copy.imageURL = event.target.value\n                                    setNewStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <input onChange={(evt) => {\n                        const copy = { ...newUser }\n                        copy.isAdmin = evt.target.checked\n                        setNewUser(copy)\n                    }}\n                        type=\"checkbox\" id=\"isAdmin\" />\n                    <label htmlFor=\"email\" id=\"isAdmin\"> New Admin? </label>\n                </fieldset>\n\n                <button\n                    className=\"saveNewStaffButton\"\n                    onClick={(event) => {\n                        handleSaveNewStaffButton(event)\n                    }}\n                >\n                    Add New Staff\n                </button>\n            </form>\n        </div>\n    )\n}\n\n","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/Schedule.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/Requests.js",["294"],[],"import { useState, useEffect } from \"react\"\nimport { useNavigate, Link } from \"react-router-dom\"\nimport { AcceptDenyContainer } from \"./AcceptDenyContainer.js\"\nimport { Title } from '../home/Title'\nimport \"./Requests.css\"\n\n\nexport const Requests = () => {\n\n    const [requests, setRequest] = useState([])\n    const [refresh, setRefresh] = useState(true)\n    const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    const navigate = useNavigate()\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests?_expand=genre&_sort=startDate`)\n                .then(response => response.json())\n                .then((requestInfo) => {\n                    setRequest(requestInfo)\n                })\n         }, [, refresh]\n    )\n\n    return (<>\n        <Title />\n        <div className=\"myrequests\">\n            {requests.length ?\n                <div key={`requests--${requests.id}`}>\n                    <h2 className=\"requestHeader\">Studio Requests</h2>\n                    <div className=\"requestBox\">\n                        {requests.map(request => {\n                            return (<>\n                                <div className=\"requestInfo trapezoid\" key={`request--${request.id}`}>\n                                    <div id=\"text\">\n                                        <div>Band Name: {request.bandName}</div>\n                                        <div>Phone Number: {request.phoneNumber}</div>\n                                        <div>Start Date: {request.startDate}</div>\n                                        <div>End Date: {request.endDate}</div>\n                                        <div>No. of Songs: {request.numOfSongs}</div>\n                                        <div>Genre: {request?.genre?.type}</div>\n                                        <div className=\"radioAnswers\">\n                                            <div className=\"radioReview\"> Musicians\n                                                {request.musicianRequest === true ?\n                                                    <div>✔️</div> :\n                                                    <div>✖️</div>\n                                                }\n                                            </div>\n\n\n                                            <div className=\"radioReview\">Session Musicians\n                                                {request.sessionMusicians === true ?\n                                                    <div>✔️ </div> :\n                                                    <div>✖️</div>\n                                                }\n\n                                            </div>\n\n                                            <div className=\"radioReview\">Photos\n                                                {request.photoRequest === true ?\n                                                    <div>✔️</div> :\n                                                    <div>✖️</div>\n                                                }\n\n                                            </div>\n\n                                            <div className=\"radioReview\">Video Request\n                                                {request.videoRequest === true ?\n                                                    <div>✔️</div> :\n                                                    <div>✖️</div>\n                                                }\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <br></br>\n                                    <br></br>\n\n                                    {fatbackUserObject.admin ?\n                                        <div className=\"statusContainer\">\n                                            <AcceptDenyContainer refresh={refresh} setRefresh={setRefresh} requests={request} id={request.id} />\n                                        </div> : \"\"}\n                                </div>\n\n                            </>)\n                        })}\n                    </div>\n                </div> :\n\n                <div>FatBack currently has no booking requests.</div>\n            }\n\n        </div >\n        <div className=\"futureBookingsLink\"\n            onClick={() => {\n                navigate(\"/schedule\")\n            }}>\n            <p className=\"futureBookingText\">See your <Link to=\"/schedule\" id=\"link\">future bookings </Link></p>\n        </div>\n    </>)\n}\n\n//Add in a place to write notes about the session for planning or saying how it went ","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/BookingForm.js",["295","296","297"],[],"import { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { BookingStatus } from \"./BookingStatus.js\"\nimport { Title } from '../home/Title'\nimport \"./BookingForm.css\"\n\n\nexport const BookingForm = () => {\n\n    const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    const [refresh, setRefresh] = useState(true)\n    const [genres, setGenres] = useState([])\n    const [requests, setRequests] = useState([])\n\n    const [request, setBookingForm] = useState({\n\n        bandName: \"\",\n        phoneNumber: \"\",\n        genreId: 0,\n        numOfSongs: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        musicianRequest: false,\n        sessionMusicians: false,\n        photoRequest: false,\n        videoRequest: false,\n        userId: fatbackUserObject.id,\n        isPending: false,\n        isAccepted: false,\n        isDenied: false\n\n    })\n\n    const [newClients, setNewClients] = useState({\n        userId: 0,\n        isArtist: true\n    })\n\n    const navigate = useNavigate()\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/genres`)\n                .then(response => response.json())\n                .then((genreArray) => {\n                    setGenres(genreArray)\n                })\n        },\n        []\n\n    )\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests?_expand=genre&userId=${fatbackUserObject.id}`)\n                .then(response => response.json())\n                .then((requestInfo) => {\n                    setRequests(requestInfo[0])\n                })\n        }, [, refresh]\n    )\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/clients`)\n                .then(response => response.json())\n                .then((newClientInfo) => {\n                    setNewClients(newClientInfo)\n                })\n        },\n        []\n    )\n\n\n    const submitButtonClick = (event) => {\n        event.preventDefault()\n\n        const newBookingRequest = {\n            bandName: request.bandName,\n            phoneNumber: request.phoneNumber,\n            genreId: request.genreId,\n            numOfSongs: request.numOfSongs,\n            startDate: request.startDate,\n            endDate: request.endDate,\n            musicianRequest: request.musicianRequest,\n            sessionMusicians: request.sessionMusicians,\n            photoRequest: request.photoRequest,\n            videoRequest: request.videoRequest,\n            userId: fatbackUserObject.id,\n            isPending: true,\n            isAccepted: false,\n            isDenied: false\n        }\n\n        const newClientDataToSendToAPI = {\n            userId: fatbackUserObject.id,\n            isArtist: true\n        }\n\n        return fetch(`http://localhost:8088/requests`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newBookingRequest)\n        })\n\n            .then(response => response.json())\n\n            .then(newClient => {\n                request.userId = newClient.id\n                return fetch(`http://localhost:8088/clients`, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(newClientDataToSendToAPI)\n                })\n            })\n            .then(() => {\n                navigate(`/myrequest`)\n            })\n\n    }\n\n    return (\n        <>\n        <Title/> \n            {requests ?\n                <BookingStatus requests={requests} setRefresh={setRefresh} refresh={refresh}/> :\n                < div className=\"bookingForm\" >\n                    <h2 className=\"bookingHeader\">Booking Form</h2>\n                    <form>\n\n                        <fieldset >\n                            <div className=\"form-group\">\n                                <label className=\"label\" htmlFor=\"bandName\">Band Name: </label>\n                                <input\n                                    required \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={request.bandName}\n                                    onChange={\n                                        (event) => {\n                                            const copy = { ...request }\n                                            copy.bandName = event.target.value\n                                            setBookingForm(copy)\n                                        }\n                                    }\n                                />\n                            </div>\n                        </fieldset>\n\n                        <fieldset>\n                            <div className=\"form-group\">\n                                <label className=\"label\" htmlFor=\"phoneNumber\">\n                                    Phone Number:\n                                </label>\n                                <input\n                                    required \n                                    type=\"text\"\n                                    className=\"form-control\"\n\n                                    value={request.phoneNumber}\n                                    onChange={\n                                        (event) => {\n                                            const copy = { ...request }\n                                            copy.phoneNumber = event.target.value\n                                            setBookingForm(copy)\n                                        }\n                                    }\n                                />\n\n                            </div>\n                        </fieldset>\n\n                        <fieldset>\n                            <div className=\"form-group\">\n                                <label className=\"label genre\" htmlFor=\"genre\">Choose a genre:</label>\n                                <select id=\"genre\" required\n                                    onChange={\n                                        (event) => {\n                                            const copy = { ...request }\n                                            copy.genreId = parseInt(event.target.value)\n                                            setBookingForm(copy)\n                                        }}>\n                                    <option value=\"0\">Genre...</option>\n\n                                    {\n                                        genres.map(\n                                            (genre) => {\n                                                return <option\n                                                    key={`genre--${genre.id}`}\n                                                    value={genre.id}\n                                                >{genre.type}\n                                                </option>\n                                            }\n                                        )\n                                    }\n                                </select>\n\n                            </div>\n                        </fieldset>\n\n                        <fieldset>\n                            <div className=\"form-group\">\n                                <label className=\"label\" htmlFor=\"songs\">\n                                    No. of Songs:\n                                </label>\n                                <input\n                                    required \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={request.numOfSongs}\n                                    onChange={\n                                        (event) => {\n                                            const copy = { ...request }\n                                            copy.numOfSongs = event.target.value\n                                            setBookingForm(copy)\n                                        }\n                                    }\n\n                                />\n\n                            </div>\n                        </fieldset>\n\n                        <fieldset>\n                            <div className=\"form-group\">\n                                <label className=\"label\" htmlFor=\"date\">\n                                    Start Date:\n                                </label>\n\n                                <input\n                            \n                                    type=\"date\"\n                                    required\n                                    className=\"form-control\"\n                                    id=\"startDate\"\n                                    onChange={\n                                        (event) => {\n                                            const copy = { ...request }\n                                            copy.startDate = event.target.value\n                                            setBookingForm(copy)\n                                        }\n                                    }\n\n                                />\n\n                            </div>\n                        </fieldset>\n\n                        <fieldset>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"date\">\n                                    End Date:\n                                </label>\n\n                                <input\n                                    max={request.endDate}\n                                    required\n                                    type=\"date\"\n                                    className=\"form-control\"\n                                    id=\"endDate\"\n                                    onChange={\n                                        (event) => {\n                                            const copy = { ...request }\n                                            copy.endDate = event.target.value\n                                            setBookingForm(copy)\n                                        }\n                                    }\n\n                                />\n\n                            </div>\n                        </fieldset>\n\n                        <fieldset>\n                            <div className=\"form-group\">\n                                <label className=\"label\" htmlFor=\"band\">\n                                    Do you have musicians or a band?\n                                </label>\n                                <div className=\"radioLabel\">\n                                    <input\n\n                                        type=\"radio\"\n                                        className=\"form-control\"\n                                        value={true}\n                                        name=\"musicians\"\n                                        onClick={\n                                            () => {\n                                                const copy = { ...request }\n                                                copy.musicianRequest = true\n                                                setBookingForm(copy)\n                                            }\n                                        }\n                                    />\n                                    <label className=\"radioLabel\">Yes</label>\n\n                                    <input\n\n                                        type=\"radio\"\n                                        className=\"form-control\"\n                                        value={false}\n                                        name=\"musicians\"\n                                        onClick={\n                                            () => {\n                                                const copy = { ...request }\n                                                copy.musicianRequest = false\n                                                setBookingForm(copy)\n                                            }\n                                        }\n\n                                    />\n                                    <label className=\"radioLabel\" >No</label>\n\n                                </div>\n                            </div>\n                        </fieldset>\n\n                        <fieldset>\n                            <div className=\"form-group\">\n                                <label className=\"label\" htmlFor=\"session\">\n                                    Would you like session musicians?\n                                </label>\n                                <div className=\"radioLabel\">\n                                    <input\n\n                                        required \n                                        type=\"radio\"\n                                        className=\"form-control\"\n                                        value={true}\n                                        name=\"session\"\n                                        onClick={\n                                            () => {\n                                                const copy = { ...request }\n                                                copy.sessionMusicians = true\n                                                setBookingForm(copy)\n                                            }\n                                        }\n                                    />\n                                    <label className=\"radioLabel\"\n                                    >Yes</label>\n\n                                    <input\n                                        required \n                                        type=\"radio\"\n                                        className=\"form-control\"\n                                        value={false}\n                                        name=\"session\"\n                                        onClick={\n                                            () => {\n                                                const copy = { ...request }\n                                                copy.sessionMusicians = false\n                                                setBookingForm(copy)\n                                            }\n                                        }\n                                    />\n                                    <label className=\"radioLabel\"\n                                    >No</label>\n\n                                </div>\n\n                            </div>\n                        </fieldset>\n\n                        <fieldset>\n                            <div className=\"form-group\">\n                                <label className=\"label\" htmlFor=\"photo\">\n                                    Do you want photos?\n                                </label>\n                                <div className=\"radioLabel\">\n                                    <input\n\n                                        required \n                                        type=\"radio\"\n                                        className=\"form-control\"\n                                        value={true}\n                                        name=\"photo\"\n                                        onClick={\n                                            () => {\n                                                const copy = { ...request }\n                                                copy.photoRequest = true\n                                                setBookingForm(copy)\n                                            }\n                                        }\n                                    />\n                                    <label className=\"radioLabel\">Yes</label>\n\n                                    <input\n                                        required \n                                        type=\"radio\"\n                                        className=\"form-control\"\n                                        value={false}\n                                        name=\"photo\"\n                                        onClick={\n                                            () => {\n                                                const copy = { ...request }\n                                                copy.photoRequest = false\n                                                setBookingForm(copy)\n                                            }\n                                        }\n                                    />\n                                    <label className=\"radioLabel\">No</label>\n\n                                </div>\n\n                            </div>\n                        </fieldset>\n\n                        <fieldset>\n                            <div className=\"form-group\">\n                                <label className=\"label\" htmlFor=\"photo\">\n                                    Do you want video?\n                                </label>\n\n                                <div className=\"radioLabel\">\n                                    <input\n\n                                        required \n                                        type=\"radio\"\n                                        className=\"form-control\"\n                                        value={true}\n                                        name=\"video\"\n                                        onClick={\n                                            () => {\n                                                const copy = { ...request }\n                                                copy.videoRequest = true\n                                                setBookingForm(copy)\n                                            }\n                                        }\n                                    />\n                                    <label className=\"radioLabel\"\n                                    >Yes</label>\n\n                                    <input\n                                        required \n                                        type=\"radio\"\n                                        className=\"form-control\"\n                                        value={false}\n                                        name=\"video\"\n                                        onClick={\n                                            () => {\n                                                const copy = { ...request }\n                                                copy.videoRequest = false\n                                                setBookingForm(copy)\n                                            }\n                                        }\n                                    />\n                                    <label className=\"radioLabel\"\n                                    >No</label>\n\n                                </div>\n                            </div>\n                        </fieldset>\n                        <button\n                            onClick={(clickEvent) => {\n                                submitButtonClick(clickEvent)\n                            }}\n                            className=\"submitFormButton\">\n                            Submit Request\n                        </button>\n                    </form>\n                </div>}\n        </>\n\n    )\n}\n\n\n\n","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/MyRequest.js",["298"],[],"import { useState, useEffect } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { Title } from '../home/Title'\nimport \"./BookingForm\"\n\n\nexport const MyRequest = () => {\n\n    const { requestId } = useParams()\n\n    const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    const [requests, setRequest] = useState([])\n    // const [client, setClients] = useState({})\n    const navigate = useNavigate()\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests?_expand=genre&userId=${fatbackUserObject.id}`)\n                .then(response => response.json())\n                .then((requestInfo) => {\n                    setRequest(requestInfo)\n                })\n        }, []\n    )\n\n\n    const handleEditButtonClick = (event, request) => {\n        event.preventDefault()\n\n        navigate(`/myrequest/${request}`)\n    }\n\n    const getAllRequests = () => {\n        fetch(`http://localhost:8088/requests?_expand=genre&userId=${fatbackUserObject.id}`)\n            .then(response => response.json())\n            .then((requestInfo) => {\n                setRequest(requestInfo)\n            })\n    }\n\n    const deleteButton = (id) => {\n        //if (!fatbackUserObject.staff) \n        return <button\n            onClick={() => {\n                fetch(`http://localhost:8088/requests/${id}`, {\n                    method: \"DELETE\"\n                })\n                    .then(\n                        window.alert(\"Your request has been deleted.\")\n                    )\n                    .then(() => {\n                        getAllRequests()\n                    })\n\n                    .then(\n                        navigate(\"/home\")\n                    )\n\n\n\n\n\n\n                // .then(() => {\n                //     setTimeout(() => navigate(\"/\"), 3000);\n                // })\n            }}\n            className=\"deleteRequestButton\">\n            Delete Request</button>\n    }\n\n    return (\n        <div >\n            <Title />\n\n\n            {requests.length ?\n                <div className=\"request\" key={`requests--${requests.id}`}>\n                    <h2 className=\"requestHeader\">My Request</h2>\n                    {requests.map(request => {\n                        return (<>\n                            <div id=\"myrequest\" key={requestId}>\n                                <div>Band Name: {request?.bandName}</div>\n                                <div>Phone Number: {request?.phoneNumber}</div>\n                                <div>Start Date: {request?.startDate}</div>\n                                <div>End Date: {request?.endDate}</div>\n                                <div>No. of Songs: {request?.numOfSongs}</div>\n                                <div>Genre: {request?.genre?.type}</div>\n\n                                <div className=\"radioReview\">Musicians:\n                                    {request.musicianRequest === true ?\n                                        <div> Yes</div> :\n                                        <div> No</div>\n                                    }\n\n                                </div>\n\n                                <div className=\"radioReview\">Session Musicians:\n                                    {request.sessionMusicians === true ?\n                                        <div> Yes</div> :\n                                        <div> No</div>\n                                    }\n\n                                </div>\n\n                                <div className=\"radioReview\">Photos:\n                                    {request.photoRequest === true ?\n                                        <div> Yes</div> :\n                                        <div> No</div>\n                                    }\n\n                                </div>\n\n                                <div className=\"radioReview\">Video Request:\n                                    {request.videoRequest === true ?\n                                        <div>Yes</div> :\n                                        <div>No</div>\n                                    }\n\n                                </div>\n\n\n                                {request.isAccepted ?\n                                    <div className=\"checkMark\"> ✅ </div> :\n                                    <div className=\"buttonContainer\">\n                                        <button\n                                            onClick={(clickEvent) => { handleEditButtonClick(clickEvent, request.id) }}\n                                            className=\"editRequestButton\">\n                                            Edit Request\n                                        </button>\n\n                                        {deleteButton(request.id)}\n\n                                    </div>\n                                }\n                            </div>\n                        </>)\n                    })}\n                </div> :\n\n                <div>NO REQUESTS...</div>\n\n            }\n\n        </div >\n\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/RequestEdit.js",["299"],[],"import { useState, useEffect } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport \"./BookingForm.css\"\n\nexport const RequestEdit = () => {\n\n    const { requestId } = useParams()\n\n    // const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    // const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    const [genres, setGenres] = useState([])\n    const [editRequests, setEditRequest] = useState({\n\n        bandName: \"\",\n        phoneNumber: \"\",\n        genreId: 0,\n        numOfSongs: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        musicianRequest: false,\n        sessionMusicians: false,\n        photoRequest: false,\n        videoRequest: false\n\n    })\n\n    const navigate = useNavigate()\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests/${requestId}`)\n                .then(response => response.json())\n                .then((requestObject) => {\n                    setEditRequest(requestObject)\n                })\n        },\n        []\n    )\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/genres`)\n                .then(response => response.json())\n                .then((genreArray) => {\n                    setGenres(genreArray)\n                })\n        },\n        []\n\n    )\n\n    const handleSaveButtonClick = (event) => {\n        event.preventDefault()\n\n        return fetch(`http://localhost:8088/requests/${requestId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(editRequests)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n                navigate(\"/myrequest\")\n            })\n\n    }\n\n    return (\n        <div className=\"bookingForm\">\n            <h2 className=\"editRequestHeader\">Edit Your Request</h2>\n\n            <form className=\"editRequest popup\" id=\"popup\">\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"bandName\">Band Name: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            defaultValue={editRequests.bandName}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...editRequests }\n                                    copy.bandName = event.target.value\n                                    setEditRequest(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n\n\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"phoneNumber\">\n                            Phone Number:\n                        </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            defaultValue={editRequests.phoneNumber}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...editRequests }\n                                    copy.phoneNumber = event.target.value\n                                    setEditRequest(copy)\n                                }\n                            }\n                        />\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group selectGenre\">\n                        <label htmlFor=\"genre\" className=\"label\">Choose a genre:</label>\n                        <select id=\"genre\"\n                            required\n                            value={editRequests?.genreId}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...editRequests }\n                                    copy.genreId = parseInt(event.target.value)\n                                    setEditRequest(copy)\n                                }}>\n                            <option\n                                value=\"{editRequests.genreId}\"></option>\n\n                            {\n                                genres.map(\n                                    (genre) => {\n                                        return <option\n                                            key={`genre--${genre.id}`}\n                                            value={genre.id}\n                                        >{genre.type}</option>\n                                    }\n                                )\n                            }\n                        </select>\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"songs\">\n                            No. of Songs:\n                        </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={editRequests.numOfSongs}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...editRequests }\n                                    copy.numOfSongs = event.target.value\n                                    setEditRequest(copy)\n                                }\n                            }\n\n                        />\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"date\">\n                            Start Date:\n                        </label>\n                        <input\n\n                            type=\"date\"\n                            required\n                            className=\"form-control\"\n                            defaultValue={editRequests.startDate}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...editRequests }\n                                    copy.startDate = event.target.value\n                                    setEditRequest(copy)\n                                }\n                            }\n\n                        />\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"date\">\n                            End Date:\n                        </label>\n                        <input\n                            required\n                            type=\"date\"\n                            className=\"form-control\"\n                            defaultValue={editRequests.endDate}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...editRequests }\n                                    copy.endDate = event.target.value\n                                    setEditRequest(copy)\n                                }\n                            }\n\n                        />\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"band\">\n                            Do you have musicians or a band?\n                        </label>\n\n                        <div className=\"radioLabel\">\n                            <input\n\n                                type=\"radio\"\n                                checked={editRequests.musicianRequest === true}\n                                name=\"musicians\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.musicianRequest = true\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n\n                            <label className=\"radioLabel\">Yes</label>\n\n                            <input\n\n                                type=\"radio\"\n                                checked={editRequests.musicianRequest === false}\n                                name=\"musicians\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.musicianRequest = false\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\" >No</label>\n\n                        </div>\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n\n\n                        <label className=\"label\" htmlFor=\"band\">\n                            Would you like session musicians?\n                        </label>\n\n\n                        <div className=\"radioLabel\">\n                            <input\n\n                                type=\"radio\"\n                                checked={editRequests.sessionMusicians === true}\n                                id=\"yes\"\n                                name=\"session\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.sessionMusicians = true\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\"\n                            >Yes</label>\n\n                            <input\n\n                                type=\"radio\"\n                                checked={editRequests.sessionMusicians === false}\n                                id=\"no\"\n                                name=\"session\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.sessionMusicians = false\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\"\n                            >No</label>\n\n                        </div>\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n\n                        <label className=\"label\" htmlFor=\"photo\">\n                            Do you want photos?\n                        </label>\n\n\n                        <div className=\"radioLabel\">\n                            <input\n                                type=\"radio\"\n                                checked={editRequests.photoRequest === true}\n                                //value={editRequests.photoRequest}\n                                name=\"photo\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.photoRequest = true\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\">Yes</label>\n\n                            <input\n                                type=\"radio\"\n                                checked={editRequests.photoRequest === false}\n                                //value={editRequests.photoRequest}\n                                name=\"photo\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.photoRequest = false\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\">No</label>\n\n                        </div>\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n\n                        <label className=\"label\" htmlFor=\"video\">\n                            Do you want video?\n                        </label>\n\n\n                        <div className=\"radioLabel\">\n                            <input\n                                type=\"radio\"\n                                checked={editRequests.videoRequest === true}\n\n                                name=\"video\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.videoRequest = true\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\"\n                            >Yes</label>\n\n                            <input\n                                checked={editRequests.videoRequest === false}\n                                type=\"radio\"\n\n                                name=\"video\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.videoRequest = false\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\"\n                            >No</label>\n                        </div>\n                    </div>\n                </fieldset>\n\n\n\n                <button\n                    onClick={(clickEvent) => {\n                        handleSaveButtonClick(clickEvent)\n                    }}\n                    className=\"saveEditButton\">\n                    Save Changes\n                </button>\n            </form>\n        </div>\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/staff/StaffEdit.js",["300","301"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport \"./Staff.css\"\n\nexport const StaffEdit = () => {\n\n    const { staffId } = useParams()\n    const [titles, setTitles] = useState([])\n    const [updateUser, setUpdateUser] = useState({\n        fullName: \"\",\n        email: \"\"\n    })\n    const [updateStaff, setUpdateStaff] = useState({\n        startDate: \"\",\n        imageURL: \"\",\n        titleId: 0\n    })\n\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/users/${staffId}`)\n            .then(response => response.json())\n            .then((staffInfo) => {\n                setUpdateUser(staffInfo)\n            })\n    }, [])\n\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/staff/${staffId}`)\n            .then(response => response.json())\n            .then((staffInfo) => {\n                setUpdateStaff(staffInfo)\n            })\n    }, [])\n\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/titles`)\n            .then(response => response.json())\n            .then((titleArray) => {\n                setTitles(titleArray)\n            })\n    }, [])\n\n\n\n    const handleUpdateStaffButton = (event) => {\n        event.preventDefault()\n\n        return fetch(`http://localhost:8088/users/${staffId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(updateUser)\n        })\n\n            .then((response) => response.json())\n\n            .then(() => {\n                return fetch(`http://localhost:8088/staff/${staffId}`, {\n                    method: \"PUT\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(updateStaff)\n                })\n            })\n\n\n            .then(() => {\n                navigate(\"/aboutFatBack\")\n            })\n\n    }\n\n\n    return (\n\n        <div>\n            <h2 className=\"addStaffHeader\">Edit Staff</h2>\n            <form className=\"newStaffForm\">\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"name\">Name: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={updateUser.fullName}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateUser }\n                                    copy.fullName = event.target.value\n                                    setUpdateUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"email\">Email: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={updateUser.email}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateUser }\n                                    copy.email = event.target.value\n                                    setUpdateUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\" >Title:</label>\n\n                        <option value=\"{updateStaff.titleId}\"></option>\n\n                        <select id=\"title\"\n                            required\n                            value={updateStaff.titleId}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateStaff }\n                                    copy.titleId = parseInt(event.target.value)\n                                    setUpdateStaff(copy)\n                                }}>\n                          \n\n                            {\n                                titles.map(\n                                    (title) => {\n                                        return <option\n                                            key={`title--${title.id}`}\n                                            value={title.id}\n                                        >{title.type}\n                                        </option>\n                                    }\n                                )\n                            }\n                        </select>\n\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group dateContainer\">\n                        <label className=\"label\" htmlFor=\"startDate\">Start Date: </label>\n                        <input\n                            required autoFocus\n                            type=\"date\"\n                            className=\"form-control\"\n                            defaultValue={updateStaff.startDate}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateStaff }\n                                    copy.startDate = event.target.value\n                                    setUpdateStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group imageContainer\">\n                        <label className=\"label\" htmlFor=\"image\">Image: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"example.com\"\n                            value={updateStaff.imageURL}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateStaff }\n                                    copy.imageURL = event.target.value\n                                    setUpdateStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <input onChange={(evt) => {\n                        const copy = { ...updateStaff }\n                        copy.isAdmin = evt.target.checked\n                        setUpdateStaff(copy)\n                    }}\n                        type=\"checkbox\" id=\"isAdmin\" />\n                    <label htmlFor=\"email\" id=\"isAdmin\"> New Admin? </label>\n                </fieldset>\n\n                <button\n                    className=\"saveNewStaffButton\"\n                    onClick={(event) => {\n                        handleUpdateStaffButton(event)\n                    }}\n                >\n                    Save Info\n                </button>\n            </form>\n        </div>\n\n\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/artists/ArtistListPublic.js",["302"],[],"import { useEffect, useState } from 'react'\nimport { Title } from '../home/Title'\n\nimport \"./Artist.css\"\n\nexport const ArtistListPublic = () => {\n\n    const [artists, setArtists] = useState([])\n    const [filteredArtists, setFilteredArtists] = useState([])\n\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/artists?_sort=artistName[desc]`)\n                .then(response => response.json())\n                .then((artistArray) => {\n                    setArtists(artistArray)\n                })\n        },\n        []\n    )\n\n    useEffect(\n        () => {\n            setFilteredArtists(artists)\n        },\n        [artists]\n    )\n\n\n    return (\n        <>\n        <Title /> \n            < div className=\"artistPage\" >\n                <h2 className=\"artistHeader\">Artists</h2>\n                <div className=\"artists\">\n                    {\n                        filteredArtists.map((artist) => {\n                            return <div className=\"artist\" key={`artist--${artist.id}`}>\n                                <img className=\"artistImg\" src={artist.imageURL} />\n                                <div>{artist.artistName}</div>\n                            </div>\n                        })\n                    }\n                </div>\n\n\n\n            </div >\n        </>\n\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/ReserveButton.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/gallery/GalleryView.js",["303"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate, } from \"react-router-dom\"\nimport { Title } from '../home/Title'\nimport \"./Gallery.css\"\n\nexport const GalleryView = () => {\n\n    const [photos, setPhotos] = useState([])\n\n    const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    const navigate = useNavigate()\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/gallery`)\n                .then(response => response.json())\n                .then((photoGallery) =>\n                    setPhotos(photoGallery))\n        },\n        []\n    )\n\n    const getAllImages = () => {\n\n        fetch(`http://localhost:8088/gallery`)\n            .then(response => response.json())\n            .then((photoGallery) => {\n                setPhotos(photoGallery)\n            })\n    }\n\n    const handleDeleteImageButton = (id) => {\n\n        if (fatbackUserObject.admin) {\n            return <button className=\"deleteImageButton\"\n                onClick={() => {\n                    fetch(`http://localhost:8088/gallery/${id}`, {\n                        method: \"DELETE\"\n                    })\n                        .then(() => {\n                            getAllImages()\n                        })\n                }}>Delete</button>\n        }\n        else {\n            return \"\"\n\n        }\n\n    }\n\n    const addPhoto = (event) => {\n        event.preventDefault()\n\n        navigate(`/gallery/addgalleryimage`)\n\n    }\n\n    return (\n        <>\n            <Title />\n            <div className=\"galleryPage\">\n                <h3 className=\"galleryHeader\">Gallery</h3>\n\n                {\n                    fatbackUserObject.admin\n                        ?\n                        <div className=\"button\">\n                            <button\n                                onClick={(clickEvent) => { addPhoto(clickEvent, photos.id) }}\n                                className=\"addNewPhotoButton\">\n                                Add New Photo\n                            </button>\n\n\n                        </div> :\n                        <></>\n                }\n\n                <div className=\"gallery\">\n                    {\n                        photos.map(photo => {\n                            return <div><img className=\"galleryImg\" key={`photo--${photo.id}`}\n                                src={photo.imageURL} />\n                                {handleDeleteImageButton(photo.id)}\n                            </div>\n\n                        }\n                        )\n                    }\n                </div>\n            </div>\n        </>\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/gallery/PublicGalleryView.js",["304"],[],"import { useEffect, useState } from 'react'\nimport { Title } from '../home/Title'\nimport \"./Gallery.css\"\n\nexport const PublicGalleryView = () => {\n\n    const [publicPhotos, setPublicPhotos] = useState([])\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/gallery`)\n                .then(response => response.json())\n                .then((photoGallery) =>\n                setPublicPhotos(photoGallery))\n        },\n        []\n    )\n\n\n    return (\n        <>\n        <Title/>\n        <div className=\"galleryPage\">\n            <h3 className=\"galleryHeader\">Gallery</h3>\n            <div className=\"gallery\">\n                {\n                    publicPhotos.map(publicPhoto => {\n                        return <div><img className=\"galleryImg\" key={`publicPhoto--${publicPhoto.id}`}\n                            src={publicPhoto.imageURL} />\n                        </div>\n\n                    }\n                    )\n                }\n            </div>\n        </div>\n        </>\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/gallery/AddGalleryImage.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/Greeting.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/AcceptDenyContainer.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/BookingStatus.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/staff/StaffContainer.js",["305"],[],"import { useState } from \"react\"\n//import { StaffSearch } from \"../staff/StaffSearch\"\nimport { StaffList } from \"../staff/StaffList\"\n\nexport const StaffContainer = () => { \n\n    const [searchTerms, setSearchTerms] = useState(\"\")\n\n    return (\n        <>\n        {/* < StaffSearch setterFunction={setSearchTerms}/>  */}\n\n        < StaffList searchTermState={searchTerms}/> \n        </>\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/artists/ArtistList.js",["306"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport { Title } from '../home/Title'\nimport \"./Artist.css\"\n\n\nexport const ArtistList = ({ searchTermState }) => {\n\n    const [artists, setArtists] = useState([])\n    const [filteredArtists, setFilteredArtists] = useState([])\n\n    const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    const navigate = useNavigate()\n\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/artists`)\n                .then(response => response.json())\n                .then((artistArray) => {\n                    setArtists(artistArray)\n                })\n        },\n        []\n    )\n\n    useEffect(\n        () => {\n            setFilteredArtists(artists)\n        },\n        [artists]\n    )\n\n    // useEffect(\n    //     () => {\n    //         const searchedArtist = artists.filter(artist => {\n    //             return artist.artistName.toLowerCase().startsWith(searchTermState.toLowerCase())\n    //         }\n    //         )\n    //         setFilteredArtists(searchedArtist)\n    //     },\n    //     [searchTermState]\n\n    // )\n\n    const addArtistButton = (event) => {\n        event.preventDefault()\n\n        navigate(`/artists/addartist`)\n\n    }\n\n    const editArtistButton = (event, artists) => {\n        event.preventDefault()\n\n        navigate(`/artists/${artists}/edit`)\n\n    }\n\n    const getAllArtists = () => {\n\n        fetch(`http://localhost:8088/artists`)\n            .then(response => response.json())\n            .then((artistArray) => {\n                setArtists(artistArray)\n            })\n    }\n\n    const handleDeleteArtistButton = (id) => {\n\n        return fetch(`http://localhost:8088/artists/${id}`, {\n            method: \"DELETE\"\n        })\n            .then(() => {\n                getAllArtists()\n            })\n    }\n\n    return (\n        <>\n         <Title />\n            < div className=\"artistPage\" >\n                <h2 className=\"artistHeader\">Artists</h2>\n\n                {\n                    fatbackUserObject.admin\n                        ?\n                        <div className=\"button\">\n                            <button\n                                onClick={(clickEvent) => { addArtistButton(clickEvent, artists.id) }}\n                                className=\"addArtistButton\">\n                                Add New Artist\n                            </button>\n\n\n                        </div> :\n                        <></>\n\n                }\n                \n                <div className=\"artists\">\n                    {\n                        filteredArtists.map((artist) => {\n                            return <div className=\"artist\" key={`artist--${artist.id}`}>\n                                <img className=\"artistImg\" src={artist.imageURL} />\n                                <div>{artist.artistName}</div><br></br>\n                                {fatbackUserObject.admin ? <><div className=\"artistInfo\">{artist.notes}</div><br></br>\n                                    <div>Recording Date: {artist.startDate} - {artist.endDate}</div>\n                                    <div className=\"editDeleteButtonContainer\">\n                                        <button className=\"editButton\"\n                                            onClick={(clickEvent) => {\n                                                editArtistButton(clickEvent, artist.id)\n                                            }}\n                                        >Edit</button>\n                                        <button className=\"deleteButton\"\n                                            onClick={() => {\n                                                handleDeleteArtistButton(artist.id)\n                                            }}>Delete</button></div></> : \"\"\n                                }\n                            </div>\n                            \n                        })\n                    }\n                </div>\n\n\n\n            </div >\n        </>\n\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/Title.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/staff/PublicStaffList.js",["307","308"],[],"import { useEffect, useState } from 'react'\nimport \"./Staff.css\"\n\nexport const PublicStaffList = () => {\n\n\n    const [staffMembers, setStaff] = useState([])\n    const [filteredStaff, setFilteredStaff] = useState([])\n    const [staffTitles, setTitle] = useState([])\n\n\n    // const sortFilteredStaff = [...filteredStaff].sort((a, b) => a.fullName > b.fullName ? 1 : -1)\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/staff?&_expand=user&_expand=title&_sort=fullName`)\n                .then(response => response.json())\n                .then((staffArray) => {\n                    setStaff(staffArray)\n                })\n        },\n        []\n    )\n\n    useEffect(\n        () => {\n            setFilteredStaff(staffMembers)\n        },\n        [staffMembers]\n    )\n\n\n    // useEffect(\n    //     () => {\n    //         const searchedStaffMembers = staffMembers.filter(staffMember => {\n    //             return staffMember.user.fullName.toLowerCase().startsWith(searchTermState.toLowerCase())\n    //         }\n    //         )\n    //         setFilteredStaff(searchedStaffMembers)\n    //     },\n    //     [searchTermState]\n    // )\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/staff?_expand=title`)\n                .then(response => response.json())\n                .then((titleArray) => {\n                    setTitle(titleArray)\n                })\n\n        },\n        []\n    )\n\n\n    return (\n\n        <div className=\"staffPage\">\n            <h2 className=\"staffHeader\">Our Staff</h2>\n\n            <div className=\"staffMembers\">\n                {\n                    filteredStaff.map((staff) => {\n                        return <div className=\"staff\" key={`staff--${staff.id}`}>\n\n                            <img className=\"staffImg\" src={staff.imageURL} />\n                            <div className=\"staffInfo\">\n                                <div className=\"fullName\">\n                                    {staff?.user?.fullName}</div>\n                                <div className=\"title\">\n                                    {staff?.title?.type}\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                    })\n\n                }\n                {staffTitles.map(title => {\n                    if (title.id === title.titleId) {\n                        return <div className=\"title\">{title.type}</div>\n                    }\n                })}\n\n            </div>\n        </div>\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/AddNotesAccept.js",["309"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Requests.css\"\n\nexport const AddNotesAccept = ({ id }) => {\n\n    //const {requestId} = useParams()\n    const [notes, setNotes] = useState({\n    })\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests/${id}`)\n                .then(response => response.json())\n                .then((staffNotes) => {\n                    setNotes(staffNotes)\n                })\n        }, []\n    )\n\n    const navigate = useNavigate()\n\n    const handleSaveNotes = (event) => {\n        event.preventDefault()\n\n        const newStaffNote = {\n            notes: notes.notes\n        }\n\n        return fetch(`http://localhost:8088/requests/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newStaffNote)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n\n                window.alert(\"Your notes have been saved.\")\n\n                // {\n                //     modal && (\n                //         <div className=\"modal_window\">\n                //             <div onClick={toggleModal}></div>\n\n                //             <p className=\"modal_content\">\n                //              Your notes have been saved. \n                //             </p>\n                //             <button className=\"modal_close\" onClick={toggleModal}>\n                //                 CLOSE\n                //             </button>\n                //         </div>\n                //     )\n                // }\n            })\n            .then(() => {\n                navigate(\"/schedule\")\n            })\n\n    }\n\n    // const handleEditNotes = (event) => {\n    //     event.preventDefault()\n\n    //     const newStaffNote = {\n    //         notes: notes.notes\n    //     }\n\n    //     return fetch(`http://localhost:8088/requests/${id}`, {\n    //         method: \"PATCH\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\"\n    //         },\n    //         body: JSON.stringify(newStaffNote)\n    //     })\n\n    //         .then((response) => response.json())\n\n    //         .then(() => {\n    //             window.alert(\"Your edits have been saved.\")\n    //         })\n\n    //         .then(() => {\n    //             navigate(\"/requests\")\n    //         })\n\n    // }\n\n\n    return (\n\n        <div>\n            <form>\n                <div>\n                    <textarea\n                        id=\"textNotes\"\n                        placeholder=\"Add notes...\"\n                        value={notes.notes}\n                        onChange={(event) => {\n                            const copy = { ...notes }\n                            copy.notes = event.target.value\n                            setNotes(copy)\n                        }}>\n                    </textarea>\n                </div>\n                {/* {notes?.notes?.length ?\n                    <button\n                        className=\"saveNotesButton\"\n                        onClick={(event) => {\n                            handleEditNotes(event)                   \n                        }} >\n                        Edit Note\n                    </button> :  */}\n                <button\n                    className=\"saveNotesButton\"\n                    onClick={(event) => {\n                        handleSaveNotes(event)\n                    }}>\n                    Save Notes\n                </button>\n                {/* } */}\n            </form>\n        </div>\n\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/AcceptBooking.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/PendingBooking.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/DenyBooking.js",["310","311"],[],"import { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Requests.css\"\n\nexport const DenyBooking = ({ requests, refresh, setRefresh }) => {\n\n   \n    const navigate = useNavigate()\n\n    const requestReset = () => {\n        //if (!fatbackUserObject.staff) \n        return <button\n            onClick={() => {\n                fetch(`http://localhost:8088/requests/${requests.id}`, {\n                    method: \"DELETE\"\n                })\n\n                    // .then(() => {\n                    //     setTimeout(() => navigate(\"/reserve\"), 3000);\n                    // })\n\n\n                    .then(\n                        setRefresh(!refresh)\n                    )\n\n                    .then(\n                        navigate(\"/reserve\")\n                    )\n\n\n            }}\n            className=\"requestResetButton\">\n            Try again?</button>\n    }\n\n\n    return (\n        <>\n            <div className=\"statusUpdate\">Your request has been denied. <br></br>{requests?.notes}</div>\n\n            {requestReset()}\n        </>\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/ClientModal.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/StaffModal.js",["312"],[],"import React, { useState } from \"react\";\nimport \"./Modal.css\";\n\nexport const StaffModal = ({ users, currentUser }) => {\n    const [modal, setModal] = useState(false)\n\n    // const [timeout, setTimeout] = useState(false)\n\n    const toggleModal = () => {\n        setModal(!modal)\n        // setTimeout(1000)\n    }\n\n    // const toggleModal = () => {\n    //     setModal(!modal)\n    //     setTimeout(() => {\n    //         modal.classList.toggle(\"show-modal\");\n    //     }, 5000)\n    // }\n\n    if (modal) {\n        document.body.classList.add('active-modal')\n    } else {\n        document.body.classList.remove('active-modal')\n    }\n\n    return (\n        <>\n            <h1 id=\"title-main\" onClick={toggleModal} className=\"btn-modal\">FatBack Studio </h1>\n\n            {modal && (\n                <div className=\"modal_window\">\n                    <div onClick={toggleModal}></div>\n                    <h2 className=\"modal_titlebar\">Welcome FatBack Fam!</h2>\n                    {/* <p className=\"modal_content\">\n                        You have new pending requests.\n                    </p> */}\n                    <button className=\"modal_close\" onClick={toggleModal}>\n                        CLOSE\n                    </button>\n                </div>\n            )}\n\n        </>\n    )\n}\n\n\n\n{/* <button onClick={toggleModal} className=\"btn-modal\">\n<h1 id=\"title-main\" onClick={toggleModal} className=\"btn-modal\">FatBack Studio {users.fullName}</h1>\nWelcome FatBack Fam\n</button> */}\n","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/home/AdminModal.js",["313"],[],"import React, { useState } from \"react\";\nimport \"./Modal.css\";\n\nexport const AdminModal = ({users, pendingRequests}) => {\n  const [modal, setModal] = useState(false)\n  //const [timeout, setTimeout] = useState(true)\n\n\n  const toggleModal = () => {\n    setModal(!modal)\n    // setTimeout(timeout, 1000)\n  }\n\n  if(modal) {\n    document.body.classList.add('active-modal')\n  } else {\n    document.body.classList.remove('active-modal')\n  }\n\n  return (\n    <>\n    <h1 id=\"title-main\" onClick={toggleModal} className=\"btn-modal\">FatBack Studio</h1> \n\n      {modal && (\n        <div className=\"modal_window\">\n          <div onClick={toggleModal}></div>\n            <h2 className=\"modal_titlebar\">Welcome {users?.user?.fullName}</h2>\n            <p className=\"modal_content\">\n              You have {pendingRequests.length} new pending requests.\n            </p>\n            <button className=\"modal_close\" onClick={toggleModal}>\n              CLOSE\n            </button>\n          </div>\n      )}\n     \n    </>\n  )\n}\n\n     {/* <button onClick={toggleModal} className=\"btn-modal\">\n   <h1 id=\"title-main\" onClick={toggleModal} className=\"btn-modal\">FatBack Studio {users.fullName}</h1> \n      Welcome FatBack Fam\n      </button> */}\n\n// export const ModalWindow = {\n\n\n//     init() {\n//         document.body.addEventListener(\"click\", e => {\n//             if (e.target.classList.contains(\"modal__close\")) {\n//                 this.closeModal(e.target);\n//             }\n//         });\n//       this.openModal();\n//     },\n\n//     getHtmlTemplate(modalOptions) {\n     \n//         return `\n//             <div class=\"modal__overlay\">\n//                 <div class=\"modal__window\">\n//                     <div class=\"modal__titlebar\">\n//                         <span class=\"modal__title\">${modalOptions.title}</span>\n//                         <button class=\"modal__close material-icons\">close</button>\n//                     </div>\n//                     <div class=\"modal__content\">\n//                         ${modalOptions.content}\n//                     </div>\n//                 </div>\n//             </div>\n//         `;\n//     },\n\n//     openModal(modalOptions = {}) {\n//         modalOptions = Object.assign({\n//             title: 'Welcome',\n//             content: 'You have pending requests!'\n//         }, modalOptions);\n\n//         const modalTemplate = this.getHtmlTemplate(modalOptions);\n//         document.body.insertAdjacentHTML(\"afterbegin\", modalTemplate);\n//     },\n\n//     closeModal(closeButton) {\n//         const modalOverlay = closeButton.parentElement.parentElement.parentElement;\n//         document.body.removeChild(modalOverlay);\n//     }\n// };\n\n// // document.addEventListener(\"DOMContentLoaded\", () => ModalWindow.init());\n","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/PendingButtons.js",[],[],"/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/AddNotesDeny.js",["314"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Requests.css\"\n\nexport const AddNotesDeny = ({ id }) => {\n\n    //const {requestId} = useParams()\n    const [notes, setNotes] = useState({\n    })\n    \n    //const [modal, setModal] = useState(false)\n\n\n    // const toggleModal = () => {\n    //     setModal(!modal)\n    //     // setTimeout(timeout, 1000)\n    // }\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests/${id}`)\n                .then(response => response.json())\n                .then((staffNotes) => {\n                    setNotes(staffNotes)\n                })\n        }, []\n    )\n\n    const navigate = useNavigate()\n\n    const handleSaveNotes = (event) => {\n        event.preventDefault()\n\n        const newStaffNote = {\n            notes: notes.notes\n        }\n\n        return fetch(`http://localhost:8088/requests/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newStaffNote)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n\n                window.alert(\"Your notes have been saved.\")\n\n                // {\n                //     modal && (\n                //         <div className=\"modal_window\">\n                //             <div onClick={toggleModal}></div>\n\n                //             <p className=\"modal_content\">\n                //              Your notes have been saved. \n                //             </p>\n                //             <button className=\"modal_close\" onClick={toggleModal}>\n                //                 CLOSE\n                //             </button>\n                //         </div>\n                //     )\n                // }\n            })\n            .then(() => {\n                navigate(\"/requests\")\n            })\n\n    }\n\n    // const handleEditNotes = (event) => {\n    //     event.preventDefault()\n\n    //     const newStaffNote = {\n    //         notes: notes.notes\n    //     }\n\n    //     return fetch(`http://localhost:8088/requests/${id}`, {\n    //         method: \"PATCH\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\"\n    //         },\n    //         body: JSON.stringify(newStaffNote)\n    //     })\n\n    //         .then((response) => response.json())\n\n    //         .then(() => {\n    //             window.alert(\"Your edits have been saved.\")\n    //         })\n\n    //         .then(() => {\n    //             navigate(\"/requests\")\n    //         })\n\n    // }\n\n\n    return (\n\n        <div>\n            <form>\n                <div>\n                    <textarea\n                        id=\"textNotes\"\n                        placeholder=\"Notify client...\"\n                        value={notes.notes}\n                        onChange={(event) => {\n                            const copy = { ...notes }\n                            copy.notes = event.target.value\n                            setNotes(copy)\n                        }}>\n                    </textarea>\n                </div>\n                {/* {notes?.notes?.length ?\n                    <button\n                        className=\"saveNotesButton\"\n                        onClick={(event) => {\n                            handleEditNotes(event)                   \n                        }} >\n                        Edit Note\n                    </button> :  */}\n                <button\n                    className=\"saveNotesButton\"\n                    onClick={(event) => {\n                        handleSaveNotes(event)\n                    }}>\n                    Save Notes\n                </button>\n            </form>\n        </div>\n\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/staff/StaffList.js",["315","316"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Staff.css\"\n\nexport const StaffList = () => {\n\n\n    const [staffMembers, setStaff] = useState([])\n    const [filteredStaff, setFilteredStaff] = useState([])\n    const [staffTitles, setTitle] = useState([])\n\n    const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    const navigate = useNavigate()\n\n    // const sortFilteredStaff = [...filteredStaff].sort((a, b) => a.fullName > b.fullName ? 1 : -1)\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/staff?&_expand=user&_expand=title&_sort=fullName`)\n                .then(response => response.json())\n                .then((staffArray) => {\n                    setStaff(staffArray)\n                })\n        },\n        []\n    )\n\n    useEffect(\n        () => {\n            setFilteredStaff(staffMembers)\n        },\n        [staffMembers]\n    )\n\n\n    // useEffect(\n    //     () => {\n    //         const searchedStaffMembers = staffMembers.filter(staffMember => {\n    //             return staffMember.user.fullName.toLowerCase().startsWith(searchTermState.toLowerCase())\n    //         }\n    //         )\n    //         setFilteredStaff(searchedStaffMembers)\n    //     },\n    //     [searchTermState]\n    // )\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/staff?_expand=title`)\n                .then(response => response.json())\n                .then((titleArray) => {\n                    setTitle(titleArray)\n                })\n\n        },\n        []\n    )\n\n    const addStaff = (event) => {\n        event.preventDefault()\n\n        navigate(`/aboutFatBack/addstaff`)\n\n    }\n\n    const editStaff = (event, staff) => {\n        event.preventDefault()\n\n        navigate(`/aboutFatBack/${staff}/edit`)\n\n    }\n\n\n    return (\n\n        <div className=\"staffPage\">\n            <h2 className=\"staffHeader\">Our Staff</h2>\n\n            {\n                fatbackUserObject.admin\n                    ?\n                    <div className=\"button\">\n                        <button\n                            onClick={(clickEvent) => { addStaff(clickEvent, staffMembers.id) }}\n                            className=\"addNewStaffButton\">\n                            Add New Staff Member\n                        </button>\n                    </div>\n                    :\n                    <></>\n            }\n\n            <div className=\"staffMembers\">\n                {\n                    filteredStaff.map((staff) => {\n                        return <div className=\"staff\" key={`staff--${staff.id}`}>\n\n                            <img className=\"staffImg\" src={staff.imageURL} />\n                            <div className=\"staffInfo\">\n                                <div className=\"fullName\">\n                                    {staff?.user?.fullName}</div>\n                                <div className=\"title\">\n                                    {staff?.title?.type}\n                                </div>\n\n                                {\n                                    fatbackUserObject.admin ?\n                                        <><br></br>\n                                            <details>\n                                                <summary>Contact Information</summary>\n                                                <div className=\"email\">{staff?.user?.email}</div> <br></br>\n                                                <div className=\"startDate\">{staff?.user?.phoneNumber}</div><br></br>\n                                                <button\n                                                    onClick={(clickEvent) => { editStaff(clickEvent, staff.id) }}\n                                                    className=\"editStaffButton\">\n                                                    Edit\n                                                </button></details></> : \"\"\n                                                \n                                    }\n                                        \n                            </div>\n\n                        </div>\n                    })\n\n                }\n                {staffTitles.map(title => {\n                    if (title.id === title.titleId) {\n                        return <div className=\"title\">{title.type}</div>\n                    }\n                })}\n\n            </div>\n        </div>\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/AcceptButton.js",["317","318"],[],"import { useState, useEffect } from \"react\"\n//import { useNavigate } from \"react-router-dom\"\nimport \"./Requests.css\"\n\nexport const AcceptButton = ({ id, refresh, setRefresh }) => {\n\n    const [requests, setRequest] = useState([])\n    //const [refresh, setRefresh] = useState(true)\n\n\n    //const navigate = useNavigate()\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests?_expand=genre`)\n                .then(response => response.json())\n                .then((requestInfo) => {\n                    setRequest(requestInfo)\n                })\n        }, [, refresh]\n    )\n\n    const acceptRequestButton = (event) => {\n        event.preventDefault()\n\n        const requestAcceptStatusForAPI = {\n            isAccepted: true,\n            isPending: false\n        }\n\n        fetch(`http://localhost:8088/requests/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(requestAcceptStatusForAPI)\n        })\n\n            .then(\n                setRefresh(!refresh)\n            )\n\n    }\n\n    // function refreshPage() {\n    //     window.location.reload(false)\n    // }\n\n    return (\n        <>\n            <button\n                onClick={(clickEvent) => {\n                    acceptRequestButton(clickEvent)\n                    // refreshPage()\n                }}\n                className=\"acceptButton\">\n                Accept Request\n            </button>\n        </>\n    )\n}","/Users/lohanson/Desktop/NSS/FatBackStudio/fatback-studio/src/components/booking/DenyButton.js",["319","320"],[],"import { useState, useEffect } from \"react\"\nimport \"./Requests.css\"\n\nexport const DenyButton = ({ id, refresh, setRefresh }) => {\n\n    const [requests, setDeniedRequest] = useState([])\n    //const [refresh, setRefresh] = useState(true)\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests?_expand=genre`)\n                .then(response => response.json())\n                .then((requestInfo) => {\n                    setDeniedRequest(requestInfo)\n                })\n        }, [, refresh]\n    )\n\n    const denyRequest = (event) => {\n        event.preventDefault()\n\n        const requestDenyStatusForAPI = {\n            isDenied: true,\n            isPending: false,\n        }\n\n        return fetch(`http://localhost:8088/requests/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(requestDenyStatusForAPI)\n        })\n            //.then(response => response.json())\n\n            .then(\n                setRefresh(!refresh)\n            )\n    }\n\n    return (\n        <>\n            <button\n                onClick={(clickEvent) => {\n\n                    denyRequest(clickEvent)\n\n                }}\n                className=\"denyButton\" >\n                Deny Request\n            </button>\n\n        </>\n    )\n}",{"ruleId":"321","severity":1,"message":"322","line":7,"column":17,"nodeType":"323","messageId":"324","endLine":7,"endColumn":83,"fix":"325"},{"ruleId":"321","severity":1,"message":"322","line":8,"column":17,"nodeType":"323","messageId":"324","endLine":8,"endColumn":81,"fix":"326"},{"ruleId":"321","severity":1,"message":"322","line":9,"column":17,"nodeType":"323","messageId":"324","endLine":9,"endColumn":100,"fix":"327"},{"ruleId":"328","severity":1,"message":"329","line":8,"column":12,"nodeType":"330","messageId":"331","endLine":8,"endColumn":19},{"ruleId":"332","severity":1,"message":"333","line":26,"column":9,"nodeType":"334","endLine":26,"endColumn":11,"suggestions":"335"},{"ruleId":"328","severity":1,"message":"336","line":7,"column":25,"nodeType":"330","messageId":"331","endLine":7,"endColumn":39},{"ruleId":"328","severity":1,"message":"337","line":28,"column":15,"nodeType":"330","messageId":"331","endLine":28,"endColumn":33},{"ruleId":"328","severity":1,"message":"338","line":36,"column":15,"nodeType":"330","messageId":"331","endLine":36,"endColumn":34},{"ruleId":"339","severity":1,"message":"340","line":24,"column":13,"nodeType":"334","messageId":"341","endLine":24,"endColumn":24},{"ruleId":"328","severity":1,"message":"342","line":36,"column":12,"nodeType":"330","messageId":"331","endLine":36,"endColumn":22},{"ruleId":"332","severity":1,"message":"343","line":62,"column":12,"nodeType":"334","endLine":62,"endColumn":23,"suggestions":"344"},{"ruleId":"339","severity":1,"message":"340","line":62,"column":12,"nodeType":"334","messageId":"341","endLine":62,"endColumn":23},{"ruleId":"332","severity":1,"message":"343","line":25,"column":12,"nodeType":"334","endLine":25,"endColumn":14,"suggestions":"345"},{"ruleId":"332","severity":1,"message":"346","line":38,"column":9,"nodeType":"334","endLine":38,"endColumn":11,"suggestions":"347"},{"ruleId":"332","severity":1,"message":"348","line":28,"column":8,"nodeType":"334","endLine":28,"endColumn":10,"suggestions":"349"},{"ruleId":"332","severity":1,"message":"348","line":37,"column":8,"nodeType":"334","endLine":37,"endColumn":10,"suggestions":"350"},{"ruleId":"351","severity":1,"message":"352","line":40,"column":33,"nodeType":"323","endLine":40,"endColumn":84},{"ruleId":"351","severity":1,"message":"352","line":85,"column":41,"nodeType":"323","endLine":86,"endColumn":56},{"ruleId":"351","severity":1,"message":"352","line":28,"column":37,"nodeType":"323","endLine":29,"endColumn":58},{"ruleId":"328","severity":1,"message":"336","line":7,"column":25,"nodeType":"330","messageId":"331","endLine":7,"endColumn":39},{"ruleId":"351","severity":1,"message":"352","line":107,"column":33,"nodeType":"323","endLine":107,"endColumn":84},{"ruleId":"351","severity":1,"message":"352","line":67,"column":29,"nodeType":"323","endLine":67,"endColumn":78},{"ruleId":"353","severity":1,"message":"354","line":82,"column":40,"nodeType":"355","messageId":"356","endLine":82,"endColumn":42},{"ruleId":"332","severity":1,"message":"357","line":18,"column":12,"nodeType":"334","endLine":18,"endColumn":14,"suggestions":"358"},{"ruleId":"328","severity":1,"message":"359","line":1,"column":10,"nodeType":"330","messageId":"331","endLine":1,"endColumn":19},{"ruleId":"328","severity":1,"message":"360","line":1,"column":21,"nodeType":"330","messageId":"331","endLine":1,"endColumn":29},{"ruleId":"361","severity":1,"message":"362","line":50,"column":1,"nodeType":"363","messageId":"364","endLine":53,"endColumn":14},{"ruleId":"361","severity":1,"message":"362","line":41,"column":6,"nodeType":"363","messageId":"364","endLine":44,"endColumn":20},{"ruleId":"332","severity":1,"message":"357","line":26,"column":12,"nodeType":"334","endLine":26,"endColumn":14,"suggestions":"365"},{"ruleId":"351","severity":1,"message":"352","line":100,"column":29,"nodeType":"323","endLine":100,"endColumn":78},{"ruleId":"353","severity":1,"message":"354","line":129,"column":40,"nodeType":"355","messageId":"356","endLine":129,"endColumn":42},{"ruleId":"328","severity":1,"message":"366","line":7,"column":12,"nodeType":"330","messageId":"331","endLine":7,"endColumn":20},{"ruleId":"339","severity":1,"message":"340","line":20,"column":12,"nodeType":"334","messageId":"341","endLine":20,"endColumn":23},{"ruleId":"328","severity":1,"message":"366","line":6,"column":12,"nodeType":"330","messageId":"331","endLine":6,"endColumn":20},{"ruleId":"339","severity":1,"message":"340","line":16,"column":12,"nodeType":"334","messageId":"341","endLine":16,"endColumn":23},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"367","text":"368"},{"range":"369","text":"368"},{"range":"370","text":"368"},"no-unused-vars","'artists' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'artistId'. Either include it or remove the dependency array.","ArrayExpression",["371"],"'setSearchTerms' is assigned a value but never used.","'newUserToSendToAPI' is assigned a value but never used.","'newStaffToSendToAPI' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'newClients' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fatbackUserObject.id'. Either include it or remove the dependency array.",["372"],["373"],"React Hook useEffect has a missing dependency: 'requestId'. Either include it or remove the dependency array.",["374"],"React Hook useEffect has a missing dependency: 'staffId'. Either include it or remove the dependency array.",["375"],["376"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["377"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["378"],"'requests' is assigned a value but never used.",[186,186]," rel=\"noreferrer\"",[417,417],[665,665],{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"387","fix":"389"},{"desc":"390","fix":"391"},{"desc":"390","fix":"392"},"Update the dependencies array to be: [artistId]",{"range":"393","text":"394"},"Update the dependencies array to be: [fatbackUserObject.id, refresh]",{"range":"395","text":"396"},"Update the dependencies array to be: [fatbackUserObject.id]",{"range":"397","text":"398"},"Update the dependencies array to be: [requestId]",{"range":"399","text":"400"},"Update the dependencies array to be: [staffId]",{"range":"401","text":"402"},{"range":"403","text":"402"},"Update the dependencies array to be: [id]",{"range":"404","text":"405"},{"range":"406","text":"405"},[683,685],"[artistId]",[1645,1656],"[fatbackUserObject.id, refresh]",[791,793],"[fatbackUserObject.id]",[1017,1019],"[requestId]",[722,724],"[staffId]",[952,954],[499,501],"[id]",[664,666]]