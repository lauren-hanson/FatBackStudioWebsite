[{"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/index.js":"1","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/FatBackStudio.js":"2","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/NavBar.js":"3","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/ClientNavBar.js":"4","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/StaffNavBar.js":"5","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/BookingForm.js":"6","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/Requests.js":"7","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/auth/Register.js":"8","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/auth/Login.js":"9","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/MyRequest.js":"10","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/RequestEdit.js":"11","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistList.js":"12","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistContainer.js":"13","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistSearch.js":"14","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffContainer.js":"15","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffSearch.js":"16","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffList.js":"17","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/gallery/GalleryView.js":"18","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/PublicNavBar.js":"19","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/FutureBookings.js":"20","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/About.js":"21","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/Home.js":"22","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/AddArtist.js":"23","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistEdit.js":"24","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/gallery/AddGalleryImage.js":"25","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/gallery/PublicGalleryView.js":"26","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/calendar/Calendar.js":"27","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistListPublic.js":"28","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/ReserveButton.js":"29","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/BookingStatus.js":"30","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AcceptDenyContainer.js":"31","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/DenyBooking.js":"32","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AcceptBooking.js":"33","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/PendingBooking.js":"34","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/PendingButtons.js":"35","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AcceptButton.js":"36","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/DenyButton.js":"37","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/Authorized.js":"38","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/ApplicationViews.js":"39","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/ClientViews.js":"40","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/PublicViews.js":"41","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/StaffViews.js":"42","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/footer/Footer.js":"43","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/AddStaff.js":"44","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/Greeting.js":"45","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffEdit.js":"46","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/PublicAbout.js":"47","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/PublicHome.js":"48","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/PublicStaffList.js":"49","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AddNotes.js":"50","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/AdminGreeting.js":"51","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/StaffGreeting.js":"52","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/ModalTest.js":"53","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/ClientGreeting.js":"54","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/RequestEditAppTest.js":"55","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/RequestEditTest.js":"56","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/Title.js":"57"},{"size":427,"mtime":1672267035000,"results":"58","hashOfConfig":"59"},{"size":779,"mtime":1672687397084,"results":"60","hashOfConfig":"59"},{"size":1096,"mtime":1672267035000,"results":"61","hashOfConfig":"59"},{"size":1473,"mtime":1672688039547,"results":"62","hashOfConfig":"59"},{"size":1632,"mtime":1672688100926,"results":"63","hashOfConfig":"59"},{"size":19218,"mtime":1672689202056,"results":"64","hashOfConfig":"59"},{"size":4043,"mtime":1672690977242,"results":"65","hashOfConfig":"59"},{"size":3407,"mtime":1672419819000,"results":"66","hashOfConfig":"59"},{"size":2570,"mtime":1672689233128,"results":"67","hashOfConfig":"59"},{"size":4882,"mtime":1672684898284,"results":"68","hashOfConfig":"59"},{"size":15092,"mtime":1672675063401,"results":"69","hashOfConfig":"59"},{"size":4082,"mtime":1672689151436,"results":"70","hashOfConfig":"59"},{"size":402,"mtime":1672689184872,"results":"71","hashOfConfig":"59"},{"size":765,"mtime":1672267035000,"results":"72","hashOfConfig":"59"},{"size":392,"mtime":1672267035000,"results":"73","hashOfConfig":"59"},{"size":522,"mtime":1671572328156,"results":"74","hashOfConfig":"75"},{"size":4240,"mtime":1672677088826,"results":"76","hashOfConfig":"59"},{"size":2654,"mtime":1672688992181,"results":"77","hashOfConfig":"59"},{"size":935,"mtime":1672691120005,"results":"78","hashOfConfig":"59"},{"size":1436,"mtime":1672689934560,"results":"79","hashOfConfig":"59"},{"size":554,"mtime":1672688797561,"results":"80","hashOfConfig":"59"},{"size":416,"mtime":1672687122306,"results":"81","hashOfConfig":"59"},{"size":6826,"mtime":1672338833000,"results":"82","hashOfConfig":"59"},{"size":5514,"mtime":1672343308000,"results":"83","hashOfConfig":"59"},{"size":2221,"mtime":1672343644000,"results":"84","hashOfConfig":"59"},{"size":1008,"mtime":1672689015463,"results":"85","hashOfConfig":"59"},{"size":3437,"mtime":1672067807367,"results":"86","hashOfConfig":"75"},{"size":1308,"mtime":1672689061214,"results":"87","hashOfConfig":"59"},{"size":605,"mtime":1672267035000,"results":"88","hashOfConfig":"59"},{"size":413,"mtime":1672267035000,"results":"89","hashOfConfig":"59"},{"size":574,"mtime":1672690564668,"results":"90","hashOfConfig":"59"},{"size":232,"mtime":1672682877136,"results":"91","hashOfConfig":"59"},{"size":595,"mtime":1672267035000,"results":"92","hashOfConfig":"59"},{"size":525,"mtime":1672267035000,"results":"93","hashOfConfig":"59"},{"size":407,"mtime":1672690705178,"results":"94","hashOfConfig":"59"},{"size":1485,"mtime":1672690850111,"results":"95","hashOfConfig":"59"},{"size":1388,"mtime":1672690936703,"results":"96","hashOfConfig":"59"},{"size":364,"mtime":1672267035000,"results":"97","hashOfConfig":"59"},{"size":986,"mtime":1672267035000,"results":"98","hashOfConfig":"59"},{"size":1380,"mtime":1672691183435,"results":"99","hashOfConfig":"59"},{"size":1115,"mtime":1672691175906,"results":"100","hashOfConfig":"59"},{"size":1918,"mtime":1672691187752,"results":"101","hashOfConfig":"59"},{"size":839,"mtime":1672267035000,"results":"102","hashOfConfig":"59"},{"size":7109,"mtime":1672268969000,"results":"103","hashOfConfig":"59"},{"size":2289,"mtime":1672678043429,"results":"104","hashOfConfig":"59"},{"size":7505,"mtime":1672336993000,"results":"105","hashOfConfig":"59"},{"size":613,"mtime":1672688871506,"results":"106","hashOfConfig":"59"},{"size":399,"mtime":1672687255794,"results":"107","hashOfConfig":"59"},{"size":2509,"mtime":1672277029460,"results":"108","hashOfConfig":"59"},{"size":3494,"mtime":1672342704946,"results":"109","hashOfConfig":"59"},{"size":1859,"mtime":1672678494635,"results":"110","hashOfConfig":"59"},{"size":711,"mtime":1672679039343,"results":"111","hashOfConfig":"59"},{"size":2053,"mtime":1672685139084,"results":"112","hashOfConfig":"59"},{"size":716,"mtime":1672685247652,"results":"113","hashOfConfig":"59"},{"size":516,"mtime":1672685168339,"results":"114","hashOfConfig":"59"},{"size":754,"mtime":1672684570336,"results":"115","hashOfConfig":"59"},{"size":366,"mtime":1672688892783,"results":"116","hashOfConfig":"59"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"bcu0zf",{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lmfn5r",{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"252","usedDeprecatedRules":"120"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"120"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"120"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"120"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"120"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/index.js",[],[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/FatBackStudio.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/NavBar.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/ClientNavBar.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/StaffNavBar.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/BookingForm.js",["299","300"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/Requests.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/auth/Register.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/auth/Login.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/MyRequest.js",["301"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/RequestEdit.js",["302"],[],"import { useState, useEffect } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport \"./BookingForm.css\"\nimport \"./BookingFormPopUp.css\"\n\nexport const RequestEdit = () => {\n\n    const { requestId } = useParams()\n\n    // const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    // const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    const [genres, setGenres] = useState([])\n    const [editRequests, setEditRequest] = useState({\n\n        bandName: \"\",\n        phoneNumber: \"\",\n        genreId: 0,\n        numOfSongs: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        musicianRequest: false,\n        sessionMusicians: false,\n        photoRequest: false,\n        videoRequest: false\n\n    })\n\n    const navigate = useNavigate()\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests/${requestId}`)\n                .then(response => response.json())\n                .then((requestObject) => {\n                    setEditRequest(requestObject)\n                })\n        },\n        []\n    )\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/genres`)\n                .then(response => response.json())\n                .then((genreArray) => {\n                    setGenres(genreArray)\n                })\n        },\n        []\n\n    )\n\n    const handleSaveButtonClick = (event) => {\n        event.preventDefault()\n\n        return fetch(`http://localhost:8088/requests/${requestId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(editRequests)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n                navigate(\"/myrequest\")\n            })\n\n    }\n\n    return (\n        <div className=\"bookingForm\">\n            <h2 className=\"editRequestHeader\">Edit Your Request</h2>\n\n            <form className=\"editRequest popup\" id=\"popup\">\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"bandName\">Band Name: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            defaultValue={editRequests.bandName}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...editRequests }\n                                    copy.bandName = event.target.value\n                                    setEditRequest(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n\n\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"phoneNumber\">\n                            Phone Number:\n                        </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            defaultValue={editRequests.phoneNumber}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...editRequests }\n                                    copy.phoneNumber = event.target.value\n                                    setEditRequest(copy)\n                                }\n                            }\n                        />\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group selectGenre\">\n                        <label htmlFor=\"genre\" className=\"label\">Choose a genre:</label>\n                        <select id=\"genre\"\n                            required\n                            value={editRequests?.genreId}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...editRequests }\n                                    copy.genreId = parseInt(event.target.value)\n                                    setEditRequest(copy)\n                                }}>\n                            <option\n                                value=\"{editRequests.genreId}\"></option>\n\n                            {\n                                genres.map(\n                                    (genre) => {\n                                        return <option\n                                            key={`genre--${genre.id}`}\n                                            value={genre.id}\n                                        >{genre.type}</option>\n                                    }\n                                )\n                            }\n                        </select>\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"songs\">\n                            No. of Songs:\n                        </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={editRequests.numOfSongs}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...editRequests }\n                                    copy.numOfSongs = event.target.value\n                                    setEditRequest(copy)\n                                }\n                            }\n\n                        />\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"date\">\n                            Start Date:\n                        </label>\n                        <input\n\n                            type=\"date\"\n                            required\n                            className=\"form-control\"\n                            defaultValue={editRequests.startDate}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...editRequests }\n                                    copy.startDate = event.target.value\n                                    setEditRequest(copy)\n                                }\n                            }\n\n                        />\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"date\">\n                            End Date:\n                        </label>\n                        <input\n                            required\n                            type=\"date\"\n                            className=\"form-control\"\n                            defaultValue={editRequests.endDate}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...editRequests }\n                                    copy.endDate = event.target.value\n                                    setEditRequest(copy)\n                                }\n                            }\n\n                        />\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"band\">\n                            Do you have musicians or a band?\n                        </label>\n\n                        <div className=\"radioLabel\">\n                            <input\n\n                                type=\"radio\"\n                                checked={editRequests.musicianRequest === true}\n                                name=\"musicians\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.musicianRequest = true\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n\n                            <label className=\"radioLabel\">Yes</label>\n\n                            <input\n\n                                type=\"radio\"\n                                checked={editRequests.musicianRequest === false}\n                                name=\"musicians\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.musicianRequest = false\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\" >No</label>\n\n                        </div>\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n\n\n                        <label className=\"label\" htmlFor=\"band\">\n                            Would you like session musicians?\n                        </label>\n\n\n                        <div className=\"radioLabel\">\n                            <input\n\n                                type=\"radio\"\n                                checked={editRequests.sessionMusicians === true}\n                                id=\"yes\"\n                                name=\"session\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.sessionMusicians = true\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\"\n                            >Yes</label>\n\n                            <input\n\n                                type=\"radio\"\n                                checked={editRequests.sessionMusicians === false}\n                                id=\"no\"\n                                name=\"session\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.sessionMusicians = false\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\"\n                            >No</label>\n\n                        </div>\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n\n                        <label className=\"label\" htmlFor=\"photo\">\n                            Do you want photos?\n                        </label>\n\n\n                        <div className=\"radioLabel\">\n                            <input\n                                type=\"radio\"\n                                checked={editRequests.photoRequest === true}\n                                //value={editRequests.photoRequest}\n                                name=\"photo\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.photoRequest = true\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\">Yes</label>\n\n                            <input\n                                type=\"radio\"\n                                checked={editRequests.photoRequest === false}\n                                //value={editRequests.photoRequest}\n                                name=\"photo\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.photoRequest = false\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\">No</label>\n\n                        </div>\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n\n                        <label className=\"label\" htmlFor=\"video\">\n                            Do you want video?\n                        </label>\n\n\n                        <div className=\"radioLabel\">\n                            <input\n                                type=\"radio\"\n                                checked={editRequests.videoRequest === true}\n\n                                name=\"video\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.videoRequest = true\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\"\n                            >Yes</label>\n\n                            <input\n                                checked={editRequests.videoRequest === false}\n                                type=\"radio\"\n\n                                name=\"video\"\n                                onClick={\n                                    () => {\n                                        const copy = { ...editRequests }\n                                        copy.videoRequest = false\n                                        setEditRequest(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\"\n                            >No</label>\n                        </div>\n                    </div>\n                </fieldset>\n\n\n\n                <button\n                    onClick={(clickEvent) => {\n                        handleSaveButtonClick(clickEvent)\n                    }}\n                    className=\"saveEditButton\">\n                    Save Changes\n                </button>\n            </form>\n        </div>\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistList.js",["303"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistContainer.js",["304"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistSearch.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffContainer.js",["305"],[],"import { useState } from \"react\"\n//import { StaffSearch } from \"../staff/StaffSearch\"\nimport { StaffList } from \"../staff/StaffList\"\n\nexport const StaffContainer = () => { \n\n    const [searchTerms, setSearchTerms] = useState(\"\")\n\n    return (\n        <>\n        {/* < StaffSearch setterFunction={setSearchTerms}/>  */}\n\n        < StaffList searchTermState={searchTerms}/> \n        </>\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffSearch.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffList.js",["306","307"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/gallery/GalleryView.js",["308"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate, } from \"react-router-dom\"\nimport { Title } from '../home/Title'\nimport \"./Gallery.css\"\n\nexport const GalleryView = () => {\n\n    const [photos, setPhotos] = useState([])\n\n    const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    const navigate = useNavigate()\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/gallery`)\n                .then(response => response.json())\n                .then((photoGallery) =>\n                    setPhotos(photoGallery))\n        },\n        []\n    )\n\n    const getAllImages = () => {\n\n        fetch(`http://localhost:8088/gallery`)\n            .then(response => response.json())\n            .then((photoGallery) => {\n                setPhotos(photoGallery)\n            })\n    }\n\n    const handleDeleteImageButton = (id) => {\n\n        if (fatbackUserObject.admin) {\n            return <button className=\"deleteImageButton\"\n                onClick={() => {\n                    fetch(`http://localhost:8088/gallery/${id}`, {\n                        method: \"DELETE\"\n                    })\n                        .then(() => {\n                            getAllImages()\n                        })\n                }}>Delete</button>\n        }\n        else {\n            return \"\"\n\n        }\n\n    }\n\n    const addPhoto = (event) => {\n        event.preventDefault()\n\n        navigate(`/gallery/addgalleryimage`)\n\n    }\n\n    return (\n        <>\n            <Title />\n            <div className=\"galleryPage\">\n                <h3 className=\"galleryHeader\">Gallery</h3>\n\n                {\n                    fatbackUserObject.admin\n                        ?\n                        <div className=\"button\">\n                            <button\n                                onClick={(clickEvent) => { addPhoto(clickEvent, photos.id) }}\n                                className=\"addNewPhotoButton\">\n                                Add New Photo\n                            </button>\n\n\n                        </div> :\n                        <></>\n                }\n\n                <div className=\"gallery\">\n                    {\n                        photos.map(photo => {\n                            return <div><img className=\"galleryImg\" key={`photo--${photo.id}`}\n                                src={photo.imageURL} />\n                                {handleDeleteImageButton(photo.id)}\n                            </div>\n\n                        }\n                        )\n                    }\n                </div>\n            </div>\n        </>\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/nav/PublicNavBar.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/FutureBookings.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/About.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/Home.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/AddArtist.js",["309"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\n\nimport \"./Artist.css\"\n\nexport const AddArtist = () => {\n\n    const [artists, setArtists] = useState([])\n    const [newArtists, setNewArtist] = useState({\n        artistName: \"\",\n        imageURL: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        notes: \"\"\n    })\n\n\n    // const uploadImage = (files) => { \n    //     console.log(files[0])\n\n    //     const formData = new FormData()\n    //     formData.append(\"file\", files[0])\n    //     formData.append(\"upload_preset\", \"eyzo3sit\")\n\n    //     Axios.post(\"https://api.cloudinary.com/v1_1/dgwi6xvfl/image/upload\", formData).then(response => console.log(response))\n    // }\n\n\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n\n        fetch(`http://localhost:8088/artists`)\n            .then(response => response.json())\n            .then(newArtistInfo => {\n                setArtists(newArtistInfo)\n            })\n\n    }, []\n    )\n\n    const handleSaveNewArtistButton = (event) => {\n        event.preventDefault()\n\n        const newArtistToSendToAPI = {\n            artistName: newArtists.artistName,\n            imageURL: newArtists.imageURL,\n            startDate: newArtists.startDate,\n            endDate: newArtists.endDate,\n            notes: newArtists.notes\n        }\n\n        return fetch(`http://localhost:8088/artists`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newArtistToSendToAPI)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n                navigate(\"/artists\")\n            })\n\n    }\n\n    return (\n\n        <div className=\"addArtistForm\">\n            <form>\n                <h2 className=\"addArtistFormHeader\">Add New Artist</h2>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"name\">Band Name: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={newArtists.artistName}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.artistName = event.target.value\n                                setNewArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"name\">Recording Start Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={newArtists.startDate}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.startDate = event.target.value\n                                setNewArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n                            \n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"name\">Recording End Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={newArtists.endDate}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.endDate = event.target.value\n                                setNewArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                {/* <div className=\"form-group\">\n                        <h3>Image : </h3>\n                        <input\n                            required\n                            id=\"imgURL\"\n                            type=\"file\"\n                            className=\"file-control\"\n                            //placeholder=\"example.com\"\n                            value={newArtists.imageURL}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.imageURL = event.target.files\n                                setNewArtist(copy)\n                            }}\n                        />\n                    </div> */}\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"imgURL\">Image URL: </h3>\n                        <input\n                            required\n                            id=\"imgURL\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"example.com\"\n                            value={newArtists.imageURL}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.imageURL = event.target.value\n                                setNewArtist(copy)\n                            }}\n                        />\n                    </div> \n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"notes\">Notes: </h3>\n                        <textarea\n                            required\n                            id=\"notes\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"\"\n                            value={newArtists.notes}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.notes = event.target.value\n                                setNewArtist(copy)\n                            }}\n                        ></textarea>\n                    </div>\n                </fieldset>\n\n                <button\n                    className=\"saveButton\"\n                    onClick={(event) => {\n                        handleSaveNewArtistButton(event)\n                    }}\n                >\n                    Add New Artist\n                </button>\n            </form>\n        </div>\n\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistEdit.js",["310"],[],"import { useState, useEffect } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport \"./Artist.css\"\n\nexport const ArtistEdit = () => { \n\n    const [editArtist, setEditArtist] = useState({ \n        artistName: \"\", \n        imageURL: \"\", \n        startDate: \"\", \n        endDate: \"\", \n        notes: \"\"\n    })\n\n    const { artistId } = useParams()\n    const navigate = useNavigate()\n\n    useEffect( \n        () => { \n            fetch(`http://localhost:8088/artists/${artistId}`)\n                .then(response => response.json())\n                .then((artistObject) => { \n                    setEditArtist(artistObject)\n                })\n        }, \n        []\n    )\n\n\n    const handleEditButtonClick = (event) => {\n        event.preventDefault()\n\n\n        return fetch(`http://localhost:8088/artists/${artistId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(editArtist)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n                navigate(\"/artists\")\n            })\n    }\n\n    return(\n        <>\n         <div className=\"addArtistForm\">\n            <form>\n                <h2 className=\"addArtistFormHeader\">Add New Artist</h2>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 className=\"label\" htmlFor=\"name\">Band Name: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={editArtist.artistName}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.artistName = event.target.value\n                                setEditArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 className=\"label\" htmlFor=\"name\">Recording Start Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            defaultValue={editArtist.startDate}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.startDate = event.target.value\n                                setEditArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n                            \n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 className=\"label\" htmlFor=\"name\">Recording End Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            defaultValue={editArtist.endDate}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.endDate = event.target.value\n                                setEditArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                <div className=\"form-group\">\n                        <h3 className=\"label\" >Image : </h3>\n                        <input\n                            required\n                            id=\"imgURL\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            //placeholder=\"example.com\"\n                            value={editArtist.imageURL}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.imageURL = event.target.value\n                                setEditArtist(copy)\n                            }}\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 className=\"label\" htmlFor=\"notes\">Notes: </h3>\n                        <textarea\n                            required\n                            id=\"notes\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            defaultValue={editArtist.notes}\n                            onChange={(event) => {\n                                const copy = { ...editArtist }\n                                copy.notes = event.target.value\n                                setEditArtist(copy)\n                            }}\n                        ></textarea>\n                    </div>\n                </fieldset>\n\n                <button\n                    className=\"editArtistButton\"\n                    onClick={(clickEvent) => {\n                        handleEditButtonClick(clickEvent)\n                    }}\n                >\n                   Save Changes\n                </button>\n            </form>\n        </div>\n        </>\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/gallery/AddGalleryImage.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/gallery/PublicGalleryView.js",["311"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/calendar/Calendar.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/ArtistListPublic.js",["312"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/ReserveButton.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/BookingStatus.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AcceptDenyContainer.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/DenyBooking.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AcceptBooking.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/PendingBooking.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/PendingButtons.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AcceptButton.js",["313","314"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/DenyButton.js",["315","316"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/Authorized.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/ApplicationViews.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/ClientViews.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/PublicViews.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/views/StaffViews.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/footer/Footer.js",["317","318","319"],[],"import \"./Footer.css\"\n\nexport const Footer = () => {\n\n    return (\n            <div className=\"socials\">\n                <a href=\"https://www.instagram.com/fatbacksound/\" target=\"_blank\"><img src=\"https://res.cloudinary.com/dgwi6xvfl/image/upload/v1671822675/FatBack/instagram_logo_ec0ghm.png\" alt=\"instagram logo\" className=\"logo\"/></a>\n                <a href=\"https://www.facebook.com/FatbackSound\" target=\"_blank\"><img src=\"https://res.cloudinary.com/dgwi6xvfl/image/upload/v1671822675/FatBack/facebook_logo_xwzqpd.png\" alt=\"facebook logo\" className=\"logo\"/></a>\n                <a href=\"https://open.spotify.com/playlist/7qi70oRnHLGZINS5cq3sEZ\" target=\"_blank\"><img src=\"https://res.cloudinary.com/dgwi6xvfl/image/upload/v1671826183/FatBack/spotify_xios71.png\" alt=\"spotify logo\" className=\"logo\"/></a>\n            </div>\n    \n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/AddStaff.js",["320","321"],[],"import { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Staff.css\"\n\nexport const AddStaff = () => {\n\n    const [newStaff, setNewStaff] = useState({})\n    //const [newStaffTitle, setNewStaffTitle] = useState({})\n    const [titles, setTitles] = useState([])\n    const [newUser, setNewUser] = useState({\n        isStaff: true,\n        isAdmin: false\n    })\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/titles`)\n            .then(response => response.json())\n            .then((titleArray) => {\n                setTitles(titleArray)\n            })\n    }, [])\n\n    const handleSaveNewStaffButton = (event) => {\n        event.preventDefault()\n\n        const newUserToSendToAPI = {\n            fullName: \"\",\n            email: \"\",\n            isStaff: true,\n            isAdmin: false\n\n        }\n\n        const newStaffToSendToAPI = {\n            startDate: \"\",\n            imageURL: \"\",\n            titleId: 0\n        }\n\n\n        return fetch(`http://localhost:8088/users`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newUser)\n        })\n            .then((response) => response.json())\n\n            .then(newUser => {\n                newStaff.userId = newUser.id\n\n                return fetch(`http://localhost:8088/staff`, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(newStaff)\n                })\n            })\n\n            .then(() => {\n                navigate(\"/aboutFatBack\")\n            })\n\n    }\n\n    return (\n        <div>\n            <h2 className=\"addStaffHeader\">Add New Staff Member</h2>\n            <form className=\"newStaffForm\">\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"name\">Name: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={newUser.fullName}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newUser }\n                                    copy.fullName = event.target.value\n                                    setNewUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"email\">Email: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={newUser.email}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newUser }\n                                    copy.email = event.target.value\n                                    setNewUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\" >Title:</label>\n                        <select id=\"title\" required\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newStaff }\n                                    copy.titleId = parseInt(event.target.value)\n                                    setNewStaff(copy)\n                                }}>\n                            <option value=\"0\"></option>\n\n                            {\n                                titles.map(\n                                    (title) => {\n                                        return <option\n                                            key={`title--${title.id}`}\n                                            value={title.id}\n                                        >{title.type}\n                                        </option>\n                                    }\n                                )\n                            }\n                        </select>\n\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group dateContainer\">\n                        <label className=\"label\" htmlFor=\"startDate\">Start Date: </label>\n                        <input\n                            required autoFocus\n                            type=\"date\"\n                            className=\"form-control\"\n                            value={newStaff.startDate}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newStaff }\n                                    copy.startDate = event.target.value\n                                    setNewStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group imageContainer\">\n                        <label className=\"label\" htmlFor=\"image\">Image: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"example.com\"\n                            value={newStaff.imageURL}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...newStaff }\n                                    copy.imageURL = event.target.value\n                                    setNewStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <input onChange={(evt) => {\n                        const copy = { ...newUser }\n                        copy.isAdmin = evt.target.checked\n                        setNewUser(copy)\n                    }}\n                        type=\"checkbox\" id=\"isAdmin\" />\n                    <label htmlFor=\"email\" id=\"isAdmin\"> New Admin? </label>\n                </fieldset>\n\n                <button\n                    className=\"saveNewStaffButton\"\n                    onClick={(event) => {\n                        handleSaveNewStaffButton(event)\n                    }}\n                >\n                    Add New Staff\n                </button>\n            </form>\n        </div>\n    )\n}\n\n","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/Greeting.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffEdit.js",["322","323"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport \"./Staff.css\"\n\nexport const StaffEdit = () => {\n\n    const { staffId } = useParams()\n    const [titles, setTitles] = useState([])\n    const [updateUser, setUpdateUser] = useState({\n        fullName: \"\",\n        email: \"\"\n    })\n    const [updateStaff, setUpdateStaff] = useState({\n        startDate: \"\",\n        imageURL: \"\",\n        titleId: 0\n    })\n\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/users/${staffId}`)\n            .then(response => response.json())\n            .then((staffInfo) => {\n                setUpdateUser(staffInfo)\n            })\n    }, [])\n\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/staff/${staffId}`)\n            .then(response => response.json())\n            .then((staffInfo) => {\n                setUpdateStaff(staffInfo)\n            })\n    }, [])\n\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/titles`)\n            .then(response => response.json())\n            .then((titleArray) => {\n                setTitles(titleArray)\n            })\n    }, [])\n\n\n\n    const handleUpdateStaffButton = (event) => {\n        event.preventDefault()\n\n        return fetch(`http://localhost:8088/users/${staffId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(updateUser)\n        })\n\n            .then((response) => response.json())\n\n            .then(() => {\n                return fetch(`http://localhost:8088/staff/${staffId}`, {\n                    method: \"PUT\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(updateStaff)\n                })\n            })\n\n\n            .then(() => {\n                navigate(\"/aboutFatBack\")\n            })\n\n    }\n\n\n    return (\n\n        <div>\n            <h2 className=\"addStaffHeader\">Edit Staff</h2>\n            <form className=\"newStaffForm\">\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"name\">Name: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={updateUser.fullName}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateUser }\n                                    copy.fullName = event.target.value\n                                    setUpdateUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"email\">Email: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={updateUser.email}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateUser }\n                                    copy.email = event.target.value\n                                    setUpdateUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\" >Title:</label>\n\n                        <option value=\"{updateStaff.titleId}\"></option>\n\n                        <select id=\"title\"\n                            required\n                            value={updateStaff.titleId}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateStaff }\n                                    copy.titleId = parseInt(event.target.value)\n                                    setUpdateStaff(copy)\n                                }}>\n                          \n\n                            {\n                                titles.map(\n                                    (title) => {\n                                        return <option\n                                            key={`title--${title.id}`}\n                                            value={title.id}\n                                        >{title.type}\n                                        </option>\n                                    }\n                                )\n                            }\n                        </select>\n\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group dateContainer\">\n                        <label className=\"label\" htmlFor=\"startDate\">Start Date: </label>\n                        <input\n                            required autoFocus\n                            type=\"date\"\n                            className=\"form-control\"\n                            defaultValue={updateStaff.startDate}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateStaff }\n                                    copy.startDate = event.target.value\n                                    setUpdateStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group imageContainer\">\n                        <label className=\"label\" htmlFor=\"image\">Image: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"example.com\"\n                            value={updateStaff.imageURL}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateStaff }\n                                    copy.imageURL = event.target.value\n                                    setUpdateStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <input onChange={(evt) => {\n                        const copy = { ...updateStaff }\n                        copy.isAdmin = evt.target.checked\n                        setUpdateStaff(copy)\n                    }}\n                        type=\"checkbox\" id=\"isAdmin\" />\n                    <label htmlFor=\"email\" id=\"isAdmin\"> New Admin? </label>\n                </fieldset>\n\n                <button\n                    className=\"saveNewStaffButton\"\n                    onClick={(event) => {\n                        handleUpdateStaffButton(event)\n                    }}\n                >\n                    Save Info\n                </button>\n            </form>\n        </div>\n\n\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/PublicAbout.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/PublicHome.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/PublicStaffList.js",["324","325"],[],"import { useEffect, useState } from 'react'\nimport \"./Staff.css\"\n\nexport const PublicStaffList = () => {\n\n\n    const [staffMembers, setStaff] = useState([])\n    const [filteredStaff, setFilteredStaff] = useState([])\n    const [staffTitles, setTitle] = useState([])\n\n\n    // const sortFilteredStaff = [...filteredStaff].sort((a, b) => a.fullName > b.fullName ? 1 : -1)\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/staff?&_expand=user&_expand=title&_sort=fullName`)\n                .then(response => response.json())\n                .then((staffArray) => {\n                    setStaff(staffArray)\n                })\n        },\n        []\n    )\n\n    useEffect(\n        () => {\n            setFilteredStaff(staffMembers)\n        },\n        [staffMembers]\n    )\n\n\n    // useEffect(\n    //     () => {\n    //         const searchedStaffMembers = staffMembers.filter(staffMember => {\n    //             return staffMember.user.fullName.toLowerCase().startsWith(searchTermState.toLowerCase())\n    //         }\n    //         )\n    //         setFilteredStaff(searchedStaffMembers)\n    //     },\n    //     [searchTermState]\n    // )\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/staff?_expand=title`)\n                .then(response => response.json())\n                .then((titleArray) => {\n                    setTitle(titleArray)\n                })\n\n        },\n        []\n    )\n\n\n    return (\n\n        <div className=\"staffPage\">\n            <h2 className=\"staffHeader\">Our Staff</h2>\n\n            <div className=\"staffMembers\">\n                {\n                    filteredStaff.map((staff) => {\n                        return <div className=\"staff\" key={`staff--${staff.id}`}>\n\n                            <img className=\"staffImg\" src={staff.imageURL} />\n                            <div className=\"staffInfo\">\n                                <div className=\"fullName\">\n                                    {staff?.user?.fullName}</div>\n                                <div className=\"title\">\n                                    {staff?.title?.type}\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                    })\n\n                }\n                {staffTitles.map(title => {\n                    if (title.id === title.titleId) {\n                        return <div className=\"title\">{title.type}</div>\n                    }\n                })}\n\n            </div>\n        </div>\n    )\n}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AddNotes.js",["326","327"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Requests.css\"\n\nexport const AddNotes = ({ id }) => {\n\n    const [notes, setNotes] = useState({\n    })\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests/${id}`)\n                .then(response => response.json())\n                .then((staffNotes) => {\n                    setNotes(staffNotes)\n                })\n        }, []\n    )\n\n    const navigate = useNavigate()\n\n    const handleSaveNotes = (event) => {\n        event.preventDefault()\n\n        const newStaffNote = {\n            notes: notes.notes\n        }\n\n        return fetch(`http://localhost:8088/requests/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newStaffNote)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n             \n                window.alert(\"Your note has been saved.\")\n        \n            })\n            .then(() => {\n                navigate(\"/requests\")\n            })\n\n    }\n\n    const handleEditNotes = (event) => {\n        event.preventDefault()\n\n        const newStaffNote = {\n            notes: notes.notes\n        }\n\n        return fetch(`http://localhost:8088/requests/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newStaffNote)\n        })\n\n            .then((response) => response.json())\n\n            .then(() => {\n                window.alert(\"Your edits have been saved.\")\n            })\n\n            .then(() => {\n                navigate(\"/requests\")\n            })\n\n    }\n\n\n    return (\n\n        <div>\n            <form>\n                <div>\n                    <textarea\n                        id=\"textNotes\"\n                        placeholder=\"Add notes...\"\n                        value={notes.notes}\n                        onChange={(event) => {\n                            const copy = { ...notes }\n                            copy.notes = event.target.value\n                            setNotes(copy)\n                        }}>\n                    </textarea>\n                </div>\n                {notes?.notes?.length ?\n                    <button\n                        className=\"saveNotesButton\"\n                        onClick={(event) => {\n                            handleEditNotes(event)                   \n                        }} >\n                        Edit Note\n                    </button> : <button\n                        className=\"saveNotesButton\"\n                        onClick={(event) => {\n                            handleSaveNotes(event)\n                        }}>\n                        Save Note\n                    </button>}\n            </form>\n        </div>\n\n    )\n}\n\n{/* <fieldset>\n                        <input onChange={(evt) => {\n                            const copy = { ...customer }\n                            copy.isStaff = evt.target.checked\n                            setCustomer(copy)\n                        }}\n                            type=\"checkbox\" id=\"isStaff\" />\n                        <label htmlFor=\"email\"> I am an employee </label>\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\" id=\"registerButton\"> Register </button>\n                    </fieldset> */}","/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/AdminGreeting.js",["328","329","330"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/StaffGreeting.js",["331","332"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/ModalTest.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/ClientGreeting.js",["333","334"],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/RequestEditAppTest.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/RequestEditTest.js",[],[],"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/Title.js",[],[],{"ruleId":"335","severity":1,"message":"336","line":35,"column":12,"nodeType":"337","messageId":"338","endLine":35,"endColumn":22},{"ruleId":"339","severity":1,"message":"340","line":61,"column":12,"nodeType":"341","endLine":61,"endColumn":14,"suggestions":"342"},{"ruleId":"339","severity":1,"message":"340","line":26,"column":12,"nodeType":"341","endLine":26,"endColumn":14,"suggestions":"343"},{"ruleId":"339","severity":1,"message":"344","line":39,"column":9,"nodeType":"341","endLine":39,"endColumn":11,"suggestions":"345"},{"ruleId":"346","severity":1,"message":"347","line":107,"column":33,"nodeType":"348","endLine":107,"endColumn":84},{"ruleId":"335","severity":1,"message":"349","line":7,"column":25,"nodeType":"337","messageId":"338","endLine":7,"endColumn":39},{"ruleId":"335","severity":1,"message":"349","line":7,"column":25,"nodeType":"337","messageId":"338","endLine":7,"endColumn":39},{"ruleId":"346","severity":1,"message":"347","line":100,"column":29,"nodeType":"348","endLine":100,"endColumn":78},{"ruleId":"350","severity":1,"message":"351","line":126,"column":40,"nodeType":"352","messageId":"353","endLine":126,"endColumn":42},{"ruleId":"346","severity":1,"message":"347","line":85,"column":41,"nodeType":"348","endLine":86,"endColumn":56},{"ruleId":"335","severity":1,"message":"354","line":8,"column":12,"nodeType":"337","messageId":"338","endLine":8,"endColumn":19},{"ruleId":"339","severity":1,"message":"355","line":26,"column":9,"nodeType":"341","endLine":26,"endColumn":11,"suggestions":"356"},{"ruleId":"346","severity":1,"message":"347","line":28,"column":37,"nodeType":"348","endLine":29,"endColumn":58},{"ruleId":"346","severity":1,"message":"347","line":40,"column":33,"nodeType":"348","endLine":40,"endColumn":84},{"ruleId":"335","severity":1,"message":"357","line":6,"column":12,"nodeType":"337","messageId":"338","endLine":6,"endColumn":20},{"ruleId":"358","severity":1,"message":"359","line":16,"column":12,"nodeType":"341","messageId":"360","endLine":16,"endColumn":23},{"ruleId":"335","severity":1,"message":"357","line":6,"column":12,"nodeType":"337","messageId":"338","endLine":6,"endColumn":20},{"ruleId":"358","severity":1,"message":"359","line":16,"column":12,"nodeType":"341","messageId":"360","endLine":16,"endColumn":23},{"ruleId":"361","severity":1,"message":"362","line":7,"column":17,"nodeType":"348","messageId":"363","endLine":7,"endColumn":83,"fix":"364"},{"ruleId":"361","severity":1,"message":"362","line":8,"column":17,"nodeType":"348","messageId":"363","endLine":8,"endColumn":81,"fix":"365"},{"ruleId":"361","severity":1,"message":"362","line":9,"column":17,"nodeType":"348","messageId":"363","endLine":9,"endColumn":100,"fix":"366"},{"ruleId":"335","severity":1,"message":"367","line":28,"column":15,"nodeType":"337","messageId":"338","endLine":28,"endColumn":33},{"ruleId":"335","severity":1,"message":"368","line":36,"column":15,"nodeType":"337","messageId":"338","endLine":36,"endColumn":34},{"ruleId":"339","severity":1,"message":"369","line":28,"column":8,"nodeType":"341","endLine":28,"endColumn":10,"suggestions":"370"},{"ruleId":"339","severity":1,"message":"369","line":37,"column":8,"nodeType":"341","endLine":37,"endColumn":10,"suggestions":"371"},{"ruleId":"346","severity":1,"message":"347","line":67,"column":29,"nodeType":"348","endLine":67,"endColumn":78},{"ruleId":"350","severity":1,"message":"351","line":82,"column":40,"nodeType":"352","messageId":"353","endLine":82,"endColumn":42},{"ruleId":"339","severity":1,"message":"372","line":17,"column":12,"nodeType":"341","endLine":17,"endColumn":14,"suggestions":"373"},{"ruleId":"374","severity":1,"message":"375","line":113,"column":1,"nodeType":"376","messageId":"377","endLine":124,"endColumn":36},{"ruleId":"335","severity":1,"message":"378","line":8,"column":12,"nodeType":"337","messageId":"338","endLine":8,"endColumn":27},{"ruleId":"379","severity":1,"message":"380","line":16,"column":13,"nodeType":"381","messageId":"382","endLine":16,"endColumn":38},{"ruleId":"339","severity":1,"message":"383","line":71,"column":9,"nodeType":"341","endLine":71,"endColumn":11,"suggestions":"384"},{"ruleId":"335","severity":1,"message":"385","line":9,"column":11,"nodeType":"337","messageId":"338","endLine":9,"endColumn":28},{"ruleId":"339","severity":1,"message":"386","line":33,"column":9,"nodeType":"341","endLine":33,"endColumn":11,"suggestions":"387"},{"ruleId":"335","severity":1,"message":"385","line":9,"column":11,"nodeType":"337","messageId":"338","endLine":9,"endColumn":28},{"ruleId":"339","severity":1,"message":"386","line":33,"column":9,"nodeType":"341","endLine":33,"endColumn":11,"suggestions":"388"},"no-unused-vars","'newClients' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fatbackUserObject.id'. Either include it or remove the dependency array.","ArrayExpression",["389"],["390"],"React Hook useEffect has a missing dependency: 'requestId'. Either include it or remove the dependency array.",["391"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setSearchTerms' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'artists' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'artistId'. Either include it or remove the dependency array.",["392"],"'requests' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"393","text":"394"},{"range":"395","text":"394"},{"range":"396","text":"394"},"'newUserToSendToAPI' is assigned a value but never used.","'newStaffToSendToAPI' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'staffId'. Either include it or remove the dependency array.",["397"],["398"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["399"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'pendingRequests' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook useEffect has missing dependencies: 'refresh' and 'windowAlert'. Either include them or remove the dependency array. You can also do a functional update 'setRefresh(r => ...)' if you only need 'refresh' in the 'setRefresh' call.",["400"],"'fatbackUserObject' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array. You can also do a functional update 'setRefresh(r => ...)' if you only need 'refresh' in the 'setRefresh' call.",["401"],["402"],{"desc":"403","fix":"404"},{"desc":"403","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},[186,186]," rel=\"noreferrer\"",[417,417],[665,665],{"desc":"410","fix":"411"},{"desc":"410","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"417","fix":"419"},"Update the dependencies array to be: [fatbackUserObject.id]",{"range":"420","text":"421"},{"range":"422","text":"421"},"Update the dependencies array to be: [requestId]",{"range":"423","text":"424"},"Update the dependencies array to be: [artistId]",{"range":"425","text":"426"},"Update the dependencies array to be: [staffId]",{"range":"427","text":"428"},{"range":"429","text":"428"},"Update the dependencies array to be: [id]",{"range":"430","text":"431"},"Update the dependencies array to be: [refresh, windowAlert]",{"range":"432","text":"433"},"Update the dependencies array to be: [refresh]",{"range":"434","text":"435"},{"range":"436","text":"435"},[1596,1598],"[fatbackUserObject.id]",[829,831],[1049,1051],"[requestId]",[683,685],"[artistId]",[722,724],"[staffId]",[952,954],[455,457],"[id]",[1850,1852],"[refresh, windowAlert]",[701,703],"[refresh]",[709,711]]