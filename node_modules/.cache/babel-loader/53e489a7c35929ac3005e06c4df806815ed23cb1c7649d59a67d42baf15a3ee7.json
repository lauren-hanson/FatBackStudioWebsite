{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\n//import { ModalWindow } from \"./ModalTest\"\n//import {PopUpTest} from \"./PopUpTest\"\n\nexport const AdminGreeting = _ref => {\n  _s();\n  let {\n    users\n  } = _ref;\n  const [requests, setRequests] = useState([]);\n  //const [pendingRequests, setPendingRequests] = useState([])\n  const [refresh, setRefresh] = useState(true);\n  const localFatBackUser = localStorage.getItem(\"fatback_user\");\n  const fatbackUserObject = JSON.parse(localFatBackUser);\n  const windowAlert = () => {\n    if (requests.isPending = true) {\n      return alert(`Welcome. You have new pending requests.`\n      // `Welcome ${users.fullName}. You have ${pendingRequests.length} pending requests.`\n      );\n    } else {\n      return alert(\"Welcome. You have no pending requests\");\n    }\n\n    // {\n    //     requests.isPending=true ?\n    //         alert(\n    //             `Welcome ${users.fullName}. You have ${pendingRequests.length} pending requests.`)\n    //         : alert(\"Welcome. You have no pending requests\")\n    // }\n  };\n\n  const getAllPendingRequests = () => {\n    fetch(`http://localhost:8088/requests?isPending=true`).then(response => response.json()).then(requestInfo => {\n      setPendingRequests(requestInfo);\n    });\n  };\n  useEffect(() => {\n    fetch('http://localhost:8088/requests').then(response => response.json()).then(pendingRequest => {\n      setRequests(pendingRequest);\n    }).then(() => {\n      getAllPendingRequests();\n    }).then(() => {\n      setRefresh(!refresh);\n    }).then(() => {\n      windowAlert();\n    });\n  }, []);\n};\n_s(AdminGreeting, \"fJdMCiNwGMu4zv5r3HsC68eUiNg=\");\n_c = AdminGreeting;\nvar _c;\n$RefreshReg$(_c, \"AdminGreeting\");","map":{"version":3,"names":["useEffect","useState","AdminGreeting","users","requests","setRequests","refresh","setRefresh","localFatBackUser","localStorage","getItem","fatbackUserObject","JSON","parse","windowAlert","isPending","alert","getAllPendingRequests","fetch","then","response","json","requestInfo","setPendingRequests","pendingRequest"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/AdminGreeting.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\n//import { ModalWindow } from \"./ModalTest\"\n//import {PopUpTest} from \"./PopUpTest\"\n\nexport const AdminGreeting = ({ users }) => {\n\n    const [requests, setRequests] = useState([])\n    //const [pendingRequests, setPendingRequests] = useState([])\n    const [refresh, setRefresh] = useState(true)\n\n    const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    const windowAlert = () => {\n\n        if (requests.isPending = true) {\n            return alert(\n                `Welcome. You have new pending requests.`\n                // `Welcome ${users.fullName}. You have ${pendingRequests.length} pending requests.`\n                )\n        } else {\n            return alert(\"Welcome. You have no pending requests\")\n        }\n\n        // {\n        //     requests.isPending=true ?\n        //         alert(\n        //             `Welcome ${users.fullName}. You have ${pendingRequests.length} pending requests.`)\n        //         : alert(\"Welcome. You have no pending requests\")\n        // }\n\n\n\n    }\n\n    const getAllPendingRequests = () => {\n        fetch(`http://localhost:8088/requests?isPending=true`)\n            .then(response => response.json())\n            .then((requestInfo) => {\n                setPendingRequests(requestInfo)\n            })\n    }\n\n\n    useEffect(() => {\n\n        fetch('http://localhost:8088/requests')\n\n            .then(response => response.json())\n\n\n            .then((pendingRequest => {\n                setRequests(pendingRequest)\n            }))\n\n            .then(() => {\n                getAllPendingRequests()\n            })\n\n\n            .then(() => {\n                setRefresh(!refresh)\n            })\n\n            .then(() => { \n                windowAlert()\n            })\n\n\n    },\n        [])\n\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAe;EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC;EAEnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACA,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMO,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAC7D,MAAMC,iBAAiB,GAAGC,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC;EAEtD,MAAMM,WAAW,GAAG,MAAM;IAEtB,IAAIV,QAAQ,CAACW,SAAS,GAAG,IAAI,EAAE;MAC3B,OAAOC,KAAK,CACP;MACD;MAAA,CACC;IACT,CAAC,MAAM;MACH,OAAOA,KAAK,CAAC,uCAAuC,CAAC;IACzD;;IAEA;IACA;IACA;IACA;IACA;IACA;EAIJ,CAAC;;EAED,MAAMC,qBAAqB,GAAG,MAAM;IAChCC,KAAK,CAAE,+CAA8C,CAAC,CACjDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEG,WAAW,IAAK;MACnBC,kBAAkB,CAACD,WAAW,CAAC;IACnC,CAAC,CAAC;EACV,CAAC;EAGDtB,SAAS,CAAC,MAAM;IAEZkB,KAAK,CAAC,gCAAgC,CAAC,CAElCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAGjCF,IAAI,CAAEK,cAAc,IAAI;MACrBnB,WAAW,CAACmB,cAAc,CAAC;IAC/B,CAAC,CAAE,CAEFL,IAAI,CAAC,MAAM;MACRF,qBAAqB,EAAE;IAC3B,CAAC,CAAC,CAGDE,IAAI,CAAC,MAAM;MACRZ,UAAU,CAAC,CAACD,OAAO,CAAC;IACxB,CAAC,CAAC,CAEDa,IAAI,CAAC,MAAM;MACRL,WAAW,EAAE;IACjB,CAAC,CAAC;EAGV,CAAC,EACG,EAAE,CAAC;AAIX,CAAC;AAAA,GAtEYZ,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}