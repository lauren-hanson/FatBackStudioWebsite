{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/auth/Register.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = props => {\n  _s();\n  const [customer, setCustomer] = useState({\n    email: \"\",\n    fullName: \"\",\n    isStaff: false,\n    isAdmin: false\n  });\n  let navigate = useNavigate();\n  const registerNewUser = () => {\n    return fetch(\"http://localhost:8088/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(customer)\n    }).then(res => res.json()).then(createdUser => {\n      if (createdUser.hasOwnProperty(\"id\")) {\n        localStorage.setItem(\"fatback_user\", JSON.stringify({\n          id: createdUser.id,\n          // staff: createdUser.isStaff,\n          admin: createdUser.isAdmin\n        }));\n        navigate(\"/\");\n      }\n    });\n  };\n  const handleRegister = e => {\n    e.preventDefault();\n    return fetch(`http://localhost:8088/users?email=${customer.email}`).then(res => res.json()).then(response => {\n      if (response.length > 0) {\n        // Duplicate email. No good.\n        window.alert(\"Account with that email address already exists\");\n      } else {\n        // Good email, create user.\n        registerNewUser();\n      }\n    });\n  };\n  const updateCustomer = evt => {\n    const copy = {\n      ...customer\n    };\n    copy[evt.target.id] = evt.target.value;\n    setCustomer(copy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register container--register\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form--login form--register\",\n        onSubmit: handleRegister,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"h3 mb-3 font-weight-normal\",\n          children: \"Please Register for FatBack Studio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fullName\",\n            children: \" Full Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: updateCustomer,\n            type: \"text\",\n            id: \"fullName\",\n            className: \"form-control\",\n            placeholder: \"Enter your name\",\n            required: true,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \" Email address \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: updateCustomer,\n            type: \"email\",\n            id: \"email\",\n            className: \"form-control\",\n            placeholder: \"Email address\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: evt => {\n              const copy = {\n                ...customer\n              };\n              copy.isStaff = evt.target.checked;\n              setCustomer(copy);\n            },\n            type: \"checkbox\",\n            id: \"isStaff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \" I am an employee \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"registerButton\",\n            children: \" Register \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"g7z/XXbGVQCTNYuxsqGLMge9oWg=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useNavigate","Register","props","customer","setCustomer","email","fullName","isStaff","isAdmin","navigate","registerNewUser","fetch","method","headers","body","JSON","stringify","then","res","json","createdUser","hasOwnProperty","localStorage","setItem","id","admin","handleRegister","e","preventDefault","response","length","window","alert","updateCustomer","evt","copy","target","value","textAlign","checked"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/auth/Register.js"],"sourcesContent":["import { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const [customer, setCustomer] = useState({\n        email: \"\",\n        fullName: \"\",\n        isStaff: false,\n        isAdmin: false\n    })\n    let navigate = useNavigate()\n\n    const registerNewUser = () => {\n        return fetch(\"http://localhost:8088/users\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(customer)\n        })\n            .then(res => res.json())\n            .then(createdUser => {\n                if (createdUser.hasOwnProperty(\"id\")) {\n                    localStorage.setItem(\"fatback_user\", JSON.stringify({\n                        id: createdUser.id,\n                        // staff: createdUser.isStaff,\n                        admin: createdUser.isAdmin\n                    }))\n\n                    navigate(\"/\")\n                }\n            })\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n        return fetch(`http://localhost:8088/users?email=${customer.email}`)\n            .then(res => res.json())\n            .then(response => {\n                if (response.length > 0) {\n                    // Duplicate email. No good.\n                    window.alert(\"Account with that email address already exists\")\n                }\n                else {\n                    // Good email, create user.\n                    registerNewUser()\n                }\n            })\n    }\n\n    const updateCustomer = (evt) => {\n        const copy = { ...customer }\n        copy[evt.target.id] = evt.target.value\n        setCustomer(copy)\n    }\n\n    return (\n        <div className=\"register container--register\">\n            <main style={{ textAlign: \"center\" }}>\n                <form className=\"form--login form--register\" onSubmit={handleRegister}>\n                    <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for FatBack Studio</h1>\n                    <fieldset>\n                        <label htmlFor=\"fullName\"> Full Name </label>\n                        <input onChange={updateCustomer}\n                            type=\"text\" id=\"fullName\" className=\"form-control\"\n                            placeholder=\"Enter your name\" required autoFocus />\n                    </fieldset>\n                    <fieldset>\n                        <label htmlFor=\"email\"> Email address </label>\n                        <input onChange={updateCustomer}\n                            type=\"email\" id=\"email\" className=\"form-control\"\n                            placeholder=\"Email address\" required />\n                    </fieldset>\n                    <fieldset>\n                        <input onChange={(evt) => {\n                            const copy = { ...customer }\n                            copy.isStaff = evt.target.checked\n                            setCustomer(copy)\n                        }}\n                            type=\"checkbox\" id=\"isStaff\" />\n                        <label htmlFor=\"email\"> I am an employee </label>\n                    </fieldset>\n                    {/* <fieldset>\n                        <input onChange={(evt) => {\n                            const copy = { ...customer }\n                            copy.isAdmin = evt.target.checked\n                            setCustomer(copy)\n                        }}\n                            type=\"checkbox\" id=\"isAdmin\" />\n                        <label htmlFor=\"email\"> I am an admin </label>\n                    </fieldset> */}\n                    <fieldset>\n                        <button type=\"submit\" id=\"registerButton\"> Register </button>\n                    </fieldset>\n                </form>\n            </main>\n        </div>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}