{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/ContactNotice.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactNotice = () => {\n  _s();\n  const [contact, setContacted] = useState({\n    contacted: false\n  });\n  useEffect(() => {\n    fetch('http://localhost:8088/requests?_expand=genre&_sort=startDate').then(response => response.json()).then(contactInfo => {\n      setContacted(contactInfo);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email sent?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: contact.contacted,\n      onChange: event => {\n        const copy = {\n          ...contact\n        };\n        copy.contacted = event.target.checked;\n        setContacted(copy);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ContactNotice, \"HkqiViTVhqZ2jYNAaGSq6d6O7b4=\");\n_c = ContactNotice;\nvar _c;\n$RefreshReg$(_c, \"ContactNotice\");","map":{"version":3,"names":["useEffect","useState","ContactNotice","contact","setContacted","contacted","fetch","then","response","json","contactInfo","event","copy","target","checked"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/ContactNotice.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nexport const ContactNotice = () => {\n\n\n    const [contact, setContacted] = useState({\n        contacted: false\n    })\n\n    useEffect(() => { \n        fetch('http://localhost:8088/requests?_expand=genre&_sort=startDate')\n            .then(response => response.json())\n            .then(contactInfo => { \n                setContacted(contactInfo)\n            })\n    }, []\n    )\n\n    \n    return (\n        <>\n            <label>Email sent?</label> \n            <input\n                type=\"checkbox\" \n                value={contact.contacted}\n                onChange={\n                    (event) => { \n                        const copy = {...contact}\n                        copy.contacted = event.target.checked\n                        setContacted(copy)\n                    }\n                }/>\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAE3C,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;EAG/B,MAAM,CAACC,OAAO,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC;IACrCI,SAAS,EAAE;EACf,CAAC,CAAC;EAEFL,SAAS,CAAC,MAAM;IACZM,KAAK,CAAC,8DAA8D,CAAC,CAChEC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,WAAW,IAAI;MACjBN,YAAY,CAACM,WAAW,CAAC;IAC7B,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CACJ;EAGD,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,eAC1B;MACI,IAAI,EAAC,UAAU;MACf,KAAK,EAAEP,OAAO,CAACE,SAAU;MACzB,QAAQ,EACHM,KAAK,IAAK;QACP,MAAMC,IAAI,GAAG;UAAC,GAAGT;QAAO,CAAC;QACzBS,IAAI,CAACP,SAAS,GAAGM,KAAK,CAACE,MAAM,CAACC,OAAO;QACrCV,YAAY,CAACQ,IAAI,CAAC;MACtB;IACH;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBACR;AAEX,CAAC;AAAA,GAhCYV,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}