{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/BookingForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./BookingForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookingForm = () => {\n  _s();\n  const [genres, setGenres] = useState([]);\n  const [request, setBookingForm] = useState({\n    bandName: \"\"\n    // genreId: 0,\n    // startDate: \"\",\n    // endDate: \"\",\n    //numOfSongs: \"\",\n    // musicianRequest: false,\n    // sessionMusicians: false, \n    // photoRequest: false, \n    // videoRequest: false \n  });\n\n  const navigate = useNavigate();\n  const localFatBackUser = localStorage.getItem(\"fatback_user\");\n  const fatbackUserObject = JSON.parse(localFatBackUser);\n  useEffect(() => {\n    fetch(`http://localhost:8088/genres`).then(response => response.json()).then(genreArray => {\n      setGenres(genreArray);\n    });\n  }, []);\n  const submitButtonClick = event => {\n    event.preventDefault();\n    const requestFormToSendToAPI = {\n      bandName: request.bandName,\n      clientId: fatbackUserObject.id\n      //genreId: request.genreId,\n      // startDate: request.startDate,\n      // endDate: request.endDate,\n      // numOfSongs: request.numOfSongs,\n      // musicianRequest: request.musicianRequest,\n      // sessionMusicians: request.sessionMusicians, \n      // photoRequest: request.photoRequest,\n      // videoRequest: request.videoRequest\n    };\n\n    return fetch(`http://localhost:8088/requests`, {\n      method: \"POST\",\n      headers: {\n        \"Cotent-Type\": \"application/json\"\n      },\n      body: JSON.stringify(requestFormToSendToAPI)\n    }).then(response => response.json()).then(() => {\n      navigate(\"/myrequest\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookingForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Booking Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bandName\",\n            children: \"Band Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            autoFocus: true,\n            type: \"text\",\n            className: \"form-control\",\n            value: request.bandName,\n            onChange: event => {\n              const copy = {\n                ...request\n              };\n              copy.bandName = event.target.value;\n              setBookingForm(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickEvent => {\n          submitButtonClick(clickEvent);\n        },\n        className: \"submitButton\",\n        children: \"Submit Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(BookingForm, \"pmGY2XwLNRuaFeHieW/VfZXegXQ=\", false, function () {\n  return [useNavigate];\n});\n_c = BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["useEffect","useState","useNavigate","BookingForm","genres","setGenres","request","setBookingForm","bandName","navigate","localFatBackUser","localStorage","getItem","fatbackUserObject","JSON","parse","fetch","then","response","json","genreArray","submitButtonClick","event","preventDefault","requestFormToSendToAPI","clientId","id","method","headers","body","stringify","copy","target","value","clickEvent"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/BookingForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport \"./BookingForm.css\"\n\nexport const BookingForm = () => {\n\n    const [genres, setGenres] = useState([])\n\n    const [request, setBookingForm] = useState({\n\n        bandName: \"\"\n        // genreId: 0,\n        // startDate: \"\",\n        // endDate: \"\",\n        //numOfSongs: \"\",\n        // musicianRequest: false,\n        // sessionMusicians: false, \n        // photoRequest: false, \n        // videoRequest: false \n\n    })\n\n    const navigate = useNavigate()\n\n    const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/genres`)\n                .then(response => response.json())\n                .then((genreArray) => {\n                    setGenres(genreArray)\n                })\n        },\n        []\n\n    )\n\n\n    const submitButtonClick = (event) => {\n        event.preventDefault()\n\n        const requestFormToSendToAPI = {\n\n            bandName: request.bandName,\n            clientId: fatbackUserObject.id\n            //genreId: request.genreId,\n            // startDate: request.startDate,\n            // endDate: request.endDate,\n            // numOfSongs: request.numOfSongs,\n            // musicianRequest: request.musicianRequest,\n            // sessionMusicians: request.sessionMusicians, \n            // photoRequest: request.photoRequest,\n            // videoRequest: request.videoRequest\n\n        }\n\n        return fetch(`http://localhost:8088/requests`, {\n            method: \"POST\",\n            headers: {\n                \"Cotent-Type\": \"application/json\",\n            },\n            body: JSON.stringify(requestFormToSendToAPI)\n        })\n\n            .then(response => response.json())\n            .then(() => {\n                navigate(\"/myrequest\")\n            })\n\n    }\n\n    return (\n        < div className=\"bookingForm\" >\n            <h2>Booking Form</h2>\n            <form>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label htmlFor=\"bandName\">Band Name: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={request.bandName}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...request }\n                                    copy.bandName = event.target.value\n                                    setBookingForm(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                {/* <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">\n                            Name:\n                        </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Your name...\"\n                            value={bookingForm.name}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...bookingForm }\n                                    copy.name = event.target.value\n                                    setBookingForm(copy)\n                                }\n                            }\n                        />\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"phoneNumber\">\n                            Phone Number:\n                        </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Your number...\"\n                            value={bookingForm.phoneNumber}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...bookingForm }\n                                    copy.phoneNumber = event.target.value\n                                    setBookingForm(copy)\n                                }\n                            }\n                        />\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">\n                            Email:\n                        </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Your email...\"\n                        />\n\n                    </div>\n                </fieldset> */}\n                {/* \n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"genre\">Choose a genre:</label>\n                        <select id=\"genre\"\n                            onChange={\n                                (event) => {\n                                    const copy = { ...request }\n                                    copy.genreId = parseInt(event.target.value)\n                                    setBookingForm(copy)\n                                }}>\n                            <option value=\"0\">Genre...</option>\n\n                            {\n                                genres.map(\n                                    (genre) => {\n                                        return <option\n                                            key={`genre--${genre.id}`}\n                                            value={genre.id}>{genre.type}</option>\n                                    }\n                                )\n                            }\n                        </select>\n\n                    </div>\n                </fieldset> */}\n\n                {/* <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"songs\">\n                            No. of Songs:\n                        </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={request.numOfSongs}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...request }\n                                    copy.numOfSongs = event.target.value\n                                    setBookingForm(copy)\n                                }\n                            }\n\n                        />\n\n                    </div>\n                </fieldset> */}\n\n                {/* <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"date\">\n                            Start Date:\n                        </label>\n                        <input\n                            \n                            type=\"date\"\n                           \n                            className=\"form-control\"\n                            onChange={\n                                (event) => {\n                                    const copy = { ...request }\n                                    copy.startDate = event.target.value\n                                    setBookingForm(copy)\n                                }\n                            }\n\n                        />\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"date\">\n                            End Date:\n                        </label>\n                        <input\n                          \n                            type=\"date\"\n                           \n                            className=\"form-control\"\n                            onChange={\n                                (event) => {\n                                    const copy = { ...request }\n                                    copy.endDate = event.target.value\n                                    setBookingForm(copy)\n                                }\n                            }\n\n                        />\n\n                    </div>\n                </fieldset> */}\n\n                {/* <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"band\">\n                            Do you have musicians or a band?\n                        </label>\n\n                        <div className=\"radioButton\">\n                            <input\n                                required autoFocus\n                                type=\"radio\"\n                                className=\"form-control\"\n                                value={bookingForm.musicianRequest}\n                                name=\"musicians\"\n                                onChange={\n                                    (event) => {\n                                        const copy = { ...bookingForm }\n                                        copy.musicianRequest = event.target.checked\n                                        setBookingForm(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\">Yes</label>\n\n                            <input\n                                required autoFocus\n                                type=\"radio\"\n                                className=\"form-control\"\n                                value={bookingForm.musicianRequest}\n                                name=\"musicians\"\n                                onChange={\n                                    (event) => {\n                                        const copy = { ...bookingForm }\n                                        copy.musicianRequest = event.target.checked\n                                        setBookingForm(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\" >No</label>\n\n                        </div>\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n\n                        Would you like session musicians?\n\n                        <div className=\"radioButton\">\n                            <input\n                                required autoFocus\n                                type=\"radio\"\n                                className=\"form-control\"\n                                value=\"true\"\n                                id=\"yes\"\n                                name=\"session\"\n                                onChange={\n                                    (event) => {\n                                        const copy = { ...bookingForm }\n                                        copy.sessionMusicians = event.target.checked\n                                        setBookingForm(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\"\n                            >Yes</label>\n\n                            <input\n                                required autoFocus\n                                type=\"radio\"\n                                className=\"form-control\"\n                                value=\"false\"\n                                id=\"no\"\n                                name=\"session\"\n                                onChange={\n                                    (event) => {\n                                        const copy = { ...bookingForm }\n                                        copy.sessionMusicians = event.target.checked\n                                        setBookingForm(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\"\n                            >No</label>\n\n                        </div>\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n\n                        Do you want photos?\n\n                        <div className=\"radioButton\">\n                            <input\n                                required autoFocus\n                                type=\"radio\"\n                                className=\"form-control\"\n                                value=\"true\"\n                                id=\"yes\"\n                                name=\"photo\"\n                                onChange={\n                                    (event) => {\n                                        const copy = { ...bookingForm }\n                                        copy.photoRequest = event.target.checked\n                                        setBookingForm(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\">Yes</label>\n\n                            <input\n                                required autoFocus\n                                type=\"radio\"\n                                className=\"form-control\"\n                                value=\"false\"\n                                id=\"no\"\n                                name=\"photo\"\n                                onChange={\n                                    (event) => {\n                                        const copy = { ...bookingForm }\n                                        copy.photoRequest = event.target.checked\n                                        setBookingForm(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\">No</label>\n\n                        </div>\n\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        Do you want video?\n\n                        <div className=\"radioButton\">\n                            <input\n                                required autoFocus\n                                type=\"radio\"\n                                className=\"form-control\"\n                                value=\"true\"\n                                id=\"yes\"\n                                name=\"video\"\n                                onChange={\n                                    (event) => {\n                                        const copy = { ...bookingForm }\n                                        copy.videoRequest = event.target.checked\n                                        setBookingForm(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\"\n                            >Yes</label>\n\n                            <input\n                                required autoFocus\n                                type=\"radio\"\n                                className=\"form-control\"\n                                value=\"false\"\n                                id=\"no\"\n                                name=\"video\"\n                                onChange={\n                                    (event) => {\n                                        const copy = { ...bookingForm }\n                                        copy.videoRequest = event.target.checked\n                                        setBookingForm(copy)\n                                    }\n                                }\n                            />\n                            <label className=\"radioLabel\"\n                            >No</label>\n\n                        </div>\n                    </div>\n                </fieldset> */}\n\n                <button\n                    onClick={(clickEvent) => {\n                        submitButtonClick(clickEvent)\n                    }}\n                    className=\"submitButton\">\n                    Submit Request\n                </button>\n\n\n            </form>\n        </div >\n    )\n}\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,mBAAmB;AAAA;AAE1B,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;EAE7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM,CAACK,OAAO,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC;IAEvCO,QAAQ,EAAE;IACV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAEJ,CAAC,CAAC;;EAEF,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAE9B,MAAMQ,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAC7D,MAAMC,iBAAiB,GAAGC,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC;EAEtDV,SAAS,CACL,MAAM;IACFgB,KAAK,CAAE,8BAA6B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEG,UAAU,IAAK;MAClBf,SAAS,CAACe,UAAU,CAAC;IACzB,CAAC,CAAC;EACV,CAAC,EACD,EAAE,CAEL;EAGD,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACjCA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,sBAAsB,GAAG;MAE3BhB,QAAQ,EAAEF,OAAO,CAACE,QAAQ;MAC1BiB,QAAQ,EAAEZ,iBAAiB,CAACa;MAC5B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAEJ,CAAC;;IAED,OAAOV,KAAK,CAAE,gCAA+B,EAAE;MAC3CW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,aAAa,EAAE;MACnB,CAAC;MACDC,IAAI,EAAEf,IAAI,CAACgB,SAAS,CAACN,sBAAsB;IAC/C,CAAC,CAAC,CAEGP,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAC,MAAM;MACRR,QAAQ,CAAC,YAAY,CAAC;IAC1B,CAAC,CAAC;EAEV,CAAC;EAED,oBACI;IAAM,SAAS,EAAC,aAAa;IAAA,wBACzB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eACrB;MAAA,wBAEI;QAAA,uBACI;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAO,OAAO,EAAC,UAAU;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAoB,eAC7C;YACI,QAAQ;YAAC,SAAS;YAClB,IAAI,EAAC,MAAM;YACX,SAAS,EAAC,cAAc;YACxB,KAAK,EAAEH,OAAO,CAACE,QAAS;YACxB,QAAQ,EACHc,KAAK,IAAK;cACP,MAAMS,IAAI,GAAG;gBAAE,GAAGzB;cAAQ,CAAC;cAC3ByB,IAAI,CAACvB,QAAQ,GAAGc,KAAK,CAACU,MAAM,CAACC,KAAK;cAClC1B,cAAc,CAACwB,IAAI,CAAC;YACxB;UACH;YAAA;YAAA;YAAA;UAAA,QACH;QAAA;UAAA;UAAA;UAAA;QAAA;MACA;QAAA;QAAA;QAAA;MAAA,QACC,eAkVX;QACI,OAAO,EAAGG,UAAU,IAAK;UACrBb,iBAAiB,CAACa,UAAU,CAAC;QACjC,CAAE;QACF,SAAS,EAAC,cAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAGN;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEf,CAAC;AAAA,GAzbY/B,WAAW;EAAA,QAkBHD,WAAW;AAAA;AAAA,KAlBnBC,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}