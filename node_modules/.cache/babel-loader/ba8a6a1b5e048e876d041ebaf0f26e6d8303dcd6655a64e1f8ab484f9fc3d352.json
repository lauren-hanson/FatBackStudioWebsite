{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AddNotes.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Requests.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddNotes = _ref => {\n  _s();\n  var _notes$notes;\n  let {\n    id\n  } = _ref;\n  const [notes, setNotes] = useState({});\n  const [feedback, setFeedback] = useState(\"\");\n  useEffect(() => {\n    if (feedback !== \"\") {\n      // Clear feedback to make entire element disappear after 3 seconds\n      setTimeout(() => setFeedback(\"\"), 3000);\n    }\n  }, [feedback]);\n  useEffect(() => {\n    fetch(`http://localhost:8088/requests/${id}`).then(response => response.json()).then(staffNotes => {\n      setNotes(staffNotes);\n    });\n  }, []);\n  const navigate = useNavigate();\n  const handleSaveNotes = event => {\n    event.preventDefault();\n    const newStaffNote = {\n      notes: notes.notes\n    };\n    return fetch(`http://localhost:8088/requests/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newStaffNote)\n    }).then(response => response.json()).then(() => {\n      setFeedback(\"Your note has been saved.\");\n    }).then(() => {\n      navigate(\"/requests\");\n    });\n  };\n  const handleEditNotes = event => {\n    event.preventDefault();\n    const newStaffNote = {\n      notes: notes.notes\n    };\n    return fetch(`http://localhost:8088/requests/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newStaffNote)\n    }).then(response => response.json()).then(() => {\n      setFeedback(\"Your edits have been saved.\");\n    }).then(() => {\n      navigate(\"/requests\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`,\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"textNotes\",\n          placeholder: \"Add notes...\",\n          value: notes.notes,\n          onChange: event => {\n            const copy = {\n              ...notes\n            };\n            copy.notes = event.target.value;\n            setNotes(copy);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), notes !== null && notes !== void 0 && (_notes$notes = notes.notes) !== null && _notes$notes !== void 0 && _notes$notes.length ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"saveNotesButton\",\n        onClick: event => {\n          handleEditNotes(event);\n        },\n        children: \"Edit Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"saveNotesButton\",\n        onClick: event => {\n          handleSaveNotes(event);\n        },\n        children: \"Save Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(AddNotes, \"yb42Pr89CO64inLDzzsCOv2H/KU=\", false, function () {\n  return [useNavigate];\n});\n_c = AddNotes;\n{/* <fieldset>\n                        <input onChange={(evt) => {\n                            const copy = { ...customer }\n                            copy.isStaff = evt.target.checked\n                            setCustomer(copy)\n                        }}\n                            type=\"checkbox\" id=\"isStaff\" />\n                        <label htmlFor=\"email\"> I am an employee </label>\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\" id=\"registerButton\"> Register </button>\n                    </fieldset> */}\nvar _c;\n$RefreshReg$(_c, \"AddNotes\");","map":{"version":3,"names":["useEffect","useState","useNavigate","AddNotes","id","notes","setNotes","feedback","setFeedback","setTimeout","fetch","then","response","json","staffNotes","navigate","handleSaveNotes","event","preventDefault","newStaffNote","method","headers","body","JSON","stringify","handleEditNotes","includes","copy","target","value","length"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AddNotes.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Requests.css\"\n\nexport const AddNotes = ({ id }) => {\n\n    const [notes, setNotes] = useState({\n    })\n\n    const [feedback, setFeedback] = useState(\"\")\n\n    useEffect(() => {\n        if (feedback !== \"\") {\n            // Clear feedback to make entire element disappear after 3 seconds\n            setTimeout(() => setFeedback(\"\"), 3000);\n        }\n    }, [feedback])\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests/${id}`)\n                .then(response => response.json())\n                .then((staffNotes) => {\n                    setNotes(staffNotes)\n                })\n        }, []\n    )\n\n    const navigate = useNavigate()\n\n    const handleSaveNotes = (event) => {\n        event.preventDefault()\n\n        const newStaffNote = {\n            notes: notes.notes\n        }\n\n        return fetch(`http://localhost:8088/requests/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newStaffNote)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n                setFeedback(\"Your note has been saved.\")\n            })\n            .then(() => {\n                navigate(\"/requests\")\n            })\n\n    }\n\n    const handleEditNotes = (event) => {\n        event.preventDefault()\n\n        const newStaffNote = {\n            notes: notes.notes\n        }\n\n        return fetch(`http://localhost:8088/requests/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newStaffNote)\n        })\n\n            .then((response) => response.json())\n\n            .then(() => {\n                setFeedback(\"Your edits have been saved.\")\n            })\n\n            .then(() => {\n                navigate(\"/requests\")\n            })\n\n    }\n\n\n    return (\n\n        <div>\n            <div className={`${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`}>\n                {feedback}\n            </div>\n            <form>\n                <div>\n                    <textarea\n                        id=\"textNotes\"\n                        placeholder=\"Add notes...\"\n                        value={notes.notes}\n                        onChange={(event) => {\n                            const copy = { ...notes }\n                            copy.notes = event.target.value\n                            setNotes(copy)\n                        }}>\n                    </textarea>\n                </div>\n                {notes?.notes?.length ?\n                    <button\n                        className=\"saveNotesButton\"\n                        onClick={(event) => {\n                            handleEditNotes(event)\n                        }}>\n                        Edit Note\n                    </button> : <button\n                        className=\"saveNotesButton\"\n                        onClick={(event) => {\n                            handleSaveNotes(event)\n                        }}>\n                        Save Note\n                    </button>}\n            </form>\n        </div>\n\n    )\n}\n\n{/* <fieldset>\n                        <input onChange={(evt) => {\n                            const copy = { ...customer }\n                            copy.isStaff = evt.target.checked\n                            setCustomer(copy)\n                        }}\n                            type=\"checkbox\" id=\"isStaff\" />\n                        <label htmlFor=\"email\"> I am an employee </label>\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\" id=\"registerButton\"> Register </button>\n                    </fieldset> */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}