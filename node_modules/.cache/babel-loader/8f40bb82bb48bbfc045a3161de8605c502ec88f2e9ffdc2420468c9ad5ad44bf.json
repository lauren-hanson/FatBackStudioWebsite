{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/ContactNotice.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactNotice = () => {\n  _s();\n  const [contact, update] = useState({\n    contacted: false\n  });\n  const updateRequest = {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email sent?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: contact.contacted,\n      onChange: event => {\n        const copy = {\n          ...contact\n        };\n        copy.contacted = event.target.checked;\n        setContacted(copy);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ContactNotice, \"W1k90UQRnaZuBia6Unhog+/WDCw=\");\n_c = ContactNotice;\nvar _c;\n$RefreshReg$(_c, \"ContactNotice\");","map":{"version":3,"names":["useEffect","useState","ContactNotice","contact","update","contacted","updateRequest","event","copy","target","checked","setContacted"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/ContactNotice.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nexport const ContactNotice = () => {\n\n\n    const [contact, update] = useState({\n        contacted: false\n    })\n\n   const updateRequest = { \n    \n   }\n\n\n\n    return (\n        <>\n            <label>Email sent?</label>\n            <input\n                type=\"checkbox\"\n                value={contact.contacted}\n                onChange={\n                    (event) => {\n                        const copy = { ...contact }\n                        copy.contacted = event.target.checked\n                        setContacted(copy)\n                    }\n                } />\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAE3C,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;EAG/B,MAAM,CAACC,OAAO,EAAEC,MAAM,CAAC,GAAGH,QAAQ,CAAC;IAC/BI,SAAS,EAAE;EACf,CAAC,CAAC;EAEH,MAAMC,aAAa,GAAG,CAEtB,CAAC;EAIA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,eAC1B;MACI,IAAI,EAAC,UAAU;MACf,KAAK,EAAEH,OAAO,CAACE,SAAU;MACzB,QAAQ,EACHE,KAAK,IAAK;QACP,MAAMC,IAAI,GAAG;UAAE,GAAGL;QAAQ,CAAC;QAC3BK,IAAI,CAACH,SAAS,GAAGE,KAAK,CAACE,MAAM,CAACC,OAAO;QACrCC,YAAY,CAACH,IAAI,CAAC;MACtB;IACH;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAEX,CAAC;AAAA,GA5BYN,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}