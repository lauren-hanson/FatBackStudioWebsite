{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/calendar/Calendar.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n//import {CalendarDates} from \"./CalendarDates.js\"\nimport \"./Calendar.css\";\n\n/*\nexport const MyCalendar = () => {\n\n    const [date, setDate] = useState(new Date())\n\n    useEffect(() => { \n\n        fetch('')\n            .then(response => response.json())\n            .then((startDate) => { \n                setDate(startDate)\n            })\n    }, [])\n\n    return (\n        <>\n            \n            <div className=\"calendar-container\">\n                <Calendar onChange={setDate} value={date} defaultView='month' />\n                <p className=\"bold text-center\">Selected Date: {\"\"}{date.toDateString()}</p>\n            </div>\n            {date.length > 0 ? (\n                <p className='text-center'>\n                    <span className='bold'>Start:</span>{' '}\n                    {date[0].toDateString()}\n                    &nbsp;|&nbsp;\n                    <span className='bold'>End:</span> {date[1].toDateString()}\n                </p>) : (<p className='text-center'>\n                    <span className='bold'>Default selected date:</span>{' '}\n                    {date.toDateString()}\n                </p>)}\n        </>\n    )\n}\n*/\n\n/*\nfunction App() {\n\n  const [value, onChange] = useState([new Date()])\n\n  return (\n    <div>\n      <Calendar\n        onChange={onChange}\n        value={value}\n        defaultView='month'\n        nextLabel='month>>'\n        nextAriaLabel='Go to next month'\n        next2Label='year>>'\n        next2AriaLabel='Go to next year'\n        prevLabel='<<month'\n        prevAriaLabel='Go to prev month'\n        prev2Label='<<year'\n        prev2AriaLabel='Go to prev year'\n        calendarType=\"US\"\n        tileClassName=\"days\"\n        selectRange={true} />\n      {value.toString()}\n\n\n    </div>\n  )\n}\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyCalendar = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [startDate, setStartDate] = useState({});\n  const [endDate, setEndDate] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Our Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setDate,\n        value: date,\n        defaultView: \"month\",\n        nextLabel: \"month>>\",\n        nextAriaLabel: \"Go to next month\",\n        next2Label: \"year>>\",\n        next2AriaLabel: \"Go to next year\",\n        prevLabel: \"<<month\",\n        prevAriaLabel: \"Go to prev month\",\n        prev2Label: \"<<year\",\n        prev2AriaLabel: \"Go to prev year\",\n        calendarType: \"US\",\n        tileClassName: \"days\",\n        selectRange: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), date.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bold\",\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), ' ', date[0].toDateString(), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bold\",\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), \" \", date[1].toDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bold\",\n        children: \"Today's Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), ' ', date.toDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(MyCalendar, \"ZwMOCLzvgxKPpq+7lXegO07JTZ0=\");\n_c = MyCalendar;\nvar _c;\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["useEffect","useState","Calendar","MyCalendar","date","setDate","Date","startDate","setStartDate","endDate","setEndDate","length","toDateString"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/calendar/Calendar.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css';\n//import {CalendarDates} from \"./CalendarDates.js\"\nimport \"./Calendar.css\"\n\n/*\nexport const MyCalendar = () => {\n\n    const [date, setDate] = useState(new Date())\n\n    useEffect(() => { \n\n        fetch('')\n            .then(response => response.json())\n            .then((startDate) => { \n                setDate(startDate)\n            })\n    }, [])\n\n    return (\n        <>\n            \n            <div className=\"calendar-container\">\n                <Calendar onChange={setDate} value={date} defaultView='month' />\n                <p className=\"bold text-center\">Selected Date: {\"\"}{date.toDateString()}</p>\n            </div>\n            {date.length > 0 ? (\n                <p className='text-center'>\n                    <span className='bold'>Start:</span>{' '}\n                    {date[0].toDateString()}\n                    &nbsp;|&nbsp;\n                    <span className='bold'>End:</span> {date[1].toDateString()}\n                </p>) : (<p className='text-center'>\n                    <span className='bold'>Default selected date:</span>{' '}\n                    {date.toDateString()}\n                </p>)}\n        </>\n    )\n}\n*/\n\n\n/*\nfunction App() {\n\n  const [value, onChange] = useState([new Date()])\n\n  return (\n    <div>\n      <Calendar\n        onChange={onChange}\n        value={value}\n        defaultView='month'\n        nextLabel='month>>'\n        nextAriaLabel='Go to next month'\n        next2Label='year>>'\n        next2AriaLabel='Go to next year'\n        prevLabel='<<month'\n        prevAriaLabel='Go to prev month'\n        prev2Label='<<year'\n        prev2AriaLabel='Go to prev year'\n        calendarType=\"US\"\n        tileClassName=\"days\"\n        selectRange={true} />\n      {value.toString()}\n\n\n    </div>\n  )\n}\n*/\n\nexport const MyCalendar = () => {\n    const [date, setDate] = useState(new Date())\n    const [startDate, setStartDate] = useState({})\n    const [endDate, setEndDate] = useState({})\n\n    return (\n\n        <div className='calendar'>\n            <h1 className='text-center'>Our Schedule</h1>\n            <div className='calendar-container'>\n                <Calendar\n                    onChange={setDate}\n                    value={date}\n                    defaultView='month'\n                    nextLabel='month>>'\n                    nextAriaLabel='Go to next month'\n                    next2Label='year>>'\n                    next2AriaLabel='Go to next year'\n                    prevLabel='<<month'\n                    prevAriaLabel='Go to prev month'\n                    prev2Label='<<year'\n                    prev2AriaLabel='Go to prev year'\n                    calendarType=\"US\"\n                    \n                    tileClassName=\"days\"\n                    selectRange={true}\n\n                />\n\n            </div>\n            {date.length > 0 ? (\n                <p className='text-center'>\n                    <span className='bold'>Start Date:</span>{' '}\n                    {date[0].toDateString()}\n                    &nbsp;|&nbsp;\n                    <span className='bold'>End Date:</span> {date[1].toDateString()}\n                </p>\n            ) : (\n                <p className='text-center'>\n                    <span className='bold'>Today's Date:</span>{' '}\n                    {date.toDateString()}\n                </p>\n            )}\n        </div>\n\n    );\n}\n\n\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AACzC;AACA,OAAO,gBAAgB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AA8BA,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAIK,IAAI,EAAE,CAAC;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1C,oBAEI;IAAK,SAAS,EAAC,UAAU;IAAA,wBACrB;MAAI,SAAS,EAAC,aAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAC7C;MAAK,SAAS,EAAC,oBAAoB;MAAA,uBAC/B,QAAC,QAAQ;QACL,QAAQ,EAAEI,OAAQ;QAClB,KAAK,EAAED,IAAK;QACZ,WAAW,EAAC,OAAO;QACnB,SAAS,EAAC,SAAS;QACnB,aAAa,EAAC,kBAAkB;QAChC,UAAU,EAAC,QAAQ;QACnB,cAAc,EAAC,iBAAiB;QAChC,SAAS,EAAC,SAAS;QACnB,aAAa,EAAC,kBAAkB;QAChC,UAAU,EAAC,QAAQ;QACnB,cAAc,EAAC,iBAAiB;QAChC,YAAY,EAAC,IAAI;QAEjB,aAAa,EAAC,MAAM;QACpB,WAAW,EAAE;MAAK;QAAA;QAAA;QAAA;MAAA;IAEpB;MAAA;MAAA;MAAA;IAAA,QAEA,EACLA,IAAI,CAACO,MAAM,GAAG,CAAC,gBACZ;MAAG,SAAS,EAAC,aAAa;MAAA,wBACtB;QAAM,SAAS,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,EAAC,GAAG,EAC5CP,IAAI,CAAC,CAAC,CAAC,CAACQ,YAAY,EAAE,4BAEvB;QAAM,SAAS,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,OAAER,IAAI,CAAC,CAAC,CAAC,CAACQ,YAAY,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/D,gBAEJ;MAAG,SAAS,EAAC,aAAa;MAAA,wBACtB;QAAM,SAAS,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,EAAC,GAAG,EAC9CR,IAAI,CAACQ,YAAY,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAE3B;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAGd,CAAC;AAAA,GA9CYT,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}