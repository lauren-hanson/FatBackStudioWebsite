{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AddNotes.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport \"./Requests.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AddNotes = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const [notes, setNotes] = useState({\n    notes: \"\"\n  });\n  useEffect(() => {\n    fetch(`http://localhost:8088/requests/${id}`).then(response => response.json()).then(staffNotes => {\n      setNotes(staffNotes);\n    });\n  }, []);\n  const handleSaveNotes = event => {\n    event.preventDefault();\n    const newArtistToSendToAPI = {\n      artistName: newArtists.artistName,\n      imageURL: newArtists.imageURL,\n      startDate: newArtists.startDate,\n      endDate: newArtists.endDate,\n      notes: newArtists.notes\n    };\n    return fetch(`http://localhost:8088/artists`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newArtistToSendToAPI)\n    }).then(response => response.json()).then(() => {\n      navigate(\"/artists\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      htmlFor: \"notes\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"staffNotes\",\n          placeholder: \"Add notes...\",\n          value: notes.notes,\n          onChange: event => {\n            const copy = {\n              ...notes\n            };\n            copy.notes = event.target.value;\n            setNotes(copy);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(AddNotes, \"qRnvmsgvRZJDuZaiceOE8Zoeesk=\");\n_c = AddNotes;\n{/* <fieldset>\n                        <input onChange={(evt) => {\n                            const copy = { ...customer }\n                            copy.isStaff = evt.target.checked\n                            setCustomer(copy)\n                        }}\n                            type=\"checkbox\" id=\"isStaff\" />\n                        <label htmlFor=\"email\"> I am an employee </label>\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\" id=\"registerButton\"> Register </button>\n                    </fieldset> */}\nvar _c;\n$RefreshReg$(_c, \"AddNotes\");","map":{"version":3,"names":["useEffect","useState","AddNotes","id","notes","setNotes","fetch","then","response","json","staffNotes","handleSaveNotes","event","preventDefault","newArtistToSendToAPI","artistName","newArtists","imageURL","startDate","endDate","method","headers","body","JSON","stringify","navigate","copy","target","value"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AddNotes.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport \"./Requests.css\"\n\nexport const AddNotes = ({ id }) => {\n\n    const [notes, setNotes] = useState({\n        notes: \"\" \n    })\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests/${id}`)\n                .then(response => response.json())\n                .then((staffNotes) => {\n                    setNotes(staffNotes)\n                })\n        }, []\n    )\n\n\n    const handleSaveNotes = (event) => {\n        event.preventDefault()\n\n        const newArtistToSendToAPI = {\n            artistName: newArtists.artistName,\n            imageURL: newArtists.imageURL,\n            startDate: newArtists.startDate,\n            endDate: newArtists.endDate,\n            notes: newArtists.notes\n        }\n\n        return fetch(`http://localhost:8088/artists`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newArtistToSendToAPI)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n                navigate(\"/artists\")\n            })\n\n    }\n\n\n    return (\n        <>\n            <div htmlFor=\"notes\">\n                <form>\n                    <textarea\n                        id=\"staffNotes\"\n                        placeholder=\"Add notes...\"\n                        value={notes.notes}\n                        onChange={(event) => {\n                            const copy = { ...notes }\n                            copy.notes = event.target.value\n                            setNotes(copy)\n                        }}>\n                    </textarea>\n                </form>\n            </div>\n\n\n        </>\n    )\n}\n\n{/* <fieldset>\n                        <input onChange={(evt) => {\n                            const copy = { ...customer }\n                            copy.isStaff = evt.target.checked\n                            setCustomer(copy)\n                        }}\n                            type=\"checkbox\" id=\"isStaff\" />\n                        <label htmlFor=\"email\"> I am an employee </label>\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\" id=\"registerButton\"> Register </button>\n                    </fieldset> */}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,gBAAgB;AAAA;AAAA;AAEvB,OAAO,MAAMC,QAAQ,GAAG,QAAY;EAAA;EAAA,IAAX;IAAEC;EAAG,CAAC;EAE3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC;IAC/BG,KAAK,EAAE;EACX,CAAC,CAAC;EAEFJ,SAAS,CACL,MAAM;IACFM,KAAK,CAAE,kCAAiCH,EAAG,EAAC,CAAC,CACxCI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEG,UAAU,IAAK;MAClBL,QAAQ,CAACK,UAAU,CAAC;IACxB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CACR;EAGD,MAAMC,eAAe,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,oBAAoB,GAAG;MACzBC,UAAU,EAAEC,UAAU,CAACD,UAAU;MACjCE,QAAQ,EAAED,UAAU,CAACC,QAAQ;MAC7BC,SAAS,EAAEF,UAAU,CAACE,SAAS;MAC/BC,OAAO,EAAEH,UAAU,CAACG,OAAO;MAC3Bf,KAAK,EAAEY,UAAU,CAACZ;IACtB,CAAC;IAED,OAAOE,KAAK,CAAE,+BAA8B,EAAE;MAC1Cc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,oBAAoB;IAC7C,CAAC,CAAC,CAEGP,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAC,MAAM;MACRkB,QAAQ,CAAC,UAAU,CAAC;IACxB,CAAC,CAAC;EAEV,CAAC;EAGD,oBACI;IAAA,uBACI;MAAK,OAAO,EAAC,OAAO;MAAA,uBAChB;QAAA,uBACI;UACI,EAAE,EAAC,YAAY;UACf,WAAW,EAAC,cAAc;UAC1B,KAAK,EAAErB,KAAK,CAACA,KAAM;UACnB,QAAQ,EAAGQ,KAAK,IAAK;YACjB,MAAMc,IAAI,GAAG;cAAE,GAAGtB;YAAM,CAAC;YACzBsB,IAAI,CAACtB,KAAK,GAAGQ,KAAK,CAACe,MAAM,CAACC,KAAK;YAC/BvB,QAAQ,CAACqB,IAAI,CAAC;UAClB;QAAE;UAAA;UAAA;UAAA;QAAA;MACK;QAAA;QAAA;QAAA;MAAA;IACR;MAAA;MAAA;MAAA;IAAA;EACL,iBAGP;AAEX,CAAC;AAAA,GAhEYxB,QAAQ;AAAA,KAARA,QAAQ;AAkErB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAXC;AAWkC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}