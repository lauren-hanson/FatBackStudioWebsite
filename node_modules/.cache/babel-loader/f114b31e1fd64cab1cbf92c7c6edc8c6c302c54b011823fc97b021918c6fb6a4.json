{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\n//import { ModalWindow } from \"./ModalTest\"\n//import {PopUpTest} from \"./PopUpTest\"\n\nexport const AdminGreeting = _ref => {\n  _s();\n  let {\n    users\n  } = _ref;\n  const [requests, setRequests] = useState([]);\n  const [pendingRequests, setPendingRequests] = useState([]);\n  const [refresh, setRefresh] = useState(true);\n  const localFatBackUser = localStorage.getItem(\"fatback_user\");\n  const fatbackUserObject = JSON.parse(localFatBackUser);\n  const windowAlert = () => {\n    if (requests.isPending = true) {\n      return alert(`Welcome ${users.fullName}. You have ${pendingRequests.length} pending requests.`);\n    } else {\n      return alert(\"Welcome. You have no pending requests\");\n    }\n\n    // {\n    //     requests.isPending=true ?\n    //         alert(\n    //             `Welcome ${users.fullName}. You have ${pendingRequests.length} pending requests.`)\n    //         : alert(\"Welcome. You have no pending requests\")\n    // }\n  };\n\n  let alert = windowAlert();\n  const getAllPendingRequests = () => {\n    fetch(`http://localhost:8088/requests?isPending=true`).then(response => response.json()).then(requestInfo => {\n      setPendingRequests(requestInfo);\n    });\n  };\n  useEffect(() => {\n    fetch('http://localhost:8088/requests').then(response => response.json()).then(pendingRequest => {\n      setRequests(pendingRequest);\n    })\n\n    // .then(() => {\n    //     {\n    //         fatbackUserObject.staff ?\n    //         <ModalWindow /> : \"\"\n    //     }\n\n    //     <PopUpTest /> \n    // }\n    // )\n    .then(() => {\n      alert.addEventListener(\"DOMContentLoaded\");\n    }).then(() => {\n      getAllPendingRequests();\n    }).then(() => {\n      setRefresh(!refresh);\n    });\n  }, []);\n};\n_s(AdminGreeting, \"WYlLaj+K309nMWUvO3uaQPFOL4I=\");\n_c = AdminGreeting;\nvar _c;\n$RefreshReg$(_c, \"AdminGreeting\");","map":{"version":3,"names":["useEffect","useState","AdminGreeting","users","requests","setRequests","pendingRequests","setPendingRequests","refresh","setRefresh","localFatBackUser","localStorage","getItem","fatbackUserObject","JSON","parse","windowAlert","isPending","alert","fullName","length","getAllPendingRequests","fetch","then","response","json","requestInfo","pendingRequest","addEventListener"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/home/AdminGreeting.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\n//import { ModalWindow } from \"./ModalTest\"\n//import {PopUpTest} from \"./PopUpTest\"\n\nexport const AdminGreeting = ({ users }) => {\n\n    const [requests, setRequests] = useState([])\n    const [pendingRequests, setPendingRequests] = useState([])\n    const [refresh, setRefresh] = useState(true)\n\n    const localFatBackUser = localStorage.getItem(\"fatback_user\")\n    const fatbackUserObject = JSON.parse(localFatBackUser)\n\n    const windowAlert = () => {\n\n        if (requests.isPending = true) {\n            return alert(\n                `Welcome ${users.fullName}. You have ${pendingRequests.length} pending requests.`)\n        } else {\n            return alert(\"Welcome. You have no pending requests\")\n        }\n\n        // {\n        //     requests.isPending=true ?\n        //         alert(\n        //             `Welcome ${users.fullName}. You have ${pendingRequests.length} pending requests.`)\n        //         : alert(\"Welcome. You have no pending requests\")\n        // }\n\n\n\n    }\n\n    let alert = windowAlert()\n\n    const getAllPendingRequests = () => {\n        fetch(`http://localhost:8088/requests?isPending=true`)\n            .then(response => response.json())\n            .then((requestInfo) => {\n                setPendingRequests(requestInfo)\n            })\n    }\n\n\n    useEffect(() => {\n\n        fetch('http://localhost:8088/requests')\n\n            .then(response => response.json())\n\n\n            .then((pendingRequest => {\n                setRequests(pendingRequest)\n            }))\n\n            // .then(() => {\n            //     {\n            //         fatbackUserObject.staff ?\n            //         <ModalWindow /> : \"\"\n            //     }\n\n            //     <PopUpTest /> \n            // }\n            // )\n\n            .then(() => {\n                alert.addEventListener(\"DOMContentLoaded\")\n            })\n            .then(() => {\n                getAllPendingRequests()\n            })\n\n\n            .then(() => {\n                setRefresh(!refresh)\n            })\n\n\n    },\n        [])\n\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAe;EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC;EAEnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMS,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAC7D,MAAMC,iBAAiB,GAAGC,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC;EAEtD,MAAMM,WAAW,GAAG,MAAM;IAEtB,IAAIZ,QAAQ,CAACa,SAAS,GAAG,IAAI,EAAE;MAC3B,OAAOC,KAAK,CACP,WAAUf,KAAK,CAACgB,QAAS,cAAab,eAAe,CAACc,MAAO,oBAAmB,CAAC;IAC1F,CAAC,MAAM;MACH,OAAOF,KAAK,CAAC,uCAAuC,CAAC;IACzD;;IAEA;IACA;IACA;IACA;IACA;IACA;EAIJ,CAAC;;EAED,IAAIA,KAAK,GAAGF,WAAW,EAAE;EAEzB,MAAMK,qBAAqB,GAAG,MAAM;IAChCC,KAAK,CAAE,+CAA8C,CAAC,CACjDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEG,WAAW,IAAK;MACnBnB,kBAAkB,CAACmB,WAAW,CAAC;IACnC,CAAC,CAAC;EACV,CAAC;EAGD1B,SAAS,CAAC,MAAM;IAEZsB,KAAK,CAAC,gCAAgC,CAAC,CAElCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAGjCF,IAAI,CAAEI,cAAc,IAAI;MACrBtB,WAAW,CAACsB,cAAc,CAAC;IAC/B,CAAC;;IAED;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IAAA,CAECJ,IAAI,CAAC,MAAM;MACRL,KAAK,CAACU,gBAAgB,CAAC,kBAAkB,CAAC;IAC9C,CAAC,CAAC,CACDL,IAAI,CAAC,MAAM;MACRF,qBAAqB,EAAE;IAC3B,CAAC,CAAC,CAGDE,IAAI,CAAC,MAAM;MACRd,UAAU,CAAC,CAACD,OAAO,CAAC;IACxB,CAAC,CAAC;EAGV,CAAC,EACG,EAAE,CAAC;AAIX,CAAC;AAAA,GA/EYN,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}