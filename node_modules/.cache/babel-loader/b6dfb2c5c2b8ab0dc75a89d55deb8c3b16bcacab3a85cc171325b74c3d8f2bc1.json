{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/ContactNotice.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport \"./Requests.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactNotice = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const [refresh, setRefresh] = useState(true);\n  useEffect(() => {\n    fetch(`http://localhost:8088/requests?_expand=genre&_sort=startDate`).then(response => response.json()).then(requestInfo => {\n      setRefresh(requestInfo);\n    });\n  }, [, refresh]);\n  const [contact, update] = useState({\n    contacted: false\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email sent?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: contact.contacted,\n      onChange: event => {\n        const copy = {\n          ...contact\n        };\n        copy.contacted = event.target.checked;\n        update(copy);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ContactNotice, \"WkHi6pwbsqpVkI8NhRxFc5F7AkE=\");\n_c = ContactNotice;\n{/* <fieldset>\n                        <input onChange={(evt) => {\n                            const copy = { ...customer }\n                            copy.isStaff = evt.target.checked\n                            setCustomer(copy)\n                        }}\n                            type=\"checkbox\" id=\"isStaff\" />\n                        <label htmlFor=\"email\"> I am an employee </label>\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\" id=\"registerButton\"> Register </button>\n                    </fieldset> */}\nvar _c;\n$RefreshReg$(_c, \"ContactNotice\");","map":{"version":3,"names":["useEffect","useState","ContactNotice","id","refresh","setRefresh","fetch","then","response","json","requestInfo","contact","update","contacted","event","copy","target","checked"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/ContactNotice.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport \"./Requests.css\"\n\nexport const ContactNotice = ({ id }) => {\n\n    const [refresh, setRefresh] = useState(true)\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests?_expand=genre&_sort=startDate`)\n                .then(response => response.json())\n                .then((requestInfo) => {\n                    setRefresh(requestInfo)\n                })\n        }, [, refresh]\n    )\n\n    const [contact, update] = useState({\n        contacted: false\n    })\n\n\n\n\n    return (\n        <>\n            <label>Email sent?</label>\n            <input\n                type=\"checkbox\"\n                value={contact.contacted}\n                onChange={\n                    (event) => {\n                        const copy = { ...contact }\n                        copy.contacted = event.target.checked\n                        update(copy)\n                    }\n                } />\n        </>\n    )\n}\n\n{/* <fieldset>\n                        <input onChange={(evt) => {\n                            const copy = { ...customer }\n                            copy.isStaff = evt.target.checked\n                            setCustomer(copy)\n                        }}\n                            type=\"checkbox\" id=\"isStaff\" />\n                        <label htmlFor=\"email\"> I am an employee </label>\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\" id=\"registerButton\"> Register </button>\n                    </fieldset> */}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,gBAAgB;AAAA;AAAA;AAEvB,OAAO,MAAMC,aAAa,GAAG,QAAY;EAAA;EAAA,IAAX;IAAEC;EAAG,CAAC;EAEhC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CACL,MAAM;IACFM,KAAK,CAAE,8DAA6D,CAAC,CAChEC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEG,WAAW,IAAK;MACnBL,UAAU,CAACK,WAAW,CAAC;IAC3B,CAAC,CAAC;EACV,CAAC,EAAE,GAAGN,OAAO,CAAC,CACjB;EAED,MAAM,CAACO,OAAO,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC;IAC/BY,SAAS,EAAE;EACf,CAAC,CAAC;EAKF,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,eAC1B;MACI,IAAI,EAAC,UAAU;MACf,KAAK,EAAEF,OAAO,CAACE,SAAU;MACzB,QAAQ,EACHC,KAAK,IAAK;QACP,MAAMC,IAAI,GAAG;UAAE,GAAGJ;QAAQ,CAAC;QAC3BI,IAAI,CAACF,SAAS,GAAGC,KAAK,CAACE,MAAM,CAACC,OAAO;QACrCL,MAAM,CAACG,IAAI,CAAC;MAChB;IACH;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAEX,CAAC;AAAA,GApCYb,aAAa;AAAA,KAAbA,aAAa;AAsC1B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAXC;AAWkC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}