{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/ContactNotice.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport \"./Requests.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactNotice = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const [contact, update] = useState({\n    contacted: false\n  });\n  useEffect(() => {\n    fetch(`http://localhost:8088/requests?isAccepted=true`).then(response => response.json()).then(requestInfo => {\n      update(requestInfo);\n    });\n  }, []);\n  const handleSaveContactedCheck = event => {\n    event.preventDefault();\n    const checkToSendToAPI = {\n      contacted: true\n    };\n    return fetch(`http://localhost:8088/requests?isAccepted=true`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(checkToSendToAPI)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: evt => {\n        const copy = {\n          ...contact\n        };\n        copy.contacted = evt.target.checked;\n        update(copy);\n      },\n      type: \"checkbox\",\n      id: \"contacted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \" Email sent? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ContactNotice, \"h9kvMCuGC33J9wLQTEXAy7/OZvs=\");\n_c = ContactNotice;\n{/* <fieldset>\n                        <input onChange={(evt) => {\n                            const copy = { ...customer }\n                            copy.isStaff = evt.target.checked\n                            setCustomer(copy)\n                        }}\n                            type=\"checkbox\" id=\"isStaff\" />\n                        <label htmlFor=\"email\"> I am an employee </label>\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\" id=\"registerButton\"> Register </button>\n                    </fieldset> */}\nvar _c;\n$RefreshReg$(_c, \"ContactNotice\");","map":{"version":3,"names":["useEffect","useState","ContactNotice","id","contact","update","contacted","fetch","then","response","json","requestInfo","handleSaveContactedCheck","event","preventDefault","checkToSendToAPI","method","headers","body","JSON","stringify","evt","copy","target","checked"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/ContactNotice.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport \"./Requests.css\"\n\nexport const ContactNotice = ({ id }) => {\n\n    const [contact, update] = useState({\n        contacted: false\n    })\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests?isAccepted=true`)\n                .then(response => response.json())\n                .then((requestInfo) => {\n                    update(requestInfo)\n                })\n        }, []\n    )\n\n    const handleSaveContactedCheck = (event) => {\n        event.preventDefault()\n\n        const checkToSendToAPI = {\n            contacted: true\n        }\n\n        return fetch(`http://localhost:8088/requests?isAccepted=true`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(checkToSendToAPI)\n        })\n    }\n\n\n\n    return (\n        <>\n            <input onChange={(evt) => {\n                const copy = { ...contact }\n                copy.contacted = evt.target.checked\n                update(copy)\n            }}\n                type=\"checkbox\" id=\"contacted\" />\n            <label htmlFor=\"email\"> Email sent? </label>\n        </>\n    )\n}\n\n{/* <fieldset>\n                        <input onChange={(evt) => {\n                            const copy = { ...customer }\n                            copy.isStaff = evt.target.checked\n                            setCustomer(copy)\n                        }}\n                            type=\"checkbox\" id=\"isStaff\" />\n                        <label htmlFor=\"email\"> I am an employee </label>\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\" id=\"registerButton\"> Register </button>\n                    </fieldset> */}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,gBAAgB;AAAA;AAAA;AAEvB,OAAO,MAAMC,aAAa,GAAG,QAAY;EAAA;EAAA,IAAX;IAAEC;EAAG,CAAC;EAEhC,MAAM,CAACC,OAAO,EAAEC,MAAM,CAAC,GAAGJ,QAAQ,CAAC;IAC/BK,SAAS,EAAE;EACf,CAAC,CAAC;EAEFN,SAAS,CACL,MAAM;IACFO,KAAK,CAAE,gDAA+C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEG,WAAW,IAAK;MACnBN,MAAM,CAACM,WAAW,CAAC;IACvB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CACR;EAED,MAAMC,wBAAwB,GAAIC,KAAK,IAAK;IACxCA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,gBAAgB,GAAG;MACrBT,SAAS,EAAE;IACf,CAAC;IAED,OAAOC,KAAK,CAAE,gDAA+C,EAAE;MAC3DS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,gBAAgB;IACzC,CAAC,CAAC;EACN,CAAC;EAID,oBACI;IAAA,wBACI;MAAO,QAAQ,EAAGM,GAAG,IAAK;QACtB,MAAMC,IAAI,GAAG;UAAE,GAAGlB;QAAQ,CAAC;QAC3BkB,IAAI,CAAChB,SAAS,GAAGe,GAAG,CAACE,MAAM,CAACC,OAAO;QACnCnB,MAAM,CAACiB,IAAI,CAAC;MAChB,CAAE;MACE,IAAI,EAAC,UAAU;MAAC,EAAE,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACrC;MAAO,OAAO,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB;EAAA,gBAC7C;AAEX,CAAC;AAAA,GA7CYpB,aAAa;AAAA,KAAbA,aAAa;AA+C1B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAXC;AAWkC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}