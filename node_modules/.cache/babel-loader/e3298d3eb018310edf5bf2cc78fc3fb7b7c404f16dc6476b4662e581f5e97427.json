{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AddNotesAccept.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Requests.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddNotesAccept = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  //const {requestId} = useParams()\n  const [notes, setNotes] = useState({});\n\n  //const [modal, setModal] = useState(false)\n\n  // const toggleModal = () => {\n  //     setModal(!modal)\n  //     // setTimeout(timeout, 1000)\n  // }\n\n  useEffect(() => {\n    fetch(`http://localhost:8088/requests/${id}`).then(response => response.json()).then(staffNotes => {\n      setNotes(staffNotes);\n    });\n  }, []);\n  const navigate = useNavigate();\n  const handleSaveNotes = event => {\n    event.preventDefault();\n    const newStaffNote = {\n      notes: notes.notes\n    };\n    return fetch(`http://localhost:8088/requests/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newStaffNote)\n    }).then(response => response.json()).then(() => {\n      window.alert(\"Your notes have been saved.\");\n\n      // {\n      //     modal && (\n      //         <div className=\"modal_window\">\n      //             <div onClick={toggleModal}></div>\n\n      //             <p className=\"modal_content\">\n      //              Your notes have been saved. \n      //             </p>\n      //             <button className=\"modal_close\" onClick={toggleModal}>\n      //                 CLOSE\n      //             </button>\n      //         </div>\n      //     )\n      // }\n    }).then(() => {\n      navigate(\"/schedule\");\n    });\n  };\n\n  // const handleEditNotes = (event) => {\n  //     event.preventDefault()\n\n  //     const newStaffNote = {\n  //         notes: notes.notes\n  //     }\n\n  //     return fetch(`http://localhost:8088/requests/${id}`, {\n  //         method: \"PATCH\",\n  //         headers: {\n  //             \"Content-Type\": \"application/json\"\n  //         },\n  //         body: JSON.stringify(newStaffNote)\n  //     })\n\n  //         .then((response) => response.json())\n\n  //         .then(() => {\n  //             window.alert(\"Your edits have been saved.\")\n  //         })\n\n  //         .then(() => {\n  //             navigate(\"/requests\")\n  //         })\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"textNotes\",\n          placeholder: \"Add notes...\",\n          value: notes.notes,\n          onChange: event => {\n            const copy = {\n              ...notes\n            };\n            copy.notes = event.target.value;\n            setNotes(copy);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"saveNotesButton\",\n        onClick: event => {\n          handleSaveNotes(event);\n        },\n        children: \"Save Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(AddNotesAccept, \"PqhPnu8znNz+RCPrq6Tz0RWT9yY=\", false, function () {\n  return [useNavigate];\n});\n_c = AddNotesAccept;\nvar _c;\n$RefreshReg$(_c, \"AddNotesAccept\");","map":{"version":3,"names":["useEffect","useState","useNavigate","AddNotesAccept","id","notes","setNotes","fetch","then","response","json","staffNotes","navigate","handleSaveNotes","event","preventDefault","newStaffNote","method","headers","body","JSON","stringify","window","alert","copy","target","value"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/AddNotesAccept.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Requests.css\"\n\nexport const AddNotesAccept = ({ id }) => {\n\n    //const {requestId} = useParams()\n    const [notes, setNotes] = useState({\n    })\n    \n    //const [modal, setModal] = useState(false)\n\n\n    // const toggleModal = () => {\n    //     setModal(!modal)\n    //     // setTimeout(timeout, 1000)\n    // }\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests/${id}`)\n                .then(response => response.json())\n                .then((staffNotes) => {\n                    setNotes(staffNotes)\n                })\n        }, []\n    )\n\n    const navigate = useNavigate()\n\n    const handleSaveNotes = (event) => {\n        event.preventDefault()\n\n        const newStaffNote = {\n            notes: notes.notes\n        }\n\n        return fetch(`http://localhost:8088/requests/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newStaffNote)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n\n                window.alert(\"Your notes have been saved.\")\n\n                // {\n                //     modal && (\n                //         <div className=\"modal_window\">\n                //             <div onClick={toggleModal}></div>\n\n                //             <p className=\"modal_content\">\n                //              Your notes have been saved. \n                //             </p>\n                //             <button className=\"modal_close\" onClick={toggleModal}>\n                //                 CLOSE\n                //             </button>\n                //         </div>\n                //     )\n                // }\n            })\n            .then(() => {\n                navigate(\"/schedule\")\n            })\n\n    }\n\n    // const handleEditNotes = (event) => {\n    //     event.preventDefault()\n\n    //     const newStaffNote = {\n    //         notes: notes.notes\n    //     }\n\n    //     return fetch(`http://localhost:8088/requests/${id}`, {\n    //         method: \"PATCH\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\"\n    //         },\n    //         body: JSON.stringify(newStaffNote)\n    //     })\n\n    //         .then((response) => response.json())\n\n    //         .then(() => {\n    //             window.alert(\"Your edits have been saved.\")\n    //         })\n\n    //         .then(() => {\n    //             navigate(\"/requests\")\n    //         })\n\n    // }\n\n\n    return (\n\n        <div>\n            <form>\n                <div>\n                    <textarea\n                        id=\"textNotes\"\n                        placeholder=\"Add notes...\"\n                        value={notes.notes}\n                        onChange={(event) => {\n                            const copy = { ...notes }\n                            copy.notes = event.target.value\n                            setNotes(copy)\n                        }}>\n                    </textarea>\n                </div>\n                {/* {notes?.notes?.length ?\n                    <button\n                        className=\"saveNotesButton\"\n                        onClick={(event) => {\n                            handleEditNotes(event)                   \n                        }} >\n                        Edit Note\n                    </button> :  */}\n                <button\n                    className=\"saveNotesButton\"\n                    onClick={(event) => {\n                        handleSaveNotes(event)\n                    }}>\n                    Save Note\n                </button>\n                {/* } */}\n            </form>\n        </div>\n\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,gBAAgB;AAAA;AAEvB,OAAO,MAAMC,cAAc,GAAG,QAAY;EAAA;EAAA,IAAX;IAAEC;EAAG,CAAC;EAEjC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CACnC,CAAC,CAAC;;EAEF;;EAGA;EACA;EACA;EACA;;EAEAD,SAAS,CACL,MAAM;IACFO,KAAK,CAAE,kCAAiCH,EAAG,EAAC,CAAC,CACxCI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEG,UAAU,IAAK;MAClBL,QAAQ,CAACK,UAAU,CAAC;IACxB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CACR;EAED,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAE9B,MAAMW,eAAe,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,YAAY,GAAG;MACjBX,KAAK,EAAEA,KAAK,CAACA;IACjB,CAAC;IAED,OAAOE,KAAK,CAAE,kCAAiCH,EAAG,EAAC,EAAE;MACjDa,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,YAAY;IACrC,CAAC,CAAC,CAEGR,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAC,MAAM;MAERc,MAAM,CAACC,KAAK,CAAC,6BAA6B,CAAC;;MAE3C;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC,CACDf,IAAI,CAAC,MAAM;MACRI,QAAQ,CAAC,WAAW,CAAC;IACzB,CAAC,CAAC;EAEV,CAAC;;EAED;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAGA,oBAEI;IAAA,uBACI;MAAA,wBACI;QAAA,uBACI;UACI,EAAE,EAAC,WAAW;UACd,WAAW,EAAC,cAAc;UAC1B,KAAK,EAAEP,KAAK,CAACA,KAAM;UACnB,QAAQ,EAAGS,KAAK,IAAK;YACjB,MAAMU,IAAI,GAAG;cAAE,GAAGnB;YAAM,CAAC;YACzBmB,IAAI,CAACnB,KAAK,GAAGS,KAAK,CAACW,MAAM,CAACC,KAAK;YAC/BpB,QAAQ,CAACkB,IAAI,CAAC;UAClB;QAAE;UAAA;UAAA;UAAA;QAAA;MACK;QAAA;QAAA;QAAA;MAAA,QACT,eASN;QACI,SAAS,EAAC,iBAAiB;QAC3B,OAAO,EAAGV,KAAK,IAAK;UAChBD,eAAe,CAACC,KAAK,CAAC;QAC1B,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEG;IAAA;MAAA;MAAA;MAAA;IAAA;EAEN;IAAA;IAAA;IAAA;EAAA,QACL;AAGd,CAAC;AAAA,GAnIYX,cAAc;EAAA,QAwBND,WAAW;AAAA;AAAA,KAxBnBC,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}