{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/ContactNotice.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactNotice = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const [refresh, setRefresh] = useState(true);\n  useEffect(() => {\n    fetch(`http://localhost:8088/requests?_expand=genre&_sort=startDate`).then(response => response.json()).then(requestInfo => {\n      setRequest(requestInfo);\n    });\n  }, [, refresh]);\n  const [contact, update] = useState({\n    contacted: false\n  });\n\n  // TODO: Create the object to be saved to the API\n\n  const updateContacted = event => {\n    event.preventDefault();\n    const updatedInfo = {\n      isAccepted: true,\n      isPending: false\n    };\n    fetch(`http://localhost:8088/requests/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedInfo)\n    }).then(response => response.json()).then(setRefresh(!refresh));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email sent?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: contact.contacted,\n      onChange: event => {\n        const copy = {\n          ...contact\n        };\n        copy.contacted = event.target.checked;\n        update(copy);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ContactNotice, \"WkHi6pwbsqpVkI8NhRxFc5F7AkE=\");\n_c = ContactNotice;\nvar _c;\n$RefreshReg$(_c, \"ContactNotice\");","map":{"version":3,"names":["useEffect","useState","ContactNotice","id","refresh","setRefresh","fetch","then","response","json","requestInfo","setRequest","contact","update","contacted","updateContacted","event","preventDefault","updatedInfo","isAccepted","isPending","method","headers","body","JSON","stringify","copy","target","checked"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/booking/ContactNotice.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nexport const ContactNotice = ({ id }) => {\n\n    const [refresh, setRefresh] = useState(true)\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/requests?_expand=genre&_sort=startDate`)\n                .then(response => response.json())\n                .then((requestInfo) => {\n                    setRequest(requestInfo)\n                })\n        }, [, refresh]\n    )\n\n    const [contact, update] = useState({\n        contacted: false\n    })\n\n\n\n\n    // TODO: Create the object to be saved to the API\n\n    const updateContacted = (event) => {\n        event.preventDefault()\n\n        const updatedInfo = {\n            isAccepted: true,\n            isPending: false,\n        }\n\n        fetch(`http://localhost:8088/requests/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(updatedInfo)\n        })\n            .then(response => response.json())\n\n            .then(\n                setRefresh(!refresh)\n            )\n    }\n\n\n    return (\n        <>\n            <label>Email sent?</label>\n            <input\n                type=\"checkbox\"\n                value={contact.contacted}\n                onChange={\n                    (event) => {\n                        const copy = { ...contact }\n                        copy.contacted = event.target.checked\n                        update(copy)\n                    }\n                } />\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAE3C,OAAO,MAAMC,aAAa,GAAG,QAAY;EAAA;EAAA,IAAX;IAAEC;EAAG,CAAC;EAEhC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CACL,MAAM;IACFM,KAAK,CAAE,8DAA6D,CAAC,CAChEC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEG,WAAW,IAAK;MACnBC,UAAU,CAACD,WAAW,CAAC;IAC3B,CAAC,CAAC;EACV,CAAC,EAAE,GAAGN,OAAO,CAAC,CACjB;EAED,MAAM,CAACQ,OAAO,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ba,SAAS,EAAE;EACf,CAAC,CAAC;;EAKF;;EAEA,MAAMC,eAAe,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,WAAW,GAAG;MAChBC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE;IACf,CAAC;IAEDd,KAAK,CAAE,kCAAiCH,EAAG,EAAC,EAAE;MAC1CkB,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IACpC,CAAC,CAAC,CACGX,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAEjCF,IAAI,CACDF,UAAU,CAAC,CAACD,OAAO,CAAC,CACvB;EACT,CAAC;EAGD,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,eAC1B;MACI,IAAI,EAAC,UAAU;MACf,KAAK,EAAEQ,OAAO,CAACE,SAAU;MACzB,QAAQ,EACHE,KAAK,IAAK;QACP,MAAMU,IAAI,GAAG;UAAE,GAAGd;QAAQ,CAAC;QAC3Bc,IAAI,CAACZ,SAAS,GAAGE,KAAK,CAACW,MAAM,CAACC,OAAO;QACrCf,MAAM,CAACa,IAAI,CAAC;MAChB;IACH;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAEX,CAAC;AAAA,GA7DYxB,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}