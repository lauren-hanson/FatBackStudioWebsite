{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/calendar/Calendar.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n//import {CalendarDates} from \"./CalendarDates.js\"\nimport \"./Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StudioCalendar = () => {\n  _s();\n  //const [date, onChange] = useState(new Date())\n  // const [startDate, setStartDate] = useState({})\n  // const [endDate, setEndDate] = useState({})\n  const [acceptedRequests, setAccepted] = useState([new Date()]);\n  useEffect(() => {\n    fetch(`http://localhost:8088/requests?isAccepted=true`).then(response => response.json()).then(acceptedDates => {\n      setAccepted(acceptedDates);\n    });\n  }, []);\n\n  // const handleSaveDateButton = () => {\n\n  //     const setRecordingDate = {\n  //         start: startDate.date[0].toDateString()\n\n  //     }\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Our Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: setAccepted,\n          value: acceptedRequests,\n          defaultView: \"month\",\n          nextLabel: \"month>>\",\n          nextAriaLabel: \"Go to next month\",\n          next2Label: \"year>>\",\n          next2AriaLabel: \"Go to next year\",\n          prevLabel: \"<<month\",\n          prevAriaLabel: \"Go to prev month\",\n          prev2Label: \"<<year\",\n          prev2AriaLabel: \"Go to prev year\",\n          calendarType: \"US\",\n          tileClassName: \"days\",\n          selectRange: true\n\n          // onClickDay={(value, event) => alert('Clicked day: ', {value})}\n          ,\n\n          tileContent: _ref => {\n            let {\n              activeStartDate,\n              date,\n              view\n            } = _ref;\n            return view === 'month' && date.getDay() === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"It's Sunday!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 117\n            }, this) : null;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), acceptedRequests.map(acceptedRequest => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: [acceptedRequest.bandName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 47\n        }, this), acceptedRequest.startDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 48\n        }, this), acceptedRequest.endDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n/*\nexport const MyCalendar = () => {\n\n    const [date, setDate] = useState(new Date())\n\n    useEffect(() => { \n\n        fetch('')\n            .then(response => response.json())\n            .then((startDate) => { \n                setDate(startDate)\n            })\n    }, [])\n\n    return (\n        <>\n            \n            <div className=\"calendar-container\">\n                <Calendar onChange={setDate} value={date} defaultView='month' />\n                <p className=\"bold text-center\">Selected Date: {\"\"}{date.toDateString()}</p>\n            </div>\n            {date.length > 0 ? (\n                <p className='text-center'>\n                    <span className='bold'>Start:</span>{' '}\n                    {date[0].toDateString()}\n                    &nbsp;|&nbsp;\n                    <span className='bold'>End:</span> {date[1].toDateString()}\n                </p>) : (<p className='text-center'>\n                    <span className='bold'>Default selected date:</span>{' '}\n                    {date.toDateString()}\n                </p>)}\n        </>\n    )\n}\n*/\n\n/*\nfunction App() {\n\n  const [value, onChange] = useState([new Date()])\n\n  return (\n    <div>\n      <Calendar\n        onChange={onChange}\n        value={value}\n        defaultView='month'\n        nextLabel='month>>'\n        nextAriaLabel='Go to next month'\n        next2Label='year>>'\n        next2AriaLabel='Go to next year'\n        prevLabel='<<month'\n        prevAriaLabel='Go to prev month'\n        prev2Label='<<year'\n        prev2AriaLabel='Go to prev year'\n        calendarType=\"US\"\n        tileClassName=\"days\"\n        selectRange={true} />\n      {value.toString()}\n\n\n    </div>\n  )\n}\n*/\n_s(StudioCalendar, \"yDKTGnK9pYo/VBBQ9ZFC0i4+tLI=\");\n_c = StudioCalendar;\nvar _c;\n$RefreshReg$(_c, \"StudioCalendar\");","map":{"version":3,"names":["useEffect","useState","Calendar","StudioCalendar","acceptedRequests","setAccepted","Date","fetch","then","response","json","acceptedDates","activeStartDate","date","view","getDay","map","acceptedRequest","bandName","startDate","endDate"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/calendar/Calendar.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css';\n//import {CalendarDates} from \"./CalendarDates.js\"\nimport \"./Calendar.css\"\n\n\nexport const StudioCalendar = () => {\n\n    //const [date, onChange] = useState(new Date())\n    // const [startDate, setStartDate] = useState({})\n    // const [endDate, setEndDate] = useState({})\n    const [acceptedRequests, setAccepted] = useState([new Date()])\n\n    useEffect(() => {\n\n        fetch(`http://localhost:8088/requests?isAccepted=true`)\n            .then(response => response.json())\n            .then(acceptedDates => {\n                setAccepted(acceptedDates)\n            })\n    }, [])\n\n    // const handleSaveDateButton = () => {\n\n    //     const setRecordingDate = {\n    //         start: startDate.date[0].toDateString()\n\n    //     }\n\n    // }\n\n\n    return (\n        <>\n            <div className='calendar'>\n                <h1 className='text-center'>Our Schedule</h1>\n                <div className='calendar-container'>\n                    <Calendar\n                        onChange={setAccepted}\n                        value={acceptedRequests}\n                        defaultView='month'\n                        nextLabel='month>>'\n                        nextAriaLabel='Go to next month'\n                        next2Label='year>>'\n                        next2AriaLabel='Go to next year'\n                        prevLabel='<<month'\n                        prevAriaLabel='Go to prev month'\n                        prev2Label='<<year'\n                        prev2AriaLabel='Go to prev year'\n                        calendarType=\"US\"\n                        tileClassName=\"days\"\n                        selectRange={true}\n                        \n                        \n                        // onClickDay={(value, event) => alert('Clicked day: ', {value})}\n\n                        tileContent={({ activeStartDate, date, view }) => view === 'month' && date.getDay() === 0 ? <p>It's Sunday!</p> : null}\n\n                    />\n\n\n                </div>\n\n\n\n                {/* {date.length > 0 ? (\n                    <p className='text-center'>\n                        <span className='bold'>Start Date:</span>{' '}\n                        {date[0].toDateString()}\n                        &nbsp;|&nbsp;\n                        <span className='bold'>End Date:</span> {date[1].toDateString()}\n                    </p>\n                ) : (\n                    <p className='text-center'>\n                        <span className='bold'>Today's Date:</span>{' '}\n                        {date.toDateString()}\n                    </p>\n                )} */}\n\n\n\n            </div>\n\n            {acceptedRequests.map(acceptedRequest => {\n                return <p className='text-center'>\n                    {acceptedRequest.bandName}<br></br>\n                    {acceptedRequest.startDate}<br></br>\n                    {acceptedRequest.endDate}\n\n\n                </p>\n            })\n\n            }\n\n            {/* <button>\n                Save New Dates\n            </button> */}\n        </>\n\n    )\n}\n\n\n\n\n/*\nexport const MyCalendar = () => {\n\n    const [date, setDate] = useState(new Date())\n\n    useEffect(() => { \n\n        fetch('')\n            .then(response => response.json())\n            .then((startDate) => { \n                setDate(startDate)\n            })\n    }, [])\n\n    return (\n        <>\n            \n            <div className=\"calendar-container\">\n                <Calendar onChange={setDate} value={date} defaultView='month' />\n                <p className=\"bold text-center\">Selected Date: {\"\"}{date.toDateString()}</p>\n            </div>\n            {date.length > 0 ? (\n                <p className='text-center'>\n                    <span className='bold'>Start:</span>{' '}\n                    {date[0].toDateString()}\n                    &nbsp;|&nbsp;\n                    <span className='bold'>End:</span> {date[1].toDateString()}\n                </p>) : (<p className='text-center'>\n                    <span className='bold'>Default selected date:</span>{' '}\n                    {date.toDateString()}\n                </p>)}\n        </>\n    )\n}\n*/\n\n\n/*\nfunction App() {\n\n  const [value, onChange] = useState([new Date()])\n\n  return (\n    <div>\n      <Calendar\n        onChange={onChange}\n        value={value}\n        defaultView='month'\n        nextLabel='month>>'\n        nextAriaLabel='Go to next month'\n        next2Label='year>>'\n        next2AriaLabel='Go to next year'\n        prevLabel='<<month'\n        prevAriaLabel='Go to prev month'\n        prev2Label='<<year'\n        prev2AriaLabel='Go to prev year'\n        calendarType=\"US\"\n        tileClassName=\"days\"\n        selectRange={true} />\n      {value.toString()}\n\n\n    </div>\n  )\n}\n*/"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AACzC;AACA,OAAO,gBAAgB;AAAA;AAAA;AAGvB,OAAO,MAAMC,cAAc,GAAG,MAAM;EAAA;EAEhC;EACA;EACA;EACA,MAAM,CAACC,gBAAgB,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,CAAC,IAAIK,IAAI,EAAE,CAAC,CAAC;EAE9DN,SAAS,CAAC,MAAM;IAEZO,KAAK,CAAE,gDAA+C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,aAAa,IAAI;MACnBN,WAAW,CAACM,aAAa,CAAC;IAC9B,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA;EACA;;EAEA;;EAEA;;EAGA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,UAAU;MAAA,wBACrB;QAAI,SAAS,EAAC,aAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAC7C;QAAK,SAAS,EAAC,oBAAoB;QAAA,uBAC/B,QAAC,QAAQ;UACL,QAAQ,EAAEN,WAAY;UACtB,KAAK,EAAED,gBAAiB;UACxB,WAAW,EAAC,OAAO;UACnB,SAAS,EAAC,SAAS;UACnB,aAAa,EAAC,kBAAkB;UAChC,UAAU,EAAC,QAAQ;UACnB,cAAc,EAAC,iBAAiB;UAChC,SAAS,EAAC,SAAS;UACnB,aAAa,EAAC,kBAAkB;UAChC,UAAU,EAAC,QAAQ;UACnB,cAAc,EAAC,iBAAiB;UAChC,YAAY,EAAC,IAAI;UACjB,aAAa,EAAC,MAAM;UACpB,WAAW,EAAE;;UAGb;UAAA;;UAEA,WAAW,EAAE;YAAA,IAAC;cAAEQ,eAAe;cAAEC,IAAI;cAAEC;YAAK,CAAC;YAAA,OAAKA,IAAI,KAAK,OAAO,IAAID,IAAI,CAACE,MAAM,EAAE,KAAK,CAAC,gBAAG;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAmB,GAAG,IAAI;UAAA;QAAC;UAAA;UAAA;UAAA;QAAA;MAEzH;QAAA;QAAA;QAAA;MAAA,QAGA;IAAA;MAAA;MAAA;MAAA;IAAA,QAoBJ,EAELX,gBAAgB,CAACY,GAAG,CAACC,eAAe,IAAI;MACrC,oBAAO;QAAG,SAAS,EAAC,aAAa;QAAA,WAC5BA,eAAe,CAACC,QAAQ,eAAC;UAAA;UAAA;UAAA;QAAA,QAAS,EAClCD,eAAe,CAACE,SAAS,eAAC;UAAA;UAAA;UAAA;QAAA,QAAS,EACnCF,eAAe,CAACG,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAGxB;IACR,CAAC,CAAC;EAAA,gBAOH;AAGX,CAAC;;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA,GAzIajB,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}