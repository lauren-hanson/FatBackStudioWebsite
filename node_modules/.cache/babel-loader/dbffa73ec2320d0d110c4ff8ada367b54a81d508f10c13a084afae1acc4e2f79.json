{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffEdit.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"./Staff.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StaffEdit = () => {\n  _s();\n  const {\n    staffId\n  } = useParams();\n  const [updateUser, setUpdateUser] = useState({\n    fullName: \"\",\n    email: \"\"\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(`http://localhost:8088/staff?&_expand=title&_expand=user/${staffId}`).then(response => response.json()).then(staffInfo => {\n      setUpdateUser(staffInfo);\n    });\n  }, []);\n  const handleUpdateStaffButton = event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"addStaffHeader\",\n      children: \"Edit Staff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newStaffForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            htmlFor: \"name\",\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            autoFocus: true,\n            type: \"text\",\n            className: \"form-control\",\n            defaultValue: updateUser.fullName,\n            onChange: event => {\n              const copy = {\n                ...updateUser\n              };\n              copy.fullName = event.target.value;\n              setUpdateUser(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            htmlFor: \"email\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            autoFocus: true,\n            type: \"text\",\n            className: \"form-control\",\n            value: updateUser.email,\n            onChange: event => {\n              const copy = {\n                ...updateUser\n              };\n              copy.email = event.target.value;\n              setUpdateUser(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"saveNewStaffButton\",\n        onClick: event => {\n          handleUpdateStaffButton(event);\n        },\n        children: \"Save Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(StaffEdit, \"5mWd2rNJe9x0yqr497IrmkB7G+o=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StaffEdit;\nvar _c;\n$RefreshReg$(_c, \"StaffEdit\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useParams","StaffEdit","staffId","updateUser","setUpdateUser","fullName","email","navigate","fetch","then","response","json","staffInfo","handleUpdateStaffButton","event","preventDefault","copy","target","value"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/staff/StaffEdit.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport \"./Staff.css\"\n\nexport const StaffEdit = () => {\n\n    const { staffId } = useParams()\n\n    const [updateUser, setUpdateUser] = useState({\n        fullName: \"\",\n        email: \"\"\n    })\n\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/staff?&_expand=title&_expand=user/${staffId}`)\n            .then(response => response.json())\n            .then((staffInfo) => {\n               \n                setUpdateUser(staffInfo)\n            })\n    }, [])\n\n    const handleUpdateStaffButton = (event) => {\n        event.preventDefault()\n\n\n\n    }\n\n\n    return (\n\n        <div>\n            <h2 className=\"addStaffHeader\">Edit Staff</h2>\n            <form className=\"newStaffForm\">\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"name\">Name: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            defaultValue={updateUser.fullName}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateUser }\n                                    copy.fullName = event.target.value\n                                    setUpdateUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"email\">Email: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={updateUser.email}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateUser }\n                                    copy.email = event.target.value\n                                    setUpdateUser(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n                {/* \n                <fieldset >\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\" >Title:</label>\n                        <select id=\"title\" required\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateStaff }\n                                    copy.titleId = parseInt(event.target.value)\n                                    setUpdateStaff(copy)\n                                }}>\n                            <option value=\"0\"></option>\n\n                            {\n                                staffTitles.map(\n                                    (title) => {\n                                        return <option\n                                            key={`title--${title.id}`}\n                                            value={title.id}\n                                        >{title.type}\n                                        </option>\n                                    }\n                                )\n                            }\n                        </select>\n\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group dateContainer\">\n                        <label className=\"label\" htmlFor=\"startDate\">Start Date: </label>\n                        <input\n                            required autoFocus\n                            type=\"date\"\n                            className=\"form-control\"\n                            value={updateStaff.startDate}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateStaff }\n                                    copy.startDate = event.target.value\n                                    setUpdateStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset >\n                    <div className=\"form-group imageContainer\">\n                        <label className=\"label\" htmlFor=\"image\">Image: </label>\n                        <input\n                            required autoFocus\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"example.com\"\n                            value={updateStaff.imageURL}\n                            onChange={\n                                (event) => {\n                                    const copy = { ...updateStaff }\n                                    copy.imageURL = event.target.value\n                                    setUpdateStaff(copy)\n                                }\n                            }\n                        />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <input onChange={(evt) => {\n                        const copy = { ...updateStaff }\n                        copy.isAdmin = evt.target.checked\n                        setUpdateStaff(copy)\n                    }}\n                        type=\"checkbox\" id=\"isAdmin\" />\n                    <label htmlFor=\"email\" id=\"isAdmin\"> New Admin? </label>\n                </fieldset> */}\n\n                <button\n                    className=\"saveNewStaffButton\"\n                    onClick={(event) => {\n                        handleUpdateStaffButton(event)\n                    }}\n                >\n                    Save Info\n                </button>\n            </form>\n        </div>\n\n\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAO,aAAa;AAAA;AAEpB,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAE3B,MAAM;IAAEC;EAAQ,CAAC,GAAGF,SAAS,EAAE;EAE/B,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC;IACzCO,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACX,CAAC,CAAC;EAGF,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM;IACZW,KAAK,CAAE,2DAA0DN,OAAQ,EAAC,CAAC,CACtEO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEG,SAAS,IAAK;MAEjBR,aAAa,CAACQ,SAAS,CAAC;IAC5B,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;IACvCA,KAAK,CAACC,cAAc,EAAE;EAI1B,CAAC;EAGD,oBAEI;IAAA,wBACI;MAAI,SAAS,EAAC,gBAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAC9C;MAAM,SAAS,EAAC,cAAc;MAAA,wBAC1B;QAAA,uBACI;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAO,SAAS,EAAC,OAAO;YAAC,OAAO,EAAC,MAAM;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAe,eACtD;YACI,QAAQ;YAAC,SAAS;YAClB,IAAI,EAAC,MAAM;YACX,SAAS,EAAC,cAAc;YACxB,YAAY,EAAEZ,UAAU,CAACE,QAAS;YAClC,QAAQ,EACHS,KAAK,IAAK;cACP,MAAME,IAAI,GAAG;gBAAE,GAAGb;cAAW,CAAC;cAC9Ba,IAAI,CAACX,QAAQ,GAAGS,KAAK,CAACG,MAAM,CAACC,KAAK;cAClCd,aAAa,CAACY,IAAI,CAAC;YACvB;UACH;YAAA;YAAA;YAAA;UAAA,QACH;QAAA;UAAA;UAAA;UAAA;QAAA;MACA;QAAA;QAAA;QAAA;MAAA,QACC,eAEX;QAAA,uBACI;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAO,SAAS,EAAC,OAAO;YAAC,OAAO,EAAC,OAAO;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgB,eACxD;YACI,QAAQ;YAAC,SAAS;YAClB,IAAI,EAAC,MAAM;YACX,SAAS,EAAC,cAAc;YACxB,KAAK,EAAEb,UAAU,CAACG,KAAM;YACxB,QAAQ,EACHQ,KAAK,IAAK;cACP,MAAME,IAAI,GAAG;gBAAE,GAAGb;cAAW,CAAC;cAC9Ba,IAAI,CAACV,KAAK,GAAGQ,KAAK,CAACG,MAAM,CAACC,KAAK;cAC/Bd,aAAa,CAACY,IAAI,CAAC;YACvB;UACH;YAAA;YAAA;YAAA;UAAA,QACH;QAAA;UAAA;UAAA;UAAA;QAAA;MACA;QAAA;QAAA;QAAA;MAAA,QACC,eA+EX;QACI,SAAS,EAAC,oBAAoB;QAC9B,OAAO,EAAGF,KAAK,IAAK;UAChBD,uBAAuB,CAACC,KAAK,CAAC;QAClC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGG;IAAA;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAId,CAAC;AAAA,GAlKYb,SAAS;EAAA,QAEED,SAAS,EAQZD,WAAW;AAAA;AAAA,KAVnBE,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}