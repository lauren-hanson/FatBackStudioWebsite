{"ast":null,"code":"// import { DAYS } from \"./conts\";\n\n// export const getDaysInMonth = (date) => {\n//     return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n// };\n\n// export const range = (end) => {\n//     const { result } = Array.from({ length: end }).reduce(\n//         ({ result, current }) => ({\n//             result: [...result, current],\n//             current: current + 1\n//         }),\n//         { result: [], current: 1 }\n//     );\n//     return result;\n// };\n\n// export const sortDays = (date) => {\n//     const dayIndex = new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n//     const sortedDays = [...DAYS.slice(dayIndex), ...DAYS.slice(0, dayIndex)];\n//     return sortedDays;\n// };\n\n// export const datesAreOnSameDay = (first, second) =>\n//     first.getFullYear() === second.getFullYear() &&\n//     first.getMonth() === second.getMonth() &&\n//     first.getDate() === second.getDate();\n\n// export const getMonthYear = (date) => {\n//     const d = date.toDateString().split(\" \");\n//     return `${d[1]} ${d[3]}`;\n// };\n\n// export const nextMonth = (date, cb) => {\n//     const mon = date.getMonth();\n//     if (mon < 11) {\n//         date.setMonth(mon + 1);\n//     } else {\n//         date.setMonth(0);\n//         date.setFullYear(date.getFullYear() + 1);\n//     }\n//     cb(new Date(date));\n// };\n\n// export const prevMonth = (date, cb) => {\n//     const mon = date.getMonth();\n//     if (mon > 0) {\n//         date.setMonth(mon - 1);\n//     } else {\n//         date.setMonth(11);\n//         date.setFullYear(date.getFullYear() - 1);\n//     }\n//     cb(new Date(date));\n// };\n\n// export const getDarkColor = () => {\n//     var color = \"#\";\n//     for (var i = 0; i < 6; i++) {\n//         color += Math.floor(Math.random() * 10);\n//     }\n//     return color;\n// };","map":{"version":3,"names":[],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/calender/utils.js"],"sourcesContent":["// import { DAYS } from \"./conts\";\n\n// export const getDaysInMonth = (date) => {\n//     return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n// };\n\n// export const range = (end) => {\n//     const { result } = Array.from({ length: end }).reduce(\n//         ({ result, current }) => ({\n//             result: [...result, current],\n//             current: current + 1\n//         }),\n//         { result: [], current: 1 }\n//     );\n//     return result;\n// };\n\n// export const sortDays = (date) => {\n//     const dayIndex = new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n//     const sortedDays = [...DAYS.slice(dayIndex), ...DAYS.slice(0, dayIndex)];\n//     return sortedDays;\n// };\n\n// export const datesAreOnSameDay = (first, second) =>\n//     first.getFullYear() === second.getFullYear() &&\n//     first.getMonth() === second.getMonth() &&\n//     first.getDate() === second.getDate();\n\n// export const getMonthYear = (date) => {\n//     const d = date.toDateString().split(\" \");\n//     return `${d[1]} ${d[3]}`;\n// };\n\n// export const nextMonth = (date, cb) => {\n//     const mon = date.getMonth();\n//     if (mon < 11) {\n//         date.setMonth(mon + 1);\n//     } else {\n//         date.setMonth(0);\n//         date.setFullYear(date.getFullYear() + 1);\n//     }\n//     cb(new Date(date));\n// };\n\n// export const prevMonth = (date, cb) => {\n//     const mon = date.getMonth();\n//     if (mon > 0) {\n//         date.setMonth(mon - 1);\n//     } else {\n//         date.setMonth(11);\n//         date.setFullYear(date.getFullYear() - 1);\n//     }\n//     cb(new Date(date));\n// };\n\n// export const getDarkColor = () => {\n//     var color = \"#\";\n//     for (var i = 0; i < 6; i++) {\n//         color += Math.floor(Math.random() * 10);\n//     }\n//     return color;\n// };\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}