{"ast":null,"code":"var _jsxFileName = \"/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/AddArtist.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Artist.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddArtist = () => {\n  _s();\n  const [artists, setArtists] = useState([]);\n  const [newArtists, setNewArtist] = useState({\n    artistName: \"\",\n    imageURL: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    notes: \"\"\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(`http://localhost:8088/artists`).then(response => response.json()).then(newArtistInfo => {\n      setArtists(newArtistInfo);\n    });\n  }, []);\n  const handleSaveNewArtistButton = event => {\n    event.preventDefault();\n    const newArtistToSendToAPI = {\n      artistName: newArtists.artistName,\n      imageURL: newArtists.imageURL,\n      startDate: newArtists.startDate,\n      endDate: newArtists.endDate,\n      notes: newArtists.notes\n    };\n    return fetch(`http://localhost:8088/artists`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newArtistToSendToAPI)\n    }).then(response => response.json()).then(() => {\n      navigate(\"/artists\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addArtistForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"addArtistFormHeader\",\n        children: \"Add New Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            htmlFor: \"name\",\n            children: \"Band Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            id: \"name\",\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Artist Name\",\n            value: newArtists.artistName,\n            onChange: event => {\n              const copy = {\n                ...newArtists\n              };\n              copy.artistName = event.target.value;\n              setNewArtist(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            htmlFor: \"name\",\n            children: \"Recording Start Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            id: \"name\",\n            type: \"date\",\n            className: \"form-control\",\n            placeholder: \"Artist Name\",\n            value: newArtists.startDate,\n            onChange: event => {\n              const copy = {\n                ...newArtists\n              };\n              copy.startDate = event.target.value;\n              setNewArtist(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            htmlFor: \"name\",\n            children: \"Recording End Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            id: \"name\",\n            type: \"date\",\n            className: \"form-control\",\n            placeholder: \"Artist Name\",\n            value: newArtists.endDate,\n            onChange: event => {\n              const copy = {\n                ...newArtists\n              };\n              copy.endDate = event.target.value;\n              setNewArtist(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Image URL: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            id: \"imgURL\",\n            type: \"file\",\n            className: \"form-control\"\n            //placeholder=\"example.com\"\n            ,\n            value: newArtists.imageURL,\n            onChange: event => {\n              const copy = {\n                ...newArtists\n              };\n              copy.imageURL = event.target.value;\n              setNewArtist(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            htmlFor: \"notes\",\n            children: \"Notes: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            required: true,\n            id: \"notes\",\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"\",\n            value: newArtists.notes,\n            onChange: event => {\n              const copy = {\n                ...newArtists\n              };\n              copy.notes = event.target.value;\n              setNewArtist(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"saveButton\",\n        onClick: event => {\n          handleSaveNewArtistButton(event);\n        },\n        children: \"Add New Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(AddArtist, \"Rk7iNgvMssVsBFjH99ezidDb8K0=\", false, function () {\n  return [useNavigate];\n});\n_c = AddArtist;\nvar _c;\n$RefreshReg$(_c, \"AddArtist\");","map":{"version":3,"names":["useEffect","useState","useNavigate","AddArtist","artists","setArtists","newArtists","setNewArtist","artistName","imageURL","startDate","endDate","notes","navigate","fetch","then","response","json","newArtistInfo","handleSaveNewArtistButton","event","preventDefault","newArtistToSendToAPI","method","headers","body","JSON","stringify","copy","target","value"],"sources":["/Users/lohanson/Desktop/FatBackStudio/fatback-studio/src/components/artists/AddArtist.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Artist.css\"\n\nexport const AddArtist = () => {\n\n    const [artists, setArtists] = useState([])\n    const [newArtists, setNewArtist] = useState({\n        artistName: \"\",\n        imageURL: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        notes: \"\"\n    })\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n\n        fetch(`http://localhost:8088/artists`)\n            .then(response => response.json())\n            .then(newArtistInfo => {\n                setArtists(newArtistInfo)\n            })\n\n    }, []\n    )\n\n    const handleSaveNewArtistButton = (event) => {\n        event.preventDefault()\n\n        const newArtistToSendToAPI = {\n            artistName: newArtists.artistName,\n            imageURL: newArtists.imageURL,\n            startDate: newArtists.startDate,\n            endDate: newArtists.endDate,\n            notes: newArtists.notes\n        }\n\n        return fetch(`http://localhost:8088/artists`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newArtistToSendToAPI)\n        })\n\n            .then((response) => response.json())\n            .then(() => {\n                navigate(\"/artists\")\n            })\n\n    }\n\n    return (\n\n        <div className=\"addArtistForm\">\n            <form>\n                <h2 className=\"addArtistFormHeader\">Add New Artist</h2>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"name\">Band Name: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={newArtists.artistName}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.artistName = event.target.value\n                                setNewArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"name\">Recording Start Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={newArtists.startDate}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.startDate = event.target.value\n                                setNewArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n                            \n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"name\">Recording End Date: </h3>\n                        <input\n                            required\n                            id=\"name\"\n                            type=\"date\"\n                            className=\"form-control\"\n                            placeholder=\"Artist Name\"\n                            value={newArtists.endDate}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.endDate = event.target.value\n                                setNewArtist(copy)\n                            }} />\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                <div className=\"form-group\">\n                        <h3>Image URL: </h3>\n                        <input\n                            required\n                            id=\"imgURL\"\n                            type=\"file\"\n                            className=\"form-control\"\n                            //placeholder=\"example.com\"\n                            value={newArtists.imageURL}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.imageURL = event.target.value\n                                setNewArtist(copy)\n                            }}\n                        />\n                    </div>\n                    {/* <div className=\"form-group\">\n                        <h3 htmlFor=\"imgURL\">Image URL: </h3>\n                        <input\n                            required\n                            id=\"imgURL\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"example.com\"\n                            value={newArtists.imageURL}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.imageURL = event.target.value\n                                setNewArtist(copy)\n                            }}\n                        />\n                    </div> */}\n                </fieldset>\n\n                <fieldset>\n                    <div className=\"form-group\">\n                        <h3 htmlFor=\"notes\">Notes: </h3>\n                        <textarea\n                            required\n                            id=\"notes\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"\"\n                            value={newArtists.notes}\n                            onChange={(event) => {\n                                const copy = { ...newArtists }\n                                copy.notes = event.target.value\n                                setNewArtist(copy)\n                            }}\n                        ></textarea>\n                    </div>\n                </fieldset>\n\n                <button\n                    className=\"saveButton\"\n                    onClick={(event) => {\n                        handleSaveNewArtistButton(event)\n                    }}\n                >\n                    Add New Artist\n                </button>\n            </form>\n        </div>\n\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}